{"version":3,"sources":["logo.svg","constants/userConstants.js","reducers/userReducers.js","constants/shiftConstants.js","reducers/shiftReducers.js","context.js","actions/userActions.js","components/Header.js","screens/HomeScreen.js","components/FormContainer.js","components/Message.js","screens/RegisterScreen.js","components/Loader.js","screens/LoginScreen.js","actions/shiftActions.js","screens/ProfileScreen.js","screens/ProfileUpdateScreen.js","constants/month.js","screens/ShiftConfirmScreen.js","components/ShiftItemUpdateForm.js","screens/ShiftUpdateScreen.js","components/ShiftItemForm.js","screens/ShiftSubmitScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_RESET","loginInitialState","userInfo","localStorage","getItem","JSON","parse","error","loading","profileInitialState","profile","SHIFT_REQUEST","SHIFT_SUCCESS","SHIFT_ADD_ITEM","SHIFT_REMOVE_ITEM","SHIFT_CHANGE_STATUS","SHIFT_RESET","shiftInitialState","shiftItems","isSubmitted","period","endOfDay","startOfMonth","addMonths","Date","endOfMonth","deadline","subDays","makeStore","reducer","initialState","storeContext","React","createContext","dispatchContext","children","useReducer","store","dispatch","Provider","value","useContext","state","action","type","payload","LoginProvider","useLoginStore","useLoginDispatch","ProfileProvider","useProfileStore","useProfileDispatch","item","existItem","find","x","date","map","filter","ShiftProvider","useShiftStore","useShiftDispatch","login","email","password","a","config","headers","axios","post","data","setItem","stringify","response","detail","message","getProfile","Authorization","token","get","Header","loginDispatch","shiftDispatch","profileDispatch","Navbar","bg","variant","collapseOnSelect","Container","Brand","Nav","className","NavDropdown","title","name","id","to","Item","onClick","removeItem","logout","Link","HomeScreen","history","useEffect","push","FormContainer","Row","Col","xs","md","Message","Alert","RegisterScreen","useState","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","setMessage","loginState","submitHandler","e","preventDefault","Form","onSubmit","Group","controlId","Label","Control","required","placeholder","onChange","target","Button","Loader","Spinner","animation","role","style","height","width","margin","display","LoginScreen","location","redirect","search","split","addShiftItem","isWork","startTime","endTime","isAllDay","removeShiftItem","changeSubmitStatus","ProfileScreen","shifts","setShifts","profileState","profileLoading","shiftState","getStringDate","dt","getFullYear","getMonth","slice","getDate","fetchShifts","i","length","period_start","sm","size","varinat","disabled","color","String","format","console","log","Table","striped","hover","responsive","shift","_id","period_end","is_confirmed","duty","section","employment_status","is_rookie","is_open_staff","is_pre_close_staff","is_close_staff","start_default","substring","end_default","desired_times_per_week","desired_working_time","commute","station","ProfileUpdateScreen","setDuty","setSection","employment","setEmployment","isRookie","setIsRookie","isOpen","setIsOpen","isPreClose","setIsPreClose","isClose","setIsClose","startDefault","setStartDefault","endDefault","setEndDefault","weeklyWork","setWeeklyWork","workTime","setWorkTime","setCommute","setStation","setLoading","window","confirm","put","background","as","cursor","min","step","change","text","openOnFocus","strictMode","showClearButton","allowEdit","require","startOfWeek","endOfWeek","startOfDay","addDays","takeWeek","start","week","Array","_","takeMonth","month","lastDayOfRange","range","weekGenerator","endDate","ShiftConfirmScreen","match","shiftId","params","setShift","days","fetchShift","borderBottom","Fragment","lg","xl","Card","getDay","Body","Title","Text","start_time","end_time","ShiftItemUpdateForm","flag","shiftItem","setIsWork","setIsAllDay","setStartTime","setEndTime","isDefault","setIsDefault","is_work","is_all_day","enabled","Check","label","checked","ShiftUpdateScreen","remarks","setRemarks","j","element","row","ShiftItemForm","chooseCursor","ShiftSubmitScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33ed3ae0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\n\n    ","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n} from '../constants/userConstants'\n\nconst userInfoFromStrage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst profileFromStrage = localStorage.getItem('profile') ?\n    JSON.parse(localStorage.getItem('profile')) : {}\n\n//initial state\nexport const loginInitialState = {\n    userInfo: userInfoFromStrage,\n    error: false,\n    loading: true\n}\nexport const profileInitialState = {\n    profile: profileFromStrage,\n    error: false,\n    loading: true,\n}\n\n//reducer\nexport const userLoginReducer = (state, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo : action.payload}\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: true}\n        case USER_LOGOUT:\n            return { userInfo: null}\n        default:\n            return state\n    }\n}\n\n\n    \nexport const userProfileReducer = (state, action) => {\n    switch (action.type) {\n        case USER_PROFILE_REQUEST:\n            return { ...state, loading: true }\n        case USER_PROFILE_SUCCESS:\n            return { ...state, loading: false, profile : action.payload}\n        case USER_PROFILE_FAIL:\n            return { ...state, loading: false, error: true}\n        case USER_PROFILE_RESET:\n            return profileInitialState\n        default:\n            return state\n    }\n}\n// export const useUserLoginReducer = () => {\n//     const [state, dispatch] = useReducer(userLoginReducer, initialState)\n//     return [state, dispatch] \n// }\n\n// export const useUserRegisterReducer = () => {\n//     const [state, dispatch] = useReducer(userRegisterReducer, initialState)\n//     return [state, dispatch] \n// }","export const SHIFT_REQUEST = 'SHIFT_REQUEST'\nexport const SHIFT_SUCCESS = 'SHIFT_SUCCESS'\nexport const SHIFT_ADD_ITEM = 'SHIFT_ADD_ITEM'\nexport const SHIFT_UPDATE_ITEM = 'SHIFT_UPDATE_ITEM'\nexport const SHIFT_REMOVE_ITEM = 'SHIFT_REMOVE_ITEM'\nexport const SHIFT_CHANGE_STATUS = 'SHIFT_CHANGE_STATUS'\nexport const SHIFT_RESET = 'SHIFT_RESET'","import {\n    SHIFT_REQUEST,\n    SHIFT_SUCCESS,\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_RESET,\n} from '../constants/shiftConstants'\n\nimport { startOfMonth, endOfMonth, subDays, addMonths, endOfDay } from 'date-fns'\n\n\n\n\n//initial state\nexport const shiftInitialState = {\n    shiftItems: [],\n    isSubmitted: false,\n    loading: false,\n    period: [\n        endOfDay(startOfMonth(addMonths(new Date(), 1))),\n        endOfDay(endOfMonth(addMonths(new Date(), 1)))\n    ],\n    deadline: subDays(endOfDay(endOfMonth(new Date())), 10),\n}\n\n//ruducers\nexport const shiftReducer = (state, action) => {\n    switch (action.type) {\n        case SHIFT_REQUEST:\n            return { ...state, loading: true}\n        case SHIFT_SUCCESS:\n            return { ...state, loading: false}\n        case SHIFT_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.shiftItems.find(x => x.date === item.date)\n            if (existItem) {\n                //update\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: state.shiftItems.map(x => x.date === existItem.date ? item : x)\n                }\n            } else {\n                //truly add\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: [...state.shiftItems, item]\n                }\n            }\n        case SHIFT_REMOVE_ITEM:\n            return {\n                ...state,\n                loading: false,\n                shiftItems: state.shiftItems.filter(x => x.date !== action.payload)\n            }\n        case SHIFT_CHANGE_STATUS:\n            return {\n                ...state,\n                loading: false,\n                isSubmitted: true\n            }\n        case SHIFT_RESET:\n            return shiftInitialState\n        default:\n            return state\n    }\n}\n","import React, { useReducer } from 'react'\nimport { userLoginReducer, loginInitialState, userProfileReducer, profileInitialState } from './reducers/userReducers'\nimport { shiftReducer, shiftInitialState } from './reducers/shiftReducers'\n\n\n\nexport const makeStore = (reducer, initialState) => {\n    const storeContext = React.createContext()\n    const dispatchContext = React.createContext()\n\n    const StoreProvider = ({ children }) => {\n        const [store, dispatch] = useReducer(reducer, initialState);\n    \n        return (\n            <dispatchContext.Provider value={dispatch}>\n                <storeContext.Provider value={store}>\n                    { children }\n                </storeContext.Provider>\n            </dispatchContext.Provider>\n        )\n    }\n\n    const useStore = () => {\n      return React.useContext(storeContext);\n    }\n\n    const useDispatch = () => {\n      return React.useContext(dispatchContext);\n    }\n\n    return [StoreProvider, useStore, useDispatch]\n}\n\nexport const [LoginProvider, useLoginStore, useLoginDispatch] = makeStore(userLoginReducer, loginInitialState)\nexport const [ProfileProvider, useProfileStore, useProfileDispatch] = makeStore(userProfileReducer, profileInitialState)\nexport const [ShiftProvider, useShiftStore, useShiftDispatch] = makeStore(shiftReducer, shiftInitialState)\n\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n } from '../constants/userConstants'\n\n\n\nexport const login = async (email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                :error.message,\n        })\n    }\n}\n\n\n\nexport const logout = (loginDispatch, profileDispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('profile')\n    loginDispatch({ type: USER_LOGOUT })\n    // profileDispatch({ type: USER_PROFILE_RESET }) \n}\n\n\nexport const register = async (name, email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getProfile = async (dispatch, userInfo) => {\n    dispatch({ type: USER_PROFILE_REQUEST })\n    \n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            Authorization : `Bearer ${userInfo.token}`\n        }\n    }\n    const { data } = await axios.get(\n        '/api/users/profile/',\n        config\n    )\n    dispatch({\n        type: USER_PROFILE_SUCCESS,\n        payload: data\n    })\n\n    localStorage.setItem('profile', JSON.stringify(data))\n}","import React, { useState, useEffect } from 'react'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useLoginStore, useLoginDispatch, useProfileDispatch, useShiftDispatch, useShiftStore, useProfileStore } from '../context'\nimport { logout } from '../actions/userActions'\nimport { SHIFT_RESET } from '../constants/shiftConstants'\nimport { USER_PROFILE_RESET } from '../constants/userConstants'\n\n\nfunction Header() {\n    const state = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const { userInfo } = state\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const {profile} = profileState\n    const profileDispatch = useProfileDispatch()\n    \n\n    const logoutHandler = () => {\n        logout(loginDispatch)\n        shiftDispatch({type: SHIFT_RESET})\n        profileDispatch({type: USER_PROFILE_RESET})\n    }\n\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' collapseOnSelect>\n                <Container>\n                    <Navbar.Brand>Shift Web</Navbar.Brand>\n                        <Nav className='mr-auto p-1'>\n\n                            {userInfo ? (\n                                <NavDropdown title={profile.name} id='username' className='px-4'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>                        \n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            )}\n                        </Nav>\n                \n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { useLoginStore } from '../context'\n\nfunction HomeScreen({history}) {\n    \n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n       \n        history.push('/login')\n        \n    }, [])\n\n    return (\n        <>\n            <h1>Home Page</h1>\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer( {children} ) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React, {useState, useEffect, useReducer} from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { login, register } from '../actions/userActions'\n\nimport axios from 'axios'\n\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\n\nimport { useRegisterStore, useLoginStore, useLoginDispatch } from '../context'\n\nfunction RegisterScreen({history}) {\n    //useState\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    const loginState = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const {userInfo, loading, error} = loginState\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    },[history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password do not match')\n        } else {\n            await axios.post(\n                '/api/users/register/',\n                { 'name': name, 'email': email, 'password': password },\n            )\n            login(email, password, loginDispatch)\n        }\n    }\n\n\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name' className='mb-4'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email' className='mb-4'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password' className='mb-4'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm' className='mb-4'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '50px',\n                width: '50px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            {/* <span className=\"sr-only\">Loading...</span> */}\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport { Form, Button,Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { useLoginStore, useLoginDispatch } from '../context'\n\n\nfunction LoginScreen({history, location}) {\n    // const [state, dispatch] = useUserLoginReducer()\n    const state = useLoginStore()\n    const dispatch = useLoginDispatch()\n    const {userInfo, error} = state\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/profile')\n        }\n    },[history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        login(email, password, dispatch)\n    }\n\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            \n            {error && <Message variant='danger'>'メールアドレスかパスワードが間違っています'</Message>}\n            \n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={\n                            (e) => setEmail(e.target.value) \n                        }\n                    ></Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={\n                            (e) => setPassword(e.target.value)\n                        }\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    New Customer?\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        {' '} Register\n                    </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n\n    )\n}\n\nexport default LoginScreen\n","import {\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_RESET,\n} from '../constants/shiftConstants'\n\n\nexport const addShiftItem = (dispatch, date, isWork, startTime, endTime, isAllDay) => {\n    dispatch({\n        type: SHIFT_ADD_ITEM,\n        payload: {\n            date,\n            isWork,\n            startTime,\n            endTime,\n            isAllDay\n        }\n    })\n}\n\nexport const removeShiftItem = (dispatch, date) => {\n    dispatch({\n        type: SHIFT_REMOVE_ITEM,\n        payload: date\n    })\n}\n\nexport const changeSubmitStatus = (dispatch) => {\n    dispatch({\n        type: SHIFT_CHANGE_STATUS,\n    })\n}\n","import React, { useEffect, useState, useReducer } from 'react'\nimport { Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore, useProfileDispatch, useProfileStore, useShiftDispatch, useShiftStore} from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { changeSubmitStatus } from '../actions/shiftActions'\nimport { SHIFT_REQUEST, SHIFT_SUCCESS } from '../constants/shiftConstants'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { format } from 'date-fns'\n\nfunction ProfileScreen({ history }) {\n    \n    const [shifts, setShifts] = useState([])\n\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile, loading: profileLoading } = profileState\n    const shiftState = useShiftStore()\n    const { period, deadline, isSubmitted, loading } = shiftState\n    const shiftDispatch = useShiftDispatch()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShifts() {\n                shiftDispatch({type: SHIFT_REQUEST})\n                const { data } = await axios.get(\n                    `/api/shifts/myshifts/`,\n                    config\n                )\n                setShifts(data)\n                \n                for (let i = 0; i < data.length; i++){\n                    if (data[i].period_start === getStringDate(period[0])) {\n                        changeSubmitStatus(shiftDispatch)\n                    }\n                }\n                \n                shiftDispatch({type: SHIFT_SUCCESS})\n            }\n            fetchShifts()\n        }\n        \n    }, [history, userInfo])\n\n    return (\n        <div>\n            <h1>ようこそ {profile.name} さん</h1>\n            <Row className='py-3'>\n                \n\n                {loading ? <Loader />\n                    :\n                    <Col md={5} sm={12} className='py-2'>\n                        <h4>シフト提出</h4>\n                        <Container className='border'>\n                            <LinkContainer to='/shifts/submit' className='d-grid gap-2 my-3 p-1'>\n                                <Button size='lg' varinat='primary' disabled={isSubmitted || (new Date() > deadline)}>今月分はこちらから <p className='m-0'>{getStringDate(period[0])} ~ { getStringDate(period[1])}</p></Button>\n                            </LinkContainer>\n                            <p className='my-0 py-0'>提出状態： {isSubmitted ?　<i style={{color: 'blue'}}>提出済み</i> : <i style={{color: 'red'}}>未提出</i>}</p>\n                            <p className='my-0 py-0'>提出期限： {String(format(deadline, \"yyyy-MM-dd' 'HH:mm\"))} まで</p>\n                            {(!isSubmitted && (new Date() > deadline)) &&\n                                <Message variant='danger'>期限内に提出できていません → 担当マネージャーに連絡！</Message>\n                            }\n                        </Container>\n\n                        \n                        <h4 className='mt-5'>シフト管理</h4>\n                        {console.log(shifts)}\n                        {shifts.length === 0 ? <Message variant='info'>シフトがありません</Message> :\n                            <Table striped hover responsive className='table-sm border' >\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>PERIOD</th>\n                                        <th>STATUS</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {shifts.map((shift) => (\n                                        <tr key={shift._id}>\n                                            <td>{shift._id}</td>\n                                            <td>{shift.period_start} {' '} ~ {' '}{shift.period_end}</td>\n                                            <td>{shift.is_confirmed ? '確定' : '未確定'}</td>\n                                            <td>\n                                                { shift.is_confirmed ? \n                                                    <LinkContainer to={`/shifts/confirm/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-primary'>詳細</Button>\n                                                    </LinkContainer> \n                                                    :\n                                                    <LinkContainer to={`/shifts/update/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-info'>更新</Button>\n                                                    </LinkContainer> \n                                                }\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>          \n                        }\n                        \n                    </Col>\n                }\n\n\n\n                {profileLoading ? <Loader /> :\n                    <Col md={7} sm={12} className='py-2'>\n\n                    <Row>\n                        <Col md ={10} sm={10} xs={10}>\n                            <h4>プロフィール</h4>\n                        </Col>\n                        <Col md={2} sm={2} xs={2} className='m-0 px-0 pb-2 text-center'>\n                            <LinkContainer to={'/update/profile'}>\n                                    <Button variant='outline-secondary'className='btn-sm'>編集</Button>\n                            </LinkContainer>\n                        </Col>\n                    </Row>\n                        \n\n\n                        <Table striped hover responsive className='table-sm border'>\n                            <thead>\n                                <tr>\n                                    <th>Key</th>\n                                    <th>Value</th>\n                                    <th>Remarks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>{profile._id}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>名前</td>\n                                    <td>{profile.name}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>職務</td>\n                                    <td>{profile.duty}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>セクション</td>\n                                    <td>{profile.section}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>雇用形態</td>\n                                    <td>{profile.employment_status}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>研修中</td>\n                                    <td>{profile.is_rookie ? '研修中' : '修了'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>オープン</td>\n                                    <td>{profile.is_open_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>10時締め</td>\n                                    <td>{profile.is_pre_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>締め</td>\n                                    <td>{profile.is_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 業務開始時間</td>\n                                    <td> {profile.start_default.substring(0,5)}</td>\n                                    <td>シフト提出時に自動入力される値になります</td>\n                                </tr>\n                                <tr>\n                                    <td> 業務終了時間</td>\n                                    <td> {profile.end_default.substring(0,5)}</td>\n                                    <td>シフト提出時に自動入力される値になります</td>\n                                </tr>\n                                <tr>\n                                    <td> 週間希望シフト回数</td>\n                                    <td> 週{profile.desired_times_per_week}回</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 希望就労時間</td>\n                                    <td> {profile.desired_working_time}時間/回</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 通勤方法</td>\n                                    <td> {profile.commute}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 最寄り駅</td>\n                                    <td> {profile.station}</td>\n                                    <td> 当社最寄り駅/バス停までの最短経路が交通費支給額となります</td>\n                                </tr>\n                            \n                            </tbody>\n                        </Table>\n                    </Col>\n                } \n\n\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useProfileDispatch, useProfileStore, useLoginStore } from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\n\n\nfunction ProfileUpdateScreen({history}) {\n    //local states\n    const [name, setName] = useState('')\n    const [duty, setDuty] = useState('')\n    const [section, setSection] = useState('')\n    const [employment, setEmployment] = useState('')\n    const [isRookie, setIsRookie] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [isPreClose, setIsPreClose] = useState(false)\n    const [isClose, setIsClose] = useState(false)\n    const [startDefault, setStartDefault] = useState('')\n    const [endDefault, setEndDefault] = useState('')\n    const [weeklyWork, setWeeklyWork] = useState('')\n    const [workTime, setWorkTime] = useState('')\n    const [commute, setCommute] = useState('')\n    const [station, setStation] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    //global states\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            profile.name ? setName(profile.name) : setName('名前がありません')\n            profile.duty ? setDuty(profile.duty) : setDuty('')\n            profile.employment_status ? setEmployment(profile.employment_status) : setEmployment('')\n            profile.section ? setSection(profile.section) : setSection('')\n            profile.is_rookie ? setIsRookie(profile.is_rookie) : setIsRookie(false)\n            profile.is_open_staff ? setIsOpen(profile.is_open_staff) : setIsOpen(false)\n            profile.is_pre_close_staff ? setIsPreClose(profile.is_pre_close_staff) : setIsPreClose(false)\n            profile.is_close_staff ? setIsClose(profile.is_close_staff) : setIsClose(false)\n            profile.start_default ? setStartDefault(profile.start_default) : setStartDefault('')\n            profile.end_default ? setEndDefault(profile.end_default) : setEndDefault('')\n            profile.desired_times_per_week ? setWeeklyWork(profile.desired_times_per_week) : setWeeklyWork(0)\n            profile.desired_working_time ? setWorkTime(profile.desired_working_time) : setWorkTime(0)\n            profile.commute ? setCommute(profile.commute) : setCommute('')\n            profile.station ? setStation(profile.station) : setStation('')\n\n            setLoading(false)\n        }\n\n        if(!startDefault && !endDefault) {\n            setStartDefault(profile.start_default.substring(0,5))\n            setEndDefault(profile.end_default.substring(0,5))\n        }\n    }, [history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        console.log('submitted!')\n        console.log(name, duty, section, isRookie, isOpen, isPreClose, isClose, startDefault, endDefault, weeklyWork, workTime, commute, station)\n        if (window.confirm('プロフィールの更新をしますか？')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.put(\n                `/api/users/update/profile/`,\n                {\n                    \"name\": name,\n                    \"duty\": duty,\n                    \"employment\": employment,\n                    \"section\": section,\n                    \"isRookie\": isRookie,\n                    \"isOpen\": isOpen,\n                    \"isPreClose\": isPreClose,\n                    \"isClose\": isClose,\n                    \"startDefault\": startDefault,\n                    \"endDefault\": endDefault,\n                    \"weeklyTime\": weeklyWork,\n                    \"workTime\": workTime,\n                    \"commute\": commute,\n                    \"station\": station\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    }\n\n    return (\n        <>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            {loading ? <Loader/> :\n            <FormContainer>\n                <Form onSubmit={submitHandler} className='border p-3'>\n                    <Form.Group controlId='name'>\n                        <Form.Label className='mt-3 mb-0'>名前</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='名前を記入'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='duty'>\n                        <Form.Label className='mt-3 mb-0'>職務</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={duty}\n                            onChange={(e) => setDuty(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'アルバイトリーダー'}>アルバイトリーダー</option>\n                            <option value={'アルバイト'}>アルバイト</option>\n                            <option value={''}>「職務」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='employment'>\n                        <Form.Label className='mt-3 mb-0'>雇用形態</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={employment}\n                            onChange={(e) => setEmployment(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'フリーター（週40時間）'}>フリーター（週40時間）</option>\n                            <option value={'フリーター（週20時間）'}>フリーター（週20時間）</option>\n                            <option value={'学生'}>学生</option>\n                            <option value={''}>「雇用形態」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='section'>\n                        <Form.Label className='mt-3 mb-0'>セクション</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={section}\n                            onChange={(e) => setSection(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'フロント'}>フロント</option>\n                            <option value={'映写'}>映写</option>\n                            <option value={'コンセッション'}>コンセッション</option>\n                            <option value={'ボックス'}>ボックス</option>\n                            <option value={'ショップ'}>ショップ</option>\n                            <option value={''}>「セクション」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isRookie'>\n                        <Form.Label className='mt-3 mb-0'>研修</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isRookie}\n                            onChange={() => setIsRookie(!isRookie)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>研修中</option>\n                            <option value={false}>完了</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isOpen'>\n                        <Form.Label className={'mt-3 mb-0'}>オープン</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isOpen}\n                            onChange={() => setIsOpen(!isOpen)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isPreClose'>\n                        <Form.Label className='mt-3 mb-0'>10時締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isPreClose}\n                            onChange={() => setIsPreClose(!isPreClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isClose'>\n                        <Form.Label className={'mt-3 mb-0'}>締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isClose}\n                            onChange={() => setIsClose(!isClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務開始時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='開始時間を選択'\n                        value={startDefault}\n                        min={new Date('01/01/2021 07:00 AM')}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setStartDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{cursor: 'pointer'}}\n                    ></TimePickerComponent>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務終了時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='終了時間を選択'\n                        value={endDefault}\n                        min={new Date('01/01/2021 ' + startDefault)}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setEndDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{ cursor: 'pointer' }}\n                    ></TimePickerComponent>\n\n                    <Form.Group controlId='weeklyWork'>\n                        <Form.Label className={'mt-3 mb-0'}>週間希望シフト回数</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={weeklyWork}\n                            onChange={(e) => setWeeklyWork(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={1}>1回</option>\n                            <option value={2}>2回</option>\n                            <option value={3}>3回</option>\n                            <option value={4}>4回</option>\n                            <option value={5}>5回</option>\n                            <option value={0}>「週間希望シフト回数」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='workTime'>\n                        <Form.Label className='mt-3 mb-0'>希望就労時間</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={workTime}\n                            onChange={(e) => setWorkTime(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={3}>3h</option>\n                            <option value={4}>4h</option>\n                            <option value={5}>5h</option>\n                            <option value={6}>6h</option>\n                            <option value={7}>7h</option>\n                            <option value={8}>8h</option>\n                            <option value={0}>「希望就労時間」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='commute'>\n                        <Form.Label className='mt-3 mb-0'>通勤方法</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={commute}\n                            onChange={(e) => setCommute(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'電車'}>電車</option>\n                            <option value={'バス'}>バス</option>\n                            <option value={'徒歩'}>徒歩</option>\n                            <option value={'自転車'}>自転車</option>\n                            <option value={''}>「」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='station'>\n                        <Form.Label className='mt-3 mb-0'>最寄り駅</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='最寄り駅を入力'\n                            value={station}\n                            onChange={(e) => setStation(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' size='lg' className='mt-4'>\n                        更新\n                    </Button>\n\n                </Form>\n            </FormContainer>\n            }\n        </>\n    )\n}\n\nexport default ProfileUpdateScreen\n","const {\n    startOfMonth,\n    startOfWeek,\n    endOfMonth,\n    endOfWeek,\n    startOfDay,\n    addDays,\n} = require(\"date-fns\")\n\n\nconst takeWeek = (start = new Date()) => {\n    let date = startOfWeek(startOfDay(start, 1))\n\n    return () => {\n        const week = [...Array(7)].map((_, i) => addDays(date, i))\n        date = addDays(week[6], 1)\n        return week\n    }\n}\n\nexport const takeMonth = (start = new Date()) => {\n    let month = []\n    let date = start\n\n    const lastDayOfRange = (range) => {\n        return range[range.length - 1][6]\n    }\n\n    return () => {\n        const weekGenerator = takeWeek(startOfMonth(date))\n        const endDate = startOfDay(endOfWeek(endOfMonth(date)))\n        month.push(weekGenerator())\n\n        while (lastDayOfRange(month) < endDate) {\n            month.push(weekGenerator())        \n        }\n\n        let range = month\n        month = []\n        date = addDays(lastDayOfRange(range), 1)\n\n        return range\n    }\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore } from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport {format} from 'date-fns'\n\n// import  useMediaQuery  from 'react-response'\n\n\nfunction ShiftConfirmScreen({ history, match }) {\n    \n    //for API\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    \n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(new Date(String(shift.period_start)))()\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n            }\n            fetchShift()\n        }\n    }, [userInfo, history, match])\n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト確認</h1>\n            {shift.shiftItems &&\n            <div className='text-center'> \n                <h4 style={{borderBottom:'1px solid', display:'inline-block'}}>{ month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}</h4>\n                \n                <div>\n                    <Row className='text-center my-4' >\n                        {month.map((week) => (\n                            <React.Fragment key={week}>\n                            {week.map((x) => (\n                                <Col key={x} className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>\n                                    \n                                    <Card style={{width: '11rem', height:'10rem'}}>\n                                        <Card.Header>\n                                            {x.getMonth() + 1} / {x.getDate()} ({ days[x.getDay()]})\n                                        </Card.Header>\n                                        <Card.Body>\n                                            {shift.shiftItems.map((item) => (\n                                                <div key={item._id}>\n                                                    {item.date === format(x, 'yyyy-MM-dd') &&\n                                                        <div>\n                                                            <Card.Title style={{color: '#0405B5'}}><b>出勤</b></Card.Title>\n                                                            <Card.Text>\n                                                                {item.start_time.substring(0, 5)}\n                                                                {' '}~{' '}\n                                                                {item.end_time.substring(0, 5)}\n                                                            </Card.Text>\n                                                        </div>\n                                                    }\n                                                </div>\n                                            ))}\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </React.Fragment>\n                    ))}\n                    </Row>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ShiftConfirmScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport FormContainer from './FormContainer'\nimport { Form, ButtonGroup, ToggleButton, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport  Loader from './Loader'\nimport { useLoginStore, useProfileStore, useShiftDispatch, useShiftStore } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem, updateShiftItem } from '../actions/shiftActions'\nimport { set, setISODay } from 'date-fns'\n\n\nfunction ShiftItemUpdateForm({ shiftItem, date }) {\n\n    //States    \n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [ endTime, setEndTime] = useState('')\n    const [ isDefault, setIsDefault] = useState(true)\n    \n    //Global States\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    \n    //checkbox\n    const radios = [\n        { name:'終日', value:true},\n        { name:'時間指定', value:false}\n    ]\n    \n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    \n    useEffect(() => {\n            \n            if (shiftItem && isDefault) {\n                setIsWork(shiftItem.is_work) \n                setIsAllDay(shiftItem.is_all_day) \n                setStartTime(String(shiftItem.start_time).substring(0,5))\n                setEndTime(String(shiftItem.end_time).substring(0, 5))\n                setIsDefault(false)\n            } else {\n                if (isAllDay) {\n                    setStartTime('07:00')\n                    setEndTime('23:30')\n                } else if(!startTime && !endTime) {\n                    setStartTime(profile.start_default.substring(0,5))\n                    setEndTime(profile.end_default.substring(0,5))\n                }\n            }\n        \n            if (date && !isWork) {\n                removeShiftItem(shiftDispatch, date)\n            }\n            \n            if (isWork && date && startTime && endTime) {\n                addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n            }\n\n\n\n            // if (isAllDay) {\n            //     setStartTime('07:00')\n            //     setEndTime('23:30')\n            // }\n            // else {\n            //     // setDate(shiftItem.date)\n            //     setStartTime(String(shiftItem.start_time).substring(0,5))\n            //     setEndTime(String(shiftItem.end_time).substring(0,5))\n            //     setIsWork(shiftItem.is_work)\n            //     setIsAllDay(shiftItem.is_all_day)\n            // }\n            // console.log(shiftItem.is_work)\n        \n        \n    }, [  isAllDay, isWork, date, startTime, endTime])\n    \n\n        return (\n            \n            <>\n\n                <Container style={{ color : changeColor(isWork)}}>\n                    <Form.Group >\n                        {/* <Form.Label className={'m-0'}>日付</Form.Label>\n                        <Form.Control\n                            type='date'\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                            className={'mb-3'}\n                            required\n                            // style={{display: 'none'}}\n                            >\n                        </Form.Control> */}\n                        {!startTime && !endTime ? <Loader /> :\n\n                        <div>\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                                // if (e.target.value) {\n                                //     removeShiftItem(shiftDispatch, date)\n                                //     console.log('remove item')\n                                // }\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 ' + startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        checked={isAllDay}\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>  \n                            </div>\n                        }\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemUpdateForm","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemUpdateForm from '../components/ShiftItemUpdateForm'\n\nimport Loader from '../components/Loader'\n\n\nfunction ShiftUpdateScreen({ history, match }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const shiftState = useShiftStore()\n    const { shiftItems } = shiftState\n    \n    //local\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n    const [remarks, setRemarks] = useState([])\n\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    \n    const month = takeMonth(new Date(String(shift.period_start)))()\n\n    //functions\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            \n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}`,\n                    config\n                )\n                setShift(data)\n                setRemarks(data.remarks)\n            }        \n            fetchShift()\n        }\n        \n    }, [userInfo, history, match])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('このシフトを更新しますか?')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n        \n    \n            const { data } = await axios.put(\n                `/api/shifts/shift-update/${shiftId}/`,\n               {\n                    'shiftItems': shiftItems,\n                    'remarks': remarks,\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト更新</h1>\n            \n            {!month[0][6].getMonth() ? <Loader /> :\n            \n                <div className='text-center'> \n                    <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                        {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                    </h4>\n\n                    <Form onSubmit={submitHandler}>\n                        \n                        <Row className='my-5 border' >\n                            {month.map((week, i) => (\n                                <React.Fragment key={i}> \n                                    {week.map((date, j) => (\n                                        <React.Fragment key={j}>\n                                            {date.getMonth() === month[0][6].getMonth() &&\n                                                <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                    <Card  className='mx-auto my-2'>\n                                                        <Card.Header>\n                                                            {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                        </Card.Header>\n                                                        <Card.Body >\n                                                            <ShiftItemUpdateForm\n                                                                date={getStringDate(date)}\n                                                                shiftItem={shift.shiftItems.find(element => element.date === getStringDate(date))}\n                                                            />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                        }\n                                        </React.Fragment>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Row>\n\n                        <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form>\n\n                \n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default ShiftUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport  Loader from './Loader'\nimport { useProfileStore, useShiftDispatch, useShiftStore } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem, updateShiftItem } from '../actions/shiftActions'\n\n\nfunction ShiftItemForm({history, date}) {\n    //States 引数にdate\n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [endTime, setEndTime] = useState('')\n\n    \n    //Global States\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const shiftDispatch = useShiftDispatch()\n    \n    //checkbox\n    const radios = [\n        { name:'終日', value:true},\n        { name:'時間指定', value:false}\n    ]\n\n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    const chooseCursor = (flag) => {\n        if (flag) return 'pointer'\n        return 'not-allowed'\n    }\n    \n    useEffect(() => {\n\n        if (isAllDay) {\n            setStartTime('07:00')\n            setEndTime('23:30')\n        } else if(!startTime && !endTime) {\n            setStartTime(profile.start_default.substring(0,5))\n            setEndTime(profile.end_default.substring(0,5))\n        }\n\n        if (date && !isWork) {\n            removeShiftItem(shiftDispatch, date)  \n        }\n        \n        if (isWork && date&& startTime && endTime) {\n            addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n        }\n        \n    }, [history, isAllDay, isWork, date, startTime, endTime])\n\n\n        return (\n            \n            <>\n\n                <Container style={{color: changeColor(isWork)}}>\n                    <Form.Group >\n\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n                        {!startTime && !endTime ? <Loader /> :\n                            <div>\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 '+ startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>\n                            </div>\n                        }\n\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport { format } from 'date-fns'\nimport  ShiftItemForm  from '../components/ShiftItemForm'\n\nimport {  } from '../context'\n\nimport { startOfMonth, endOfMonth, } from 'date-fns'\n\n\n\nfunction ShiftSubmitScreen({ history }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const { shiftItems, period, isSubmitted } = shiftState\n\n    //Local States\n    const [remarks, setRemarks] = useState('')\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(period[0])()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else if (isSubmitted) {\n            history.push('/profile')\n        }\n\n    }, [userInfo, history])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('シフトを提出しますか?（提出期限後、MGRが受理するまでは更新可能です）')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.post(\n                `/api/shifts/shift/create/`,\n                {\n                    'shiftItems': shiftItems,\n                    'section': profile.section,\n                    'periodStart': getStringDate(period[0]),\n                    'periodEnd': getStringDate(period[1]),\n                    'remarks': remarks,\n                    'isSubmitted': true,\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>新規シフト提出</h1>\n            \n            <div className='text-center'> \n                <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                    {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                </h4>\n\n                <Form onSubmit={submitHandler}>\n                    \n                    <Row className='my-5 border' >\n                        {month.map((week, i) => (\n                            <React.Fragment key={i}> \n                                {week.map((date, j) => (\n                                    <React.Fragment key={j}>\n                                        {date.getMonth() === month[0][6].getMonth() &&\n                                            <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                <Card  className='mx-auto my-2'>\n                                                    <Card.Header>\n                                                        {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                    </Card.Header>\n                                                    <Card.Body >    \n                                                        <ShiftItemForm date={getStringDate(date)}/>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                    }\n                                    </React.Fragment>\n                                ))}\n                            </React.Fragment>\n                        ))}\n                    </Row>\n\n                    <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n                </Form>\n\n            \n            </div>\n            \n        </div>\n    )\n}\n//空タグでkey属性をもたせたい場合、Fragmentを使う\n\nexport default ShiftSubmitScreen\n","import logo from './logo.svg';\nimport Header from './components/Header'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nimport HomeScreen from './screens/HomeScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ProfileUpdateScreen from './screens/ProfileUpdateScreen'\nimport { LoginProvider } from './context'\nimport { ProfileProvider } from './context'\nimport { ShiftProvider } from './context'\n\n\nimport ShiftConfirmScreen from './screens/ShiftConfirmScreen'\nimport ShiftUpdateScreen from './screens/ShiftUpdateScreen'\nimport ShiftSubmitScreen from './screens/ShiftSubmitScreen'\nimport ShiftItemForm from './components/ShiftItemForm'\nimport ShiftItemUpdateForm from './components/ShiftItemUpdateForm'\n\n\nfunction App() {\n  return (\n    <Router>\n      <LoginProvider>\n        <ShiftProvider>\n          <ProfileProvider>\n            <Header />\n        <main className='py-3'>\n          <Container>\n              <Route  path='/' component={HomeScreen} exact />\n              <Route path='/register' component={RegisterScreen} />\n              <Route path='/login' component={LoginScreen}/>\n              <Route path='/shifts/confirm/:id' component={ShiftConfirmScreen} />\n              \n                <Route path='/profile' component={ProfileScreen} />\n                <Route path='/update/profile' component={ProfileUpdateScreen}/>\n                <Route path='/shifts/test' component={ShiftItemForm}/>\n                <Route path='/update/test/:id' component={ShiftItemUpdateForm}/>\n                <Route path='/shifts/update/:id' component={ShiftUpdateScreen}/>\n                <Route path='/shifts/submit' component={ShiftSubmitScreen} />\n              \n          </Container>\n        </main>\n            </ProfileProvider>\n        </ShiftProvider>\n      </LoginProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}