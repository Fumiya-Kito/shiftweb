{"version":3,"sources":["logo.svg","constants/userConstants.js","reducers/userReducers.js","constants/shiftConstants.js","reducers/shiftReducers.js","context.js","actions/userActions.js","components/Header.js","screens/HomeScreen.js","components/FormContainer.js","components/Message.js","screens/RegisterScreen.js","components/Loader.js","screens/LoginScreen.js","actions/shiftActions.js","screens/ProfileScreen.js","screens/ProfileUpdateScreen.js","constants/month.js","screens/ShiftConfirmScreen.js","components/ShiftItemUpdateForm.js","screens/ShiftUpdateScreen.js","components/ShiftItemForm.js","screens/ShiftSubmitScreen.js","demo/DemoProfileScreen.js","demo/DemoProfileUpdateScreen.js","demo/DemoSubmitScreen.js","demo/DemoShiftUpdateScreen.js","demo/DemoShiftConfirmScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_RESET","loginInitialState","userInfo","localStorage","getItem","JSON","parse","error","loading","profileInitialState","profile","SHIFT_REQUEST","SHIFT_SUCCESS","SHIFT_ADD_ITEM","SHIFT_REMOVE_ITEM","SHIFT_CHANGE_STATUS","SHIFT_RESET","SHIFT_CHANGE_PERIOD","shiftInitialState","shiftItems","isSubmitted","period","endOfDay","startOfMonth","addMonths","Date","endOfMonth","deadline","subDays","makeStore","reducer","initialState","storeContext","React","createContext","dispatchContext","children","useReducer","store","dispatch","Provider","value","useContext","state","action","type","payload","LoginProvider","useLoginStore","useLoginDispatch","ProfileProvider","useProfileStore","useProfileDispatch","item","existItem","find","x","date","map","filter","ShiftProvider","useShiftStore","useShiftDispatch","login","email","password","a","config","headers","axios","post","data","setItem","stringify","response","detail","message","getProfile","Authorization","token","get","Header","loginDispatch","shiftDispatch","profileDispatch","logoutHandler","removeItem","logout","Navbar","bg","variant","collapseOnSelect","Container","Brand","Nav","className","NavDropdown","title","name","id","to","Item","onClick","Link","HomeScreen","history","useEffect","push","FormContainer","Row","Col","xs","md","Message","Alert","RegisterScreen","useState","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","setMessage","loginState","submitHandler","e","preventDefault","Form","onSubmit","Group","controlId","Label","Control","required","placeholder","onChange","target","Button","Loader","Spinner","animation","role","style","height","width","margin","display","LoginScreen","location","redirect","search","split","addShiftItem","isWork","startTime","endTime","isAllDay","removeShiftItem","changeSubmitStatus","changePeriod","time","ProfileScreen","shifts","setShifts","profileState","profileLoading","shiftState","getStringDate","dt","getFullYear","getMonth","slice","getDate","fetchShifts","i","length","period_start","sm","size","disabled","color","String","format","Table","striped","hover","responsive","shift","_id","period_end","is_confirmed","duty","section","employment_status","is_rookie","is_open_staff","is_pre_close_staff","is_close_staff","start_default","substring","end_default","desired_times_per_week","desired_working_time","commute","station","ProfileUpdateScreen","setDuty","setSection","employment","setEmployment","isRookie","setIsRookie","isOpen","setIsOpen","isPreClose","setIsPreClose","isClose","setIsClose","startDefault","setStartDefault","endDefault","setEndDefault","weeklyWork","setWeeklyWork","workTime","setWorkTime","setCommute","setStation","setLoading","console","log","window","confirm","put","background","as","cursor","min","step","change","text","openOnFocus","strictMode","showClearButton","allowEdit","require","startOfWeek","endOfWeek","startOfDay","addDays","takeWeek","start","week","Array","_","takeMonth","month","lastDayOfRange","range","weekGenerator","endDate","ShiftConfirmScreen","match","shiftId","params","setShift","days","fetchShift","borderBottom","Fragment","lg","xl","Card","getDay","Body","Title","Text","start_time","end_time","ShiftItemUpdateForm","flag","shiftItem","setIsWork","setIsAllDay","setStartTime","setEndTime","isDefault","setIsDefault","is_work","is_all_day","enabled","Check","label","checked","ShiftUpdateScreen","remarks","setRemarks","setMonth","j","element","row","ShiftItemForm","chooseCursor","ShiftSubmitScreen","DemoProfileScreen","DemoProfileUpdateScreen","DemoShiftSubmitScreen","DemoShiftUpdateScreen","App","path","component","exact","DemoSubmitScreen","DemoShiftConfirmScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,0DCAFA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAMdC,EAAuB,uBACvBC,EAAuB,uBAEvBC,EAAqB,qBCKrBC,EAAoB,CAC7BC,SARuBC,aAAaC,QAAQ,YAC5CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAQ/CG,OAAO,EACPC,SAAS,GAEAC,EAAsB,CAC/BC,QAVsBP,aAAaC,QAAQ,WAC3CC,KAAKC,MAAMH,aAAaC,QAAQ,YAAc,GAU9CG,OAAO,EACPC,SAAS,G,QC1BAG,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAc,cACdC,EAAsB,sB,wCCStBC,EAAoB,CAC7BC,WAAY,GACZC,aAAa,EACbZ,SAAS,EACTa,OAAQ,CACJC,YAASC,YAAaC,YAAU,IAAIC,KAAQ,KAC5CH,YAASI,YAAWF,YAAU,IAAIC,KAAQ,MAE9CE,SAAUC,YAAQN,YAASI,YAAW,IAAID,OAAU,K,OClB3CI,EAAY,SAACC,EAASC,GAC/B,IAAMC,EAAeC,IAAMC,gBACrBC,EAAkBF,IAAMC,gBAsB9B,MAAO,CApBe,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SAAe,EACVC,qBAAWP,EAASC,GADV,mBAC7BO,EAD6B,KACtBC,EADsB,KAGpC,OACI,cAACJ,EAAgBK,SAAjB,CAA0BC,MAAOF,EAAjC,SACI,cAACP,EAAaQ,SAAd,CAAuBC,MAAOH,EAA9B,SACMF,OAMD,WACf,OAAOH,IAAMS,WAAWV,IAGN,WAClB,OAAOC,IAAMS,WAAWP,M,EAMkCN,GHHhC,SAACc,EAAOC,GACpC,OAAQA,EAAOC,MACX,KAAKnD,EACD,MAAO,CAAEc,SAAS,GACtB,KAAKb,EACD,MAAO,CAAEa,SAAS,EAAON,SAAW0C,EAAOE,SAC/C,KAAKlD,EACD,MAAO,CAAEY,SAAS,EAAOD,OAAO,GACpC,KAAKV,EACD,MAAO,CAAEK,SAAU,MACvB,QACI,OAAOyC,KGRyE1C,G,mBAA9E8C,E,KAAeC,E,KAAeC,E,OAC0BpB,GHapC,SAACc,EAAOC,GACtC,OAAQA,EAAOC,MACX,KAAK/C,EACD,OAAO,2BAAK6C,GAAZ,IAAmBnC,SAAS,IAChC,KAAKT,EACD,OAAO,2BAAK4C,GAAZ,IAAmBnC,SAAS,EAAOE,QAAUkC,EAAOE,UACxD,IDzCyB,oBC0CrB,OAAO,2BAAKH,GAAZ,IAAmBnC,SAAS,EAAOD,OAAO,IAC9C,KAAKP,EACD,OAAOS,EACX,QACI,OAAOkC,KGxBiFlC,G,mBAAtFyC,E,KAAiBC,E,KAAiBC,E,OACgBvB,GDPpC,SAACc,EAAOC,GAChC,OAAQA,EAAOC,MACX,KAAKlC,EACD,OAAO,2BAAKgC,GAAZ,IAAmBnC,SAAS,IAChC,KAAKI,EACD,OAAO,2BAAK+B,GAAZ,IAAmBnC,SAAS,IAChC,KAAKK,EACD,IAAMwC,EAAOT,EAAOE,QACdQ,EAAYX,EAAMxB,WAAWoC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAASJ,EAAKI,QAC7D,OAAIH,EAEO,2BACAX,GADP,IAEInC,SAAS,EACTW,WAAYwB,EAAMxB,WAAWuC,KAAI,SAAAF,GAAC,OAAIA,EAAEC,OAASH,EAAUG,KAAOJ,EAAOG,OAItE,2BACAb,GADP,IAEInC,SAAS,EACTW,WAAW,GAAD,mBAAMwB,EAAMxB,YAAZ,CAAwBkC,MAG9C,KAAKvC,EACD,OAAO,2BACA6B,GADP,IAEInC,SAAS,EACTW,WAAYwB,EAAMxB,WAAWwC,QAAO,SAAAH,GAAC,OAAIA,EAAEC,OAASb,EAAOE,aAEnE,KAAK/B,EACD,OAAO,2BACA4B,GADP,IAEInC,SAAS,EACTY,YAAawB,EAAOE,UAE5B,KAAK7B,EACD,OAAO,2BACA0B,GADP,IAEInC,SAAS,EACTmB,SAAUiB,EAAOE,UAEzB,KAAK9B,EACD,OAAOE,EACX,QACI,OAAOyB,KCtCqEzB,G,mBAA1E0C,E,KAAeC,E,KAAeC,E,sDClB/BC,GAAK,yCAAG,WAAOC,EAAOC,EAAU1B,GAAxB,oBAAA2B,EAAA,sEAEb3B,EAAS,CACLM,KAAMnD,IAEJyE,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPX,SAUUC,KAAMC,KACzB,oBACA,CAAE,SAAYN,EAAO,SAAYC,GACjCE,GAbS,gBAULI,EAVK,EAULA,KAKRhC,EAAS,CACLM,KAAMlD,EACNmD,QAASyB,IAEbpE,aAAaqE,QAAQ,WAAYnE,KAAKoE,UAAUF,IAnBnC,kDAsBbhC,EAAS,CACLM,KAAMjD,EACNkD,QAAS,KAAM4B,UAAY,KAAMA,SAASH,KAAKI,OACzC,KAAMD,SAASH,KAAKI,OACrB,KAAMC,UA1BF,0DAAH,0DA2ELC,GAAU,yCAAG,WAAOtC,EAAUrC,GAAjB,oBAAAgE,EAAA,6DACtB3B,EAAS,CAAEM,KAAM/C,IAEXqE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SANrB,SASCV,KAAMW,IACzB,sBACAb,GAXkB,gBASdI,EATc,EASdA,KAIRhC,EAAS,CACLM,KAAM9C,EACN+C,QAASyB,IAGbpE,aAAaqE,QAAQ,UAAWnE,KAAKoE,UAAUF,IAlBzB,2CAAH,wDC1BRU,OAxDf,WACI,IAAMtC,EAAQK,IACRkC,EAAgBjC,IACd/C,EAAayC,EAAbzC,SACFiF,EAAgBrB,IAEfpD,EADcyC,IACdzC,QACD0E,EAAkBhC,IAGlBiC,EAAgB,YD8BJ,SAACH,EAAeE,GAClCjF,aAAamF,WAAW,YACxBnF,aAAamF,WAAW,WACxBJ,EAAc,CAAErC,KAAMhD,IChClB0F,CAAOL,GACPC,EAAc,CAACtC,KAAM7B,IACrBoE,EAAgB,CAAEvC,KAAM7C,KAG5B,OACI,iCACI,cAACwF,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,kBAAgB,EAAjD,SACI,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAOK,MAAR,wBACI,cAACC,EAAA,EAAD,CAAKC,UAAU,cAAf,SAEK7F,EACG,cAAC8F,EAAA,EAAD,CAAaC,MAAOvF,EAAQwF,KAAMC,GAAG,WAAWJ,UAAU,OAA1D,SACoB,mBAAnB7F,EAAS8D,MACN,qCACI,cAAC,gBAAD,CAAeoC,GAAG,gBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,mCAEJ,cAAC,gBAAD,CAAeD,GAAG,SAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,CAAkBC,QAASjB,EAA3B,iDAIR,qCACI,cAAC,gBAAD,CAAee,GAAG,WAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,mCAEJ,cAACL,EAAA,EAAYK,KAAb,CAAkBC,QAASjB,EAA3B,iDAKR,cAAC,gBAAD,CAAee,GAAG,SAAlB,SACI,eAACN,EAAA,EAAIS,KAAL,WAAU,mBAAGR,UAAU,gBAAvB,0C,kBClCrBS,OAlBf,YAAgC,IAAXC,EAAU,EAAVA,QAWjB,OATmBzD,IACZ9C,SAEPwG,qBAAU,WAEND,EAAQE,KAAK,YAEd,IAGC,mCACI,8C,sCCDGC,OAZf,YAAsC,IAAbxE,EAAY,EAAZA,SACrB,OACI,cAACwD,EAAA,EAAD,UACI,cAACiB,GAAA,EAAD,CAAKd,UAAU,4BAAf,SACI,cAACe,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACK5E,S,UCGN6E,OARf,YAAuC,IAArBvB,EAAoB,EAApBA,QAAStD,EAAW,EAAXA,SACvB,OACI,cAAC8E,GAAA,EAAD,CAAOxB,QAASA,EAAhB,SACKtD,KCkGE+E,OA7Ff,YAAoC,IAAXV,EAAU,EAAVA,QAAU,EAEPW,mBAAS,IAFF,mBAExBlB,EAFwB,KAElBmB,EAFkB,OAGLD,mBAAS,IAHJ,mBAGxBpD,EAHwB,KAGjBsD,EAHiB,OAICF,mBAAS,IAJV,mBAIxBnD,EAJwB,KAIdsD,EAJc,OAKeH,mBAAS,IALxB,mBAKxBI,EALwB,KAKPC,EALO,OAMDL,mBAAS,IANR,mBAMxBxC,EANwB,KAMf8C,EANe,KASzBC,EAAa3E,IACbkC,EAAgBjC,IACf/C,EAAYyH,EAAZzH,SAEPwG,qBAAU,WACFxG,GACAuG,EAAQE,KAAK,OAEnB,CAACF,EAASvG,IAEZ,IAAM0H,EAAa,yCAAG,WAAMC,GAAN,UAAA3D,EAAA,yDAClB2D,EAAEC,iBACE7D,IAAauD,EAFC,gBAGdE,EAAW,4EAHG,sCAKRrD,KAAMC,KACR,uBACA,CAAE,KAAQ4B,EAAM,MAASlC,EAAO,SAAYC,IAPlC,OASdF,GAAMC,EAAOC,EAAUiB,GATT,2CAAH,sDAenB,OACI,eAAC,GAAD,WACI,4EACCN,GAAW,cAAC,GAAD,CAASc,QAAQ,SAAjB,SAA2Bd,IAEvC,eAACmD,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UACI,eAACG,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAOnC,UAAU,OAAvC,UACI,cAACgC,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRxF,KAAK,OACLyF,YAAY,iCACZ7F,MAAOyD,EACPqC,SAAU,SAACV,GAAD,OAAOR,EAAQQ,EAAEW,OAAO/F,aAI1C,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAQnC,UAAU,OAAxC,UACI,cAACgC,GAAA,EAAKI,MAAN,yDACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRxF,KAAK,QACLyF,YAAY,+DACZ7F,MAAOuB,EACPuE,SAAU,SAACV,GAAD,OAAOP,EAASO,EAAEW,OAAO/F,aAI3C,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAWnC,UAAU,OAA3C,UACI,cAACgC,GAAA,EAAKI,MAAN,6CACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRxF,KAAK,WACLyF,YAAY,mDACZ7F,MAAOwB,EACPsE,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAEW,OAAO/F,aAI9C,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,kBAAkBnC,UAAU,OAAlD,UACI,cAACgC,GAAA,EAAKI,MAAN,yDACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRxF,KAAK,WACLyF,YAAY,2EACZ7F,MAAO+E,EACPe,SAAU,SAACV,GAAD,OAAOJ,EAAmBI,EAAEW,OAAO/F,aAIrD,cAACgG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAA9B,iC,UC3EDgD,OAjBf,WACI,OACI,cAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLC,MAAO,CACHC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,QAAS,YCoFVC,OApFf,YAA2C,IAArB1C,EAAoB,EAApBA,QAAS2C,EAAW,EAAXA,SAErBzG,EAAQK,IACRT,EAAWU,IACV/C,EAAmByC,EAAnBzC,SAAUK,EAASoC,EAATpC,MAJqB,EAKZ6G,mBAAS,IALG,mBAK/BpD,EAL+B,KAKxBsD,EALwB,OAMNF,mBAAS,IANH,mBAM/BnD,EAN+B,KAMrBsD,EANqB,KAQhC8B,EAAWD,EAASE,OAASF,EAASE,OAAOC,MAAM,KAAK,GAAK,IAenE,OAZA7C,qBAAU,WACFxG,GACAuG,EAAQE,KAAK,cAEnB,CAACF,EAASvG,IASR,qCACI,eAAC,GAAD,WACI,0DAECK,GAAS,cAAC,GAAD,CAASmF,QAAQ,SAAjB,8IAEV,eAACqC,GAAA,EAAD,CAAMC,SAbI,SAACH,GACnBA,EAAEC,iBACF/D,GAAMC,EAAOC,EAAU1B,IAWf,UACI,eAACwF,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,OAAtB,wDACA,cAACgC,GAAA,EAAKK,QAAN,CACIvF,KAAK,QACLyF,YAAY,gEACZ7F,MAAOuB,EACPuE,SACI,SAACV,GAAD,OAAOP,EAASO,EAAEW,OAAO/F,aAMrC,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,4CACA,cAACgC,GAAA,EAAKK,QAAN,CACIvF,KAAK,WACLyF,YAAY,mDACZ7F,MAAOwB,EACPsE,SACI,SAACV,GAAD,OAAON,EAAYM,EAAEW,OAAO/F,aAKxC,cAACgG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUK,UAAU,YAAlD,yCAMJ,cAACc,GAAA,EAAD,CAAKd,UAAU,OAAf,SACI,eAACe,GAAA,EAAD,kGAEI,eAAC,QAAD,CAAMV,GAAIiD,EAAQ,6BAAyBA,GAAa,YAAxD,UACK,IADL,2BAQZ,cAAC,GAAD,UACI,eAAC,GAAD,CAAS3D,QAAQ,OAAjB,iMAEI,uBACA,cAAC,QAAD,CAAMU,GAAI,gBAAV,iF,UChFPoD,GAAe,SAACjH,EAAUkB,EAAMgG,EAAQC,EAAWC,EAASC,GACrErH,EAAS,CACLM,KAAMhC,EACNiC,QAAS,CACLW,OACAgG,SACAC,YACAC,UACAC,eAKCC,GAAkB,SAACtH,EAAUkB,GACtClB,EAAS,CACLM,KAAM/B,EACNgC,QAASW,KAIJqG,GAAqB,SAACvH,EAAUE,GACzCF,EAAS,CACLM,KAAM9B,EACN+B,QAASL,KAIJsH,GAAe,SAACxH,EAAUyH,GACnCzH,EAAS,CACLM,KAAM5B,EACN6B,QAASkH,K,SCuMFC,OAhOf,YAAqC,IAAZxD,EAAW,EAAXA,QAAW,EAEJW,mBAAS,IAFL,mBAEzB8C,EAFyB,KAEjBC,EAFiB,KAMzBjK,EADY8C,IACZ9C,SACDqC,EAAWa,IACXgH,EAAejH,IACbzC,EAAqC0J,EAArC1J,QAAkB2J,EAAmBD,EAA5B5J,QACX8J,EAAazG,IACXxC,EAA2CiJ,EAA3CjJ,OAAQM,EAAmC2I,EAAnC3I,SAAUP,EAAyBkJ,EAAzBlJ,YAAaZ,EAAY8J,EAAZ9J,QACjC2E,EAAgBrB,IAEhByG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAoCxG,OAjCAjE,qBAAU,WACN,GAAKxG,EAEE,CAAC,IASW2K,EATZ,yCASH,iCAAA3G,EAAA,6DACIiB,EAAc,CAACtC,KAAMlC,IADzB,SAE2B0D,KAAMW,IAAN,wBAEnBb,GAJR,OAQI,IARJ,SAEYI,EAFZ,EAEYA,KAIR4F,EAAU5F,GAEDuG,EAAI,EAAGA,EAAIvG,EAAKwG,OAAQD,IACzBvG,EAAKuG,GAAGE,eAAiBT,EAAclJ,EAAO,KAC9CyI,GAAmB3E,GAAe,GAI1CA,EAAc,CAACtC,KAAMjC,IAdzB,2CATG,qDACHiE,GAAWtC,EAAUrC,GAErB,IAAMiE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAmB3C8F,SA1BApE,EAAQE,KAAK,YA6BlB,CAACF,EAASvG,IAGT,gCACI,2DAAUQ,EAAQwF,KAAlB,mBACA,eAACW,GAAA,EAAD,CAAKd,UAAU,OAAf,UAGKvF,EAAU,cAAC,GAAD,IAEP,eAACsG,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,GAAIlF,UAAU,OAA9B,UACI,gEACA,eAACH,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,cAAC,gBAAD,CAAeK,GAAG,iBAAiBL,UAAU,wBAA7C,SACI,eAAC0C,GAAA,EAAD,CAAQyC,KAAK,KAAKxF,QAAQ,UAAUyF,SAAU/J,GAAgB,IAAIK,KAASE,EAA3E,oEAAgG,oBAAGoE,UAAU,MAAb,UAAoBwE,EAAclJ,EAAO,IAAzC,MAAkDkJ,EAAclJ,EAAO,YAE3K,oBAAG0E,UAAU,YAAb,4CAAgC3E,EAAc,mBAAG0H,MAAO,CAACsC,MAAO,QAAlB,sCAAsC,mBAAGtC,MAAO,CAACsC,MAAO,OAAlB,mCACpF,oBAAGrF,UAAU,YAAb,4CAAgCsF,OAAOC,aAAO3J,EAAU,uBAAxD,oBACGP,GAAgB,IAAIK,KAASE,GAC5B,cAAC,GAAD,CAAS+D,QAAQ,SAAjB,+KAKR,oBAAIK,UAAU,OAAd,4CACmB,IAAlBmE,EAAOa,OAAe,cAAC,GAAD,CAASrF,QAAQ,OAAjB,oEACnB,eAAC6F,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAAC3F,UAAU,kBAA1C,UACI,gCACI,+BACI,oCACA,wCACA,wCACA,4BAGR,gCACKmE,EAAOxG,KAAI,SAACiI,GAAD,OACR,+BACI,6BAAKA,EAAMC,MACX,+BAAKD,EAAMX,aAAX,IAA0B,IAA1B,MAAkC,IAAKW,EAAME,cAC7C,6BAAKF,EAAMG,aAAe,eAAO,uBACjC,6BACMH,EAAMG,aACJ,cAAC,gBAAD,CAAe1F,GAAE,0BAAqBuF,EAAMC,KAA5C,SACI,cAACnD,GAAA,EAAD,CAAQ1C,UAAU,SAASL,QAAQ,kBAAnC,4BAGJ,cAAC,gBAAD,CAAeU,GAAE,yBAAoBuF,EAAMC,KAA3C,SACI,cAACnD,GAAA,EAAD,CAAQ1C,UAAU,SAASL,QAAQ,eAAnC,gCAXPiG,EAAMC,gBA0BtCvB,EAAiB,cAAC,GAAD,IACd,eAACvD,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,GAAIlF,UAAU,OAA9B,UAEA,eAACc,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKE,GAAK,GAAIiE,GAAI,GAAIlE,GAAI,GAA1B,SACI,wEAEJ,cAACD,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,EAAGlE,GAAI,EAAGhB,UAAU,4BAApC,SACI,cAAC,gBAAD,CAAeK,GAAI,kBAAnB,SACQ,cAACqC,GAAA,EAAD,CAAQ/C,QAAQ,oBAAmBK,UAAU,SAA7C,iCAOZ,eAACwF,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACR,KAAK,KAAKnF,UAAU,SAApD,UACI,gCACI,+BACI,qCACA,uCACA,8CAGR,kCACI,+BACI,oCACA,6BAAKrF,EAAQkL,MACb,0BAEJ,+BACI,8CACA,6BAAKlL,EAAQwF,OACb,0BAEJ,+BACI,8CACA,6BAAKxF,EAAQqL,OACb,0BAEJ,+BACI,gEACA,6BAAKrL,EAAQsL,UACb,0BAEJ,+BACI,0DACA,6BAAKtL,EAAQuL,oBACb,0BAEJ,+BACI,oDACA,6BAAKvL,EAAQwL,UAAY,qBAAQ,iBACjC,0BAEJ,+BACI,0DACA,6BAAKxL,EAAQyL,cAAgB,SAAM,iBACnC,0BAEJ,+BACI,sDACA,6BAAKzL,EAAQ0L,mBAAqB,SAAM,iBACxC,0BAEJ,+BACI,8CACA,6BAAK1L,EAAQ2L,eAAiB,SAAM,iBACpC,0BAEJ,+BACI,uEACA,mCAAM3L,EAAQ4L,cAAcC,UAAU,EAAE,MACxC,yHAEJ,+BACI,uEACA,mCAAM7L,EAAQ8L,YAAYD,UAAU,EAAE,MACtC,yHAEJ,+BACI,yFACA,yCAAO7L,EAAQ+L,0BACf,6GAEJ,+BACI,uEACA,mCAAM/L,EAAQgM,qBAAd,OACA,6GAEJ,+BACI,2DACA,mCAAMhM,EAAQiM,WACd,0BAEJ,+BACI,2DACA,mCAAMjM,EAAQkM,WACd,oI,UC8GrBC,OAlUf,YAAyC,IAAXpG,EAAU,EAAVA,QAAU,EAEZW,mBAAS,IAFG,mBAE7BlB,EAF6B,KAEvBmB,EAFuB,OAGZD,mBAAS,IAHG,mBAG7B2E,EAH6B,KAGvBe,EAHuB,OAIN1F,mBAAS,IAJH,mBAI7B4E,EAJ6B,KAIpBe,EAJoB,OAKA3F,mBAAS,IALT,mBAK7B4F,EAL6B,KAKjBC,EALiB,OAMJ7F,oBAAS,GANL,mBAM7B8F,EAN6B,KAMnBC,EANmB,OAOR/F,oBAAS,GAPD,mBAO7BgG,EAP6B,KAOrBC,EAPqB,OAQAjG,oBAAS,GART,mBAQ7BkG,EAR6B,KAQjBC,EARiB,OASNnG,oBAAS,GATH,mBAS7BoG,EAT6B,KASpBC,EAToB,OAUIrG,mBAAS,IAVb,mBAU7BsG,EAV6B,KAUfC,EAVe,OAWAvG,mBAAS,IAXT,mBAW7BwG,EAX6B,KAWjBC,EAXiB,OAYAzG,mBAAS,IAZT,mBAY7B0G,EAZ6B,KAYjBC,EAZiB,OAaJ3G,mBAAS,IAbL,mBAa7B4G,GAb6B,KAanBC,GAbmB,QAcN7G,mBAAS,IAdH,qBAc7BuF,GAd6B,MAcpBuB,GAdoB,SAeN9G,mBAAS,IAfH,qBAe7BwF,GAf6B,MAepBuB,GAfoB,SAgBN/G,oBAAS,GAhBH,qBAgB7B5G,GAhB6B,MAgBpB4N,GAhBoB,MAoB7BlO,GADY8C,IACZ9C,SACDqC,GAAWa,IAET1C,GADayC,IACbzC,QAERgG,qBAAU,WACDxG,IAGD2E,GAAWtC,GAAUrC,IAErBQ,GAAQwF,KAAOmB,EAAQ3G,GAAQwF,MAAQmB,EAAQ,oDAC/C3G,GAAQqL,KAAOe,EAAQpM,GAAQqL,MAAQe,EAAQ,IAC/CpM,GAAQuL,kBAAoBgB,EAAcvM,GAAQuL,mBAAqBgB,EAAc,IACrFvM,GAAQsL,QAAUe,EAAWrM,GAAQsL,SAAWe,EAAW,IAC3DrM,GAAQwL,UAAYiB,EAAYzM,GAAQwL,WAAaiB,GAAY,GACjEzM,GAAQyL,cAAgBkB,EAAU3M,GAAQyL,eAAiBkB,GAAU,GACrE3M,GAAQ0L,mBAAqBmB,EAAc7M,GAAQ0L,oBAAsBmB,GAAc,GACvF7M,GAAQ2L,eAAiBoB,EAAW/M,GAAQ2L,gBAAkBoB,GAAW,GACzE/M,GAAQ4L,cAAgBqB,EAAgBjN,GAAQ4L,eAAiBqB,EAAgB,IACjFjN,GAAQ8L,YAAcqB,EAAcnN,GAAQ8L,aAAeqB,EAAc,IACzEnN,GAAQ+L,uBAAyBsB,EAAcrN,GAAQ+L,wBAA0BsB,EAAc,GAC/FrN,GAAQgM,qBAAuBuB,GAAYvN,GAAQgM,sBAAwBuB,GAAY,GACvFvN,GAAQiM,QAAUuB,GAAWxN,GAAQiM,SAAWuB,GAAW,IAC3DxN,GAAQkM,QAAUuB,GAAWzN,GAAQkM,SAAWuB,GAAW,IAE3DC,IAAW,IAnBX3H,EAAQE,KAAK,UAsBb+G,GAAiBE,IACjBD,EAAgBjN,GAAQ4L,cAAcC,UAAU,EAAE,IAClDsB,EAAcnN,GAAQ8L,YAAYD,UAAU,EAAE,OAEnD,CAAC9F,EAASvG,KAEb,IAAM0H,GAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,iBACFuG,QAAQC,IAAI,cACZD,QAAQC,IAAIpI,EAAM6F,EAAMC,EAASkB,EAAUE,EAAQE,EAAYE,EAASE,EAAcE,EAAYE,EAAYE,GAAUrB,GAASC,KAC7H2B,OAAOC,QAAQ,8FAJD,wBAKRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAc,UAAD,OAAY5E,GAAS6E,SAR5B,SAYSV,KAAMoK,IAAN,6BAEnB,CACI,KAAQvI,EACR,KAAQ6F,EACR,WAAciB,EACd,QAAWhB,EACX,SAAYkB,EACZ,OAAUE,EACV,WAAcE,EACd,QAAWE,EACX,aAAgBE,EAChB,WAAcE,EACd,WAAcE,EACd,SAAYE,GACZ,QAAWrB,GACX,QAAWC,IAEfzI,GA9BU,kBAYNI,KAoBRkC,EAAQE,KAAK,YAhCC,4CAAH,sDAoCnB,OACI,qCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAA9D,iCAGClO,GAAU,cAAC,GAAD,IACX,cAAC,GAAD,UACI,eAACuH,GAAA,EAAD,CAAMC,SAAUJ,GAAe7B,UAAU,aAAzC,UACI,eAACgC,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,cAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRxF,KAAK,OACLyF,YAAY,iCACZ7F,MAAOyD,EACPqC,SAAU,SAACV,GAAD,OAAOR,EAAQQ,EAAEW,OAAO/F,aAI1C,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOsJ,EACPxD,SAAU,SAACV,GAAD,OAAOiF,EAAQjF,EAAEW,OAAO/F,QAClCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,yDAAf,oEACA,wBAAQA,MAAO,iCAAf,4CACA,wBAAQA,MAAO,GAAf,kGAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuK,EACPzE,SAAU,SAACV,GAAD,OAAOoF,EAAcpF,EAAEW,OAAO/F,QACxCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,GAAf,8GAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,4CACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuJ,EACPzD,SAAU,SAACV,GAAD,OAAOkF,EAAWlF,EAAEW,OAAO/F,QACrCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,2BAAf,sCACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,6CAAf,wDACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,GAAf,oHAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOyK,EACP3E,SAAU,kBAAM4E,GAAaD,IAC7BpE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,gCACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO2K,EACP7E,SAAU,kBAAM8E,GAAWD,IAC3BtE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,kCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO6K,EACP/E,SAAU,kBAAMgF,GAAeD,IAC/BxE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO+K,EACPjF,SAAU,kBAAMkF,GAAYD,IAC5B1E,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,cAACsF,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOiL,EACPmB,IAAK,IAAIpN,KAAK,uBACd6J,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAO8F,EAAgB9F,EAAEmH,OACjCC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAC8F,OAAQ,aAGpB,cAAC7G,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOmL,EACPiB,IAAK,IAAIpN,KAAK,cAAgBiM,GAC9BpC,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAOgG,EAAchG,EAAEmH,OAC/BC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAE8F,OAAQ,aAGrB,eAAC7G,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,oEACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOqL,EACPvF,SAAU,SAACV,GAAD,OAAOkG,EAAclG,EAAEW,OAAO/F,QACxCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,4IAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,kDACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuL,GACPzF,SAAU,SAACV,GAAD,OAAOoG,GAAYpG,EAAEW,OAAO/F,QACtCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,0HAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOkK,GACPpE,SAAU,SAACV,GAAD,OAAOqG,GAAWrG,EAAEW,OAAO/F,QACrCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,qBAAf,gCACA,wBAAQA,MAAO,GAAf,sFAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,cAACgC,GAAA,EAAKK,QAAN,CACIvF,KAAK,OACLyF,YAAY,6CACZ7F,MAAOmK,GACPrE,SAAU,SAACV,GAAD,OAAOsG,GAAWtG,EAAEW,OAAO/F,aAI7C,cAACgG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAAKnF,UAAU,OAA5D,mC,aC5ThBsJ,EAAQ,IANR9N,G,GAAAA,aACA+N,G,GAAAA,YACA5N,G,GAAAA,WACA6N,G,GAAAA,UACAC,G,GAAAA,WACAC,G,GAAAA,QAIEC,GAAW,WAAyB,IAAxBC,EAAuB,uDAAf,IAAIlO,KACtBgC,EAAO6L,GAAYE,GAAWG,EAAO,IAEzC,OAAO,WACH,IAAMC,EAAO,YAAIC,MAAM,IAAInM,KAAI,SAACoM,EAAGhF,GAAJ,OAAU2E,GAAQhM,EAAMqH,MAEvD,OADArH,EAAOgM,GAAQG,EAAK,GAAI,GACjBA,IAIFG,GAAY,WAAyB,IAAxBJ,EAAuB,uDAAf,IAAIlO,KAC9BuO,EAAQ,GACRvM,EAAOkM,EAELM,EAAiB,SAACC,GACpB,OAAOA,EAAMA,EAAMnF,OAAS,GAAG,IAGnC,OAAO,WACH,IAAMoF,EAAgBT,GAASnO,GAAakC,IACtC2M,EAAUZ,GAAWD,GAAU7N,GAAW+B,KAGhD,IAFAuM,EAAMrJ,KAAKwJ,KAEJF,EAAeD,GAASI,GAC3BJ,EAAMrJ,KAAKwJ,KAGf,IAAID,EAAQF,EAIZ,OAHAA,EAAQ,GACRvM,EAAOgM,GAAQQ,EAAeC,GAAQ,GAE/BA,ICwDAG,OArFf,YAAiD,IAAnB5J,EAAkB,EAAlBA,QAAS6J,EAAS,EAATA,MAG7BC,EAAUD,EAAME,OAAOrK,GAHe,EAIlBiB,mBAAS,IAJS,mBAIrCuE,EAJqC,KAI9B8E,EAJ8B,KAOpCvQ,EADW8C,IACX9C,SAGFwQ,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU,IAAItO,KAAK4J,OAAOM,EAAMX,eAAhC+E,GAwBd,OArBArJ,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAOWyQ,EAPZ,yCAOH,+BAAAzM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIuL,EADJ,KAEnBpM,GAHR,gBACYI,EADZ,EACYA,KAIRkM,EAASlM,GALb,2CAPG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAU3C4L,SAfAlK,EAAQE,KAAK,YAiBlB,CAACzG,EAAUuG,EAAS6J,IAGnB,gCACI,cAAC,QAAD,CAAMlK,GAAG,WAAWL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAA9D,iCAGA,oBAAI3I,UAAU,MAAd,4CACC4F,EAAMxK,YACP,sBAAK4E,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAC8H,aAAa,YAAa1H,QAAQ,gBAA9C,UAAiE8G,EAAM,GAAG,GAAGvF,cAA7E,IAA6FuF,EAAM,GAAG,GAAGtF,WAAa,KAEtH,8BACI,cAAC7D,GAAA,EAAD,CAAKd,UAAU,mBAAf,SACKiK,EAAMtM,KAAI,SAACkM,GAAD,OACP,cAAC,IAAMiB,SAAP,UACCjB,EAAKlM,KAAI,SAACF,GAAD,OACN,cAACsD,GAAA,EAAD,CAAaf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAA9D,SAEI,eAACC,GAAA,EAAD,CAAMlI,MAAO,CAACE,MAAO,QAASD,OAAO,SAArC,UACI,eAACiI,GAAA,EAAK/L,OAAN,WACKzB,EAAEkH,WAAa,EADpB,MAC0BlH,EAAEoH,UAD5B,KAC0C8F,EAAKlN,EAAEyN,UADjD,OAGA,cAACD,GAAA,EAAKE,KAAN,UACKvF,EAAMxK,WAAWuC,KAAI,SAACL,GAAD,OAClB,8BACKA,EAAKI,OAAS6H,aAAO9H,EAAG,eACrB,gCACI,cAACwN,GAAA,EAAKG,MAAN,CAAYrI,MAAO,CAACsC,MAAO,WAA3B,SAAuC,+CACvC,eAAC4F,GAAA,EAAKI,KAAN,WACK/N,EAAKgO,WAAW9E,UAAU,EAAG,GAC7B,IAFL,IAEW,IACNlJ,EAAKiO,SAAS/E,UAAU,EAAG,UAPlClJ,EAAKuI,cARrBpI,OAFOoM,iBCgHlC2B,OA/Jf,YAAmD,IAqB1BC,EArBMC,EAAmB,EAAnBA,UAAWhO,EAAQ,EAARA,KAAQ,EAGhB2D,oBAAS,GAHO,mBAGtCqC,EAHsC,KAG9BiI,EAH8B,OAIZtK,oBAAS,GAJG,mBAItCwC,EAJsC,KAI5B+H,EAJ4B,OAKVvK,mBAAS,IALC,mBAKtCsC,EALsC,KAK3BkI,EAL2B,OAMfxK,mBAAS,IANM,mBAMtCuC,EANsC,KAM7BkI,EAN6B,OAOXzK,oBAAS,GAPE,mBAOtC0K,EAPsC,KAO3BC,EAP2B,KAUxC5M,EAAgBrB,IAEdpD,EADayC,IACbzC,QA2DJ,OA7CJgG,qBAAU,WAEE+K,GAAaK,GACbJ,EAAUD,EAAUO,SACpBL,EAAYF,EAAUQ,YACtBL,EAAavG,OAAOoG,EAAUJ,YAAY9E,UAAU,EAAE,IACtDsF,EAAWxG,OAAOoG,EAAUH,UAAU/E,UAAU,EAAG,IACnDwF,GAAa,IAETnI,GACAgI,EAAa,SACbC,EAAW,UACJnI,GAAcC,IACrBiI,EAAalR,EAAQ4L,cAAcC,UAAU,EAAE,IAC/CsF,EAAWnR,EAAQ8L,YAAYD,UAAU,EAAE,KAI/C9I,IAASgG,GACTI,GAAgB1E,EAAe1B,GAG/BgG,GAAUhG,GAAQiG,GAAaC,GAC/BH,GAAarE,EAAe1B,EAAMgG,EAAQC,EAAWC,EAASC,KAmBvE,CAAGA,EAAUH,EAAQhG,EAAMiG,EAAWC,IAKjC,mCAEI,cAAC/D,EAAA,EAAD,CAAWkD,MAAO,CAAEsC,OAtDXoG,EAsD+B/H,EArD5C+H,EAAa,aACV,KAoDC,SACI,cAACzJ,GAAA,EAAKE,MAAN,UAWMyB,GAAcC,EAEhB,gCACA,cAAC5B,GAAA,EAAKI,MAAN,CAAYpC,UAAW,MAAvB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIuG,GAAG,SACHlM,MAAOgH,EACPlB,SAAU,SAACV,GACP6J,GAAWjI,IAMf1D,UAAW,OACX+C,MAAO,CAAC8F,OAAQ,WAXpB,UAaI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,uBAII,cAACsF,GAAA,EAAKI,MAAN,CAAYpC,UAAW,OAAvB,sCACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOiH,EACPmF,IAAK,IAAIpN,KAAK,uBACd6J,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAO+J,EAAa/J,EAAEmH,OAC9BkD,SAAUtI,GAAYH,EACtBwF,aAAcrF,EACdsF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAE8F,OAAQ,aAGrB,cAAC7G,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,sCACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOkH,EACPkF,IAAK,IAAIpN,KAAK,cAAgBiI,GAC9B4B,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAOgK,EAAWhK,EAAEmH,OAC5BkD,SAAUtI,GAAYH,EACtBwF,aAAcrF,EACdsF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAE8F,OAAQ,aAGrB,cAAC7G,GAAA,EAAKE,MAAN,CAAYlC,UAAU,OAAOmC,UAAU,oBAAvC,SACI,cAACH,GAAA,EAAKoK,MAAN,CACIhH,UAAW1B,EACX5G,KAAK,WACLuP,MAAM,eACNC,QAASzI,EACTrB,SAAU,kBAAMoJ,GAAa/H,IAC7B7D,UAAU,mBA7DA,cAAC,GAAD,WC+DnCuM,OAvJf,YAAgD,IAAnB7L,EAAkB,EAAlBA,QAAS6J,EAAS,EAATA,MAI1BpQ,EADW8C,IACX9C,SAEAiB,EADW0C,IACX1C,WAGFoP,EAAUD,EAAME,OAAOrK,GATc,EAUjBiB,mBAAS,IAVQ,mBAUpCuE,EAVoC,KAU7B8E,EAV6B,OAWbrJ,mBAAS,IAXI,mBAWpCmL,EAXoC,KAW3BC,EAX2B,OAYjBpL,mBAAS,IAZQ,mBAYpC4I,EAZoC,KAY7ByC,EAZ6B,OAabrL,oBAAS,GAbI,mBAapC5G,EAboC,KAa3B4N,EAb2B,KAiBrCsC,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAItCnG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAKxGjE,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAQWyQ,EARZ,yCAQH,+BAAAzM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIuL,EADJ,KAEnBpM,GAHR,gBACYI,EADZ,EACYA,KAIRkM,EAASlM,GACTiO,EAAWjO,EAAKgO,SAChBE,EAAS1C,GAAU,IAAItO,KAAK4J,OAAO9G,EAAKyG,eAA/B+E,IACT3B,GAAW,GACXC,QAAQC,IAAI/J,GAThB,2CARG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAe3C4L,SApBAlK,EAAQE,KAAK,YAwBlB,CAACzG,EAAUuG,EAAS6J,IAEvB,IAAM1I,EAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,kBACEyG,OAAOC,QAAQ,6EAFD,uBAGRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAN7B,SAWSV,KAAMoK,IAAN,mCACS8B,EADT,KAEpB,CACK,WAAcpP,EACd,QAAWoR,GAEfpO,GAjBU,kBAWNI,KAQRkC,EAAQE,KAAK,YAnBC,2CAAH,sDAuBnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAA9D,iCAGA,oBAAI3I,UAAU,MAAd,4CAECvF,EAAU,cAAC,GAAD,IAEP,sBAAKuF,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAE8H,aAAc,YAAa1H,QAAS,gBAAjD,UACK8G,EAAM,GAAG,GAAGvF,cADjB,IACiCuF,EAAM,GAAG,GAAGtF,WAAa,KAG1D,eAAC3C,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACf,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKiK,EAAMtM,KAAI,SAACkM,EAAM9E,GAAP,OACP,cAAC,IAAM+F,SAAP,UACKjB,EAAKlM,KAAI,SAACD,EAAMiP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKpN,EAAKiH,aAAesF,EAAM,GAAG,GAAGtF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOjL,UAAU,eAAjB,UACI,eAACiL,GAAA,EAAK/L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD8F,EAAKjN,EAAKwN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CACIzN,KAAM8G,EAAc9G,GACpBgO,UAAW9F,EAAMxK,WAAWoC,MAAK,SAAAoP,GAAO,OAAIA,EAAQlP,OAAS8G,EAAc9G,gBAV9EiP,OAFR5H,QAwB7B,eAACjE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACI,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACe,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIuG,GAAG,WACHiE,IAAI,IACJtK,YAAY,qKACZ7F,MAAO8P,EACPhK,SAAU,SAACV,GAAD,OAAO2K,EAAW3K,EAAEW,OAAO/F,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC0C,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAA7C,yCCfjB2H,OA3Hf,YAAyC,IAoBhBrB,EApBD/K,EAAgB,EAAhBA,QAAShD,EAAO,EAAPA,KAAO,EAEN2D,oBAAS,GAFH,mBAE5BqC,EAF4B,KAEpBiI,EAFoB,OAGFtK,oBAAS,GAHP,mBAG5BwC,EAH4B,KAGlB+H,EAHkB,OAIAvK,mBAAS,IAJT,mBAI5BsC,EAJ4B,KAIjBkI,EAJiB,OAKNxK,mBAAS,IALH,mBAK7BuC,EAL6B,KAKpBkI,EALoB,KAU5BnR,EADayC,IACbzC,QAEFyE,GADatB,IACGC,KAYhBgP,EAAe,SAACtB,GAClB,OAAIA,EAAa,UACV,eAwBP,OArBJ9K,qBAAU,WAEFkD,GACAgI,EAAa,SACbC,EAAW,UACJnI,GAAcC,IACrBiI,EAAalR,EAAQ4L,cAAcC,UAAU,EAAE,IAC/CsF,EAAWnR,EAAQ8L,YAAYD,UAAU,EAAE,KAG3C9I,IAASgG,GACTI,GAAgB1E,EAAe1B,GAG/BgG,GAAUhG,GAAOiG,GAAaC,GAC9BH,GAAarE,EAAe1B,EAAMgG,EAAQC,EAAWC,EAASC,KAGnE,CAACnD,EAASmD,EAAUH,EAAQhG,EAAMiG,EAAWC,IAKxC,mCAEI,cAAC/D,EAAA,EAAD,CAAWkD,MAAO,CAACsC,OAlCVoG,EAkC6B/H,EAjC1C+H,EAAa,aACV,KAgCC,SACI,eAACzJ,GAAA,EAAKE,MAAN,WAEI,cAACF,GAAA,EAAKI,MAAN,CAAYpC,UAAW,MAAvB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIuG,GAAG,SACHlM,MAAOgH,EACPlB,SAAU,SAACV,GACP6J,GAAWjI,IAEf1D,UAAW,OACX+C,MAAO,CAAC8F,OAAQ,WAPpB,UASI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,uBAGFiH,GAAcC,EACZ,gCACI,cAAC5B,GAAA,EAAKI,MAAN,CAAYpC,UAAW,OAAvB,sCACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOiH,EACPmF,IAAK,IAAIpN,KAAK,uBACd6J,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAO+J,EAAa/J,EAAEmH,OAC9BkD,SAAUtI,GAAYH,EACtBwF,aAAcrF,EACdsF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAC8F,OAAQkE,EAAarJ,MAGjC,cAAC1B,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,sCACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOkH,EACPkF,IAAK,IAAIpN,KAAK,cAAeiI,GAC7B4B,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAOgK,EAAWhK,EAAEmH,OAC5BkD,SAAUtI,GAAYH,EACtBwF,aAAcrF,EACdsF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAC8F,OAAQkE,EAAarJ,MAGjC,cAAC1B,GAAA,EAAKE,MAAN,CAAYlC,UAAU,OAAOmC,UAAU,oBAAvC,SACI,cAACH,GAAA,EAAKoK,MAAN,CACIhH,UAAW1B,EACX5G,KAAK,WACLuP,MAAM,eACN7J,SAAU,kBAAMoJ,GAAa/H,IAC7B7D,UAAU,mBAxCA,cAAC,GAAD,YC0DnCgN,OA5Hf,YAAyC,IAAZtM,EAAW,EAAXA,QAIjBvG,EADW8C,IACX9C,SAEAQ,EADayC,IACbzC,QACF4J,EAAazG,IACX1C,EAAoCmJ,EAApCnJ,WAAYE,EAAwBiJ,EAAxBjJ,OAAQD,EAAgBkJ,EAAhBlJ,YARQ,EAWNgG,mBAAS,IAXH,mBAW7BmL,EAX6B,KAWpBC,EAXoB,KAc9B9B,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU1O,EAAO,GAAjB0O,GAERxF,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAIxGjE,qBAAU,WACDxG,EAEMkB,GACPqF,EAAQE,KAAK,YAFbF,EAAQE,KAAK,YAKlB,CAACzG,EAAUuG,IAEd,IAAMmB,EAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,kBACEyG,OAAOC,QAAQ,wMAFD,uBAGRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAN7B,SAUSV,KAAMC,KAAN,4BAEnB,CACI,WAAcnD,EACd,QAAWT,EAAQsL,QACnB,YAAezB,EAAclJ,EAAO,IACpC,UAAakJ,EAAclJ,EAAO,IAClC,QAAWkR,EACX,aAAe,GAEnBpO,GApBU,kBAUNI,KAYRkC,EAAQE,KAAK,YAtBC,2CAAH,sDA0BnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAA9D,iCAGA,oBAAI3I,UAAU,MAAd,wDAEA,sBAAKA,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAE8H,aAAc,YAAa1H,QAAS,gBAAjD,UACK8G,EAAM,GAAG,GAAGvF,cADjB,IACiCuF,EAAM,GAAG,GAAGtF,WAAa,KAG1D,eAAC3C,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACf,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKiK,EAAMtM,KAAI,SAACkM,EAAM9E,GAAP,OACP,cAAC,IAAM+F,SAAP,UACKjB,EAAKlM,KAAI,SAACD,EAAMiP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKpN,EAAKiH,aAAesF,EAAM,GAAG,GAAGtF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOjL,UAAU,eAAjB,UACI,eAACiL,GAAA,EAAK/L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD8F,EAAKjN,EAAKwN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CAAezN,KAAM8G,EAAc9G,aARlCiP,OAFR5H,QAqB7B,eAACjE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACQ,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACe,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIuG,GAAG,WACHiE,IAAI,IACJtK,YAAY,qKACZ7F,MAAO8P,EACPhK,SAAU,SAACV,GAAD,OAAO2K,EAAW3K,EAAEW,OAAO/F,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC0C,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAA7C,yC,SCgKjB8H,OA7Qf,YAAyC,IAAZvM,EAAW,EAAXA,QAAW,EAERW,mBAAS,IAFD,mBAE7B8C,EAF6B,KAErBC,EAFqB,KAM5BjK,EADW8C,IACX9C,SACFgF,EAAgBjC,IAChBV,EAAWa,IACXgH,EAAejH,IACbzC,EAAqC0J,EAArC1J,QAAkB2J,EAAmBD,EAA5B5J,QACX8J,EAAazG,IACXxC,EAA2CiJ,EAA3CjJ,OAAQM,EAAmC2I,EAAnC3I,SAAUP,EAAyBkJ,EAAzBlJ,YAAaZ,EAAY8J,EAAZ9J,QACjC2E,EAAgBrB,IAEhByG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAiDxG,OA9CAjE,qBAAU,WACN,GAAKxG,EAIE,CAAC,IASW2K,EATZ,yCASH,+BAAA3G,EAAA,6DACIiB,EAAc,CAACtC,KAAMlC,IADzB,SAE2B0D,KAAMW,IAAN,wBAEnBb,GAJR,gBAEYI,EAFZ,EAEYA,KAIR4F,EAAU5F,GAEVY,EAAc,CAACtC,KAAMjC,IARzB,2CATG,qDACHiE,GAAWtC,EAAUrC,GAErB,IAAMiE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAa3C8F,QAvBW,CAGX9G,GAFkB,iBACG,WACUmB,MAuBpC,CAACuB,EAASvG,EAAUkB,EAAaC,IAoBhC,gCACI,2DAAUX,EAAQwF,KAAlB,mBACA,eAACW,GAAA,EAAD,CAAKd,UAAU,OAAf,UAGKvF,EAAU,cAAC,GAAD,IAEP,eAACsG,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,GAAIlF,UAAU,OAA9B,UACI,gEACA,eAACH,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,cAAC,gBAAD,CAAeK,GAAG,qBAAqBL,UAAU,wBAAjD,SACI,eAAC0C,GAAA,EAAD,CAAQ1C,UAAU,SAASL,QAAQ,kBAAkByF,SAAU/J,GAAgB,IAAIK,KAASE,EAA5F,sFAAoH,oBAAGoE,UAAU,MAAb,UAAoBwE,EAAclJ,EAAO,IAAzC,MAAkDkJ,EAAclJ,EAAO,YAE/L,oBAAG0E,UAAU,YAAb,4CAAgC3E,EAAc,mBAAG0H,MAAO,CAACsC,MAAO,QAAlB,sCAAsC,mBAAGtC,MAAO,CAACsC,MAAO,OAAlB,mCACpF,oBAAGrF,UAAU,YAAb,4CAAgCsF,OAAOC,aAAO3J,EAAU,uBAAxD,oBACGP,GAAgB,IAAIK,KAASE,GAC5B,cAAC,GAAD,CAAS+D,QAAQ,SAAjB,+KAKR,oBAAIK,UAAU,OAAd,4CACmB,IAAlBmE,EAAOa,OAAe,cAAC,GAAD,CAASrF,QAAQ,OAAjB,oEACnB,eAAC6F,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAAC3F,UAAU,kBAA1C,UACI,gCACI,+BACI,oCACA,wCACA,wCACA,4BAGR,gCACKmE,EAAOxG,KAAI,SAACiI,GAAD,OACR,+BACI,6BAAKA,EAAMC,MACX,+BAAKD,EAAMX,aAAX,IAA0B,IAA1B,MAAkC,IAAKW,EAAME,cAC7C,6BAAKF,EAAMG,aAAe,eAAO,uBACjC,6BACMH,EAAMG,aACJ,cAAC,gBAAD,CAAe1F,GAAE,+BAA0BuF,EAAMC,KAAjD,SACI,cAACnD,GAAA,EAAD,CAAQ1C,UAAU,SAASL,QAAQ,kBAAnC,4BAGJ,cAAC,gBAAD,CAAeU,GAAE,8BAAyBuF,EAAMC,KAAhD,SACI,cAACnD,GAAA,EAAD,CAAQ1C,UAAU,SAASL,QAAQ,eAAnC,gCAXPiG,EAAMC,gBA0BtCvB,EAAiB,cAAC,GAAD,IACd,eAACvD,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,GAAIlF,UAAU,OAA9B,UAEA,eAACc,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKE,GAAK,GAAIiE,GAAI,GAAIlE,GAAI,GAA1B,SACI,wEAEJ,cAACD,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,EAAGlE,GAAI,EAAGhB,UAAU,4BAApC,SACI,cAAC,gBAAD,CAAeK,GAAI,uBAAnB,SACQ,cAACqC,GAAA,EAAD,CAAQ/C,QAAQ,oBAAmBK,UAAU,SAA7C,iCAOZ,eAACwF,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACR,KAAK,KAAKnF,UAAU,SAApD,UACI,gCACI,+BACI,qCACA,uCACA,8CAGR,kCACI,+BACI,oCACA,6BAAKrF,EAAQkL,MACb,0BAEJ,+BACI,8CACA,6BAAKlL,EAAQwF,OACb,0BAEJ,+BACI,8CACA,6BAAKxF,EAAQqL,OACb,0BAEJ,+BACI,gEACA,6BAAKrL,EAAQsL,UACb,0BAEJ,+BACI,0DACA,6BAAKtL,EAAQuL,oBACb,0BAEJ,+BACI,oDACA,6BAAKvL,EAAQwL,UAAY,qBAAQ,iBACjC,0BAEJ,+BACI,0DACA,6BAAKxL,EAAQyL,cAAgB,SAAM,iBACnC,0BAEJ,+BACI,sDACA,6BAAKzL,EAAQ0L,mBAAqB,SAAM,iBACxC,0BAEJ,+BACI,8CACA,6BAAK1L,EAAQ2L,eAAiB,SAAM,iBACpC,0BAEJ,+BACI,uEACA,mCAAM3L,EAAQ4L,cAAcC,UAAU,EAAE,MACxC,yHAEJ,+BACI,uEACA,mCAAM7L,EAAQ8L,YAAYD,UAAU,EAAE,MACtC,yHAEJ,+BACI,yFACA,yCAAO7L,EAAQ+L,0BACf,6GAEJ,+BACI,uEACA,mCAAM/L,EAAQgM,qBAAd,OACA,6GAEJ,+BACI,2DACA,mCAAMhM,EAAQiM,WACd,0BAEJ,+BACI,2DACA,mCAAMjM,EAAQkM,WACd,gIAWxB,4EACA,eAAC,GAAD,CAASlH,QAAQ,OAAjB,uVAEI,uBACA,uBAHJ,6fAQA,eAACE,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,eAACc,GAAA,EAAD,CAAKd,UAAU,MAAf,UACI,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,EAAGlE,GAAI,EAAvB,SACI,cAAC0B,GAAA,EAAD,CAAQnC,QAtMF,WACtBwD,GAAmB3E,GAAe,IAqMkBO,QAAQ,eAAeyF,SAAU/J,EAArE,0DAEJ,cAAC0F,GAAA,EAAD,CAAKE,GAAI,EAAGiE,GAAI,EAAGlE,GAAI,EAAvB,SACI,cAAC0B,GAAA,EAAD,CAAQnC,QAtMD,WACvBwD,GAAmB3E,GAAe,IAqMmBO,QAAQ,iBAAiByF,UAAW/J,EAAzE,uDAGR,eAACyF,GAAA,EAAD,CAAKd,UAAU,MAAf,UACI,cAACe,GAAA,EAAD,UACI,cAAC2B,GAAA,EAAD,CAAQnC,QAxMF,WACtByD,GAAa5E,EAAevD,YAAQN,YAASI,YAAW,IAAID,OAAU,MAuMlBiE,QAAQ,oBAA5C,8FAEJ,cAACoB,GAAA,EAAD,UACI,cAAC2B,GAAA,EAAD,CAAQnC,QArMN,WAClByD,GAAa5E,EAAe7D,YAASI,YAAW,IAAID,SAoMJiE,QAAQ,oBAAxC,4EAEJ,cAACoB,GAAA,EAAD,UACI,cAAC2B,GAAA,EAAD,CAAQnC,QA3MJ,WACpByD,GAAa5E,EAAeqK,aAAWjO,YAAa,IAAIE,SA0MNiE,QAAQ,oBAA1C,sFC0DTuN,OAjUf,YAA6C,IAAXxM,EAAU,EAAVA,QAAU,EAEhBW,mBAAS,IAFO,mBAEjClB,EAFiC,KAE3BmB,EAF2B,OAGhBD,mBAAS,IAHO,mBAGjC2E,EAHiC,KAG3Be,EAH2B,OAIV1F,mBAAS,IAJC,mBAIjC4E,EAJiC,KAIxBe,EAJwB,OAKJ3F,mBAAS,IALL,mBAKjC4F,EALiC,KAKrBC,EALqB,OAMR7F,oBAAS,GAND,mBAMjC8F,EANiC,KAMvBC,EANuB,OAOZ/F,oBAAS,GAPG,mBAOjCgG,EAPiC,KAOzBC,EAPyB,OAQJjG,oBAAS,GARL,mBAQjCkG,EARiC,KAQrBC,EARqB,OASVnG,oBAAS,GATC,mBASjCoG,EATiC,KASxBC,EATwB,OAUArG,mBAAS,IAVT,mBAUjCsG,EAViC,KAUnBC,EAVmB,OAWJvG,mBAAS,IAXL,mBAWjCwG,EAXiC,KAWrBC,EAXqB,OAYJzG,mBAAS,IAZL,mBAYjC0G,EAZiC,KAYrBC,EAZqB,OAaR3G,mBAAS,IAbD,mBAajC4G,GAbiC,KAavBC,GAbuB,QAcV7G,mBAAS,IAdC,qBAcjCuF,GAdiC,MAcxBuB,GAdwB,SAeV9G,mBAAS,IAfC,qBAejCwF,GAfiC,MAexBuB,GAfwB,SAgBV/G,oBAAS,GAhBC,qBAgBjC5G,GAhBiC,MAgBxB4N,GAhBwB,MAoBjClO,GADY8C,IACZ9C,SACDqC,GAAWa,IAET1C,GADayC,IACbzC,QAERgG,qBAAU,WACDxG,IAGD2E,GAAWtC,GAAUrC,IAErBQ,GAAQwF,KAAOmB,EAAQ3G,GAAQwF,MAAQmB,EAAQ,oDAC/C3G,GAAQqL,KAAOe,EAAQpM,GAAQqL,MAAQe,EAAQ,IAC/CpM,GAAQuL,kBAAoBgB,EAAcvM,GAAQuL,mBAAqBgB,EAAc,IACrFvM,GAAQsL,QAAUe,EAAWrM,GAAQsL,SAAWe,EAAW,IAC3DrM,GAAQwL,UAAYiB,EAAYzM,GAAQwL,WAAaiB,GAAY,GACjEzM,GAAQyL,cAAgBkB,EAAU3M,GAAQyL,eAAiBkB,GAAU,GACrE3M,GAAQ0L,mBAAqBmB,EAAc7M,GAAQ0L,oBAAsBmB,GAAc,GACvF7M,GAAQ2L,eAAiBoB,EAAW/M,GAAQ2L,gBAAkBoB,GAAW,GACzE/M,GAAQ4L,cAAgBqB,EAAgBjN,GAAQ4L,eAAiBqB,EAAgB,IACjFjN,GAAQ8L,YAAcqB,EAAcnN,GAAQ8L,aAAeqB,EAAc,IACzEnN,GAAQ+L,uBAAyBsB,EAAcrN,GAAQ+L,wBAA0BsB,EAAc,GAC/FrN,GAAQgM,qBAAuBuB,GAAYvN,GAAQgM,sBAAwBuB,GAAY,GACvFvN,GAAQiM,QAAUuB,GAAWxN,GAAQiM,SAAWuB,GAAW,IAC3DxN,GAAQkM,QAAUuB,GAAWzN,GAAQkM,SAAWuB,GAAW,IAE3DC,IAAW,IAnBX3H,EAAQE,KAAK,UAsBb+G,GAAiBE,IACjBD,EAAgBjN,GAAQ4L,cAAcC,UAAU,EAAE,IAClDsB,EAAcnN,GAAQ8L,YAAYD,UAAU,EAAE,OAEnD,CAAC9F,EAASvG,KAEb,IAAM0H,GAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,iBACFuG,QAAQC,IAAI,cACZD,QAAQC,IAAIpI,EAAM6F,EAAMC,EAASkB,EAAUE,EAAQE,EAAYE,EAASE,EAAcE,EAAYE,EAAYE,GAAUrB,GAASC,KAC7H2B,OAAOC,QAAQ,8FAJD,wBAKRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAc,UAAD,OAAY5E,GAAS6E,SAR5B,SAYSV,KAAMoK,IAAN,6BAEnB,CACI,KAAQvI,EACR,KAAQ6F,EACR,WAAciB,EACd,QAAWhB,EACX,SAAYkB,EACZ,OAAUE,EACV,WAAcE,EACd,QAAWE,EACX,aAAgBE,EAChB,WAAcE,EACd,WAAcE,EACd,SAAYE,GACZ,QAAWrB,GACX,QAAWC,IAEfzI,GA9BU,kBAYNI,KAoBRkC,EAAQE,KAAK,iBAhCC,4CAAH,sDAoCnB,OACI,qCACI,cAAC,QAAD,CAAMP,GAAG,gBAAgBL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAAnE,iCAGClO,GAAU,cAAC,GAAD,IACX,cAAC,GAAD,UACI,eAACuH,GAAA,EAAD,CAAMC,SAAUJ,GAAe7B,UAAU,aAAzC,UACI,eAACgC,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,cAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR8C,UAAQ,EACRtI,KAAK,OACLyF,YAAY,iCACZ7F,MAAOyD,EACPqC,SAAU,SAACV,GAAD,OAAOR,EAAQQ,EAAEW,OAAO/F,aAI1C,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOsJ,EACPxD,SAAU,SAACV,GAAD,OAAOiF,EAAQjF,EAAEW,OAAO/F,QAClCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,yDAAf,oEACA,wBAAQA,MAAO,iCAAf,4CACA,wBAAQA,MAAO,GAAf,kGAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuK,EACPzE,SAAU,SAACV,GAAD,OAAOoF,EAAcpF,EAAEW,OAAO/F,QACxCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,GAAf,8GAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,4CACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuJ,EACPzD,SAAU,SAACV,GAAD,OAAOkF,EAAWlF,EAAEW,OAAO/F,QACrCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,GAAf,oHAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOyK,EACP3E,SAAU,kBAAM4E,GAAaD,IAC7BpE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,gCACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO2K,EACP7E,SAAU,kBAAM8E,GAAWD,IAC3BtE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,kCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO6K,EACP/E,SAAU,kBAAMgF,GAAeD,IAC/BxE,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,0BACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAO+K,EACPjF,SAAU,kBAAMkF,GAAYD,IAC5B1E,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,cAACsF,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOiL,EACPmB,IAAK,IAAIpN,KAAK,uBACd6J,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAO8F,EAAgB9F,EAAEmH,OACjCC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAC8F,OAAQ,aAGpB,cAAC7G,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACIuC,YAAY,6CACZ7F,MAAOmL,EACPiB,IAAK,IAAIpN,KAAK,cAAgBiM,GAC9BpC,OAAO,QACPwD,KAAM,GACNC,OAAQ,SAAClH,GAAD,OAAOgG,EAAchG,EAAEmH,OAC/BC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXtG,MAAO,CAAE8F,OAAQ,aAGrB,eAAC7G,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAW,YAAvB,oEACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOqL,EACPvF,SAAU,SAACV,GAAD,OAAOkG,EAAclG,EAAEW,OAAO/F,QACxCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,4IAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,kDACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOuL,GACPzF,SAAU,SAACV,GAAD,OAAOoG,GAAYpG,EAAEW,OAAO/F,QACtCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,0HAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,eAACgC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRsG,GAAG,SACHlM,MAAOkK,GACPpE,SAAU,SAACV,GAAD,OAAOqG,GAAWrG,EAAEW,OAAO/F,QACrCqG,MAAO,CAAC8F,OAAQ,WALpB,UAOI,wBAAQnM,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,qBAAf,gCACA,wBAAQA,MAAO,GAAf,sFAIR,eAACsF,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYpC,UAAU,YAAtB,sCACA,cAACgC,GAAA,EAAKK,QAAN,CACIvF,KAAK,OACLyF,YAAY,6CACZ7F,MAAOmK,GACPrE,SAAU,SAACV,GAAD,OAAOsG,GAAWtG,EAAEW,OAAO/F,aAI7C,cAACgG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAAKnF,UAAU,OAA5D,mCC1LLmN,OA5Hf,YAA6C,IAAZzM,EAAW,EAAXA,QAIrBvG,EADW8C,IACX9C,SAEAQ,EADayC,IACbzC,QACF4J,EAAazG,IACX1C,EAAoCmJ,EAApCnJ,WAAYE,EAAwBiJ,EAAxBjJ,OAAQD,EAAgBkJ,EAAhBlJ,YARY,EAWVgG,mBAAS,IAXC,mBAWjCmL,EAXiC,KAWxBC,EAXwB,KAclC9B,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU1O,EAAO,GAAjB0O,GAERxF,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAIxGjE,qBAAU,WACDxG,EAEMkB,GACPqF,EAAQE,KAAK,iBAFbF,EAAQE,KAAK,YAKlB,CAACzG,EAAUuG,IAEd,IAAMmB,EAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,kBACEyG,OAAOC,QAAQ,wMAFD,uBAGRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAN7B,SAUSV,KAAMC,KAAN,4BAEnB,CACI,WAAcnD,EACd,QAAWT,EAAQsL,QACnB,YAAezB,EAAclJ,EAAO,IACpC,UAAakJ,EAAclJ,EAAO,IAClC,QAAWkR,EACX,aAAe,GAEnBpO,GApBU,kBAUNI,KAYRkC,EAAQE,KAAK,iBAtBC,2CAAH,sDA0BnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,gBAAgBL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAAnE,iCAGA,oBAAI3I,UAAU,MAAd,wDAEA,sBAAKA,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAE8H,aAAc,YAAa1H,QAAS,gBAAjD,UACK8G,EAAM,GAAG,GAAGvF,cADjB,IACiCuF,EAAM,GAAG,GAAGtF,WAAa,KAG1D,eAAC3C,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACf,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKiK,EAAMtM,KAAI,SAACkM,EAAM9E,GAAP,OACP,cAAC,IAAM+F,SAAP,UACKjB,EAAKlM,KAAI,SAACD,EAAMiP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKpN,EAAKiH,aAAesF,EAAM,GAAG,GAAGtF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOjL,UAAU,eAAjB,UACI,eAACiL,GAAA,EAAK/L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD8F,EAAKjN,EAAKwN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CAAezN,KAAM8G,EAAc9G,aARlCiP,OAFR5H,QAqB7B,eAACjE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACQ,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACe,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIuG,GAAG,WACHiE,IAAI,IACJtK,YAAY,qKACZ7F,MAAO8P,EACPhK,SAAU,SAACV,GAAD,OAAO2K,EAAW3K,EAAEW,OAAO/F,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC0C,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAA7C,yCC0CjBiI,OAvJf,YAAoD,IAAnB1M,EAAkB,EAAlBA,QAAS6J,EAAS,EAATA,MAI9BpQ,EADW8C,IACX9C,SAEAiB,EADW0C,IACX1C,WAGFoP,EAAUD,EAAME,OAAOrK,GATkB,EAUrBiB,mBAAS,IAVY,mBAUxCuE,EAVwC,KAUjC8E,EAViC,OAWjBrJ,mBAAS,IAXQ,mBAWxCmL,EAXwC,KAW/BC,EAX+B,OAYrBpL,mBAAS,IAZY,mBAYxC4I,EAZwC,KAYjCyC,EAZiC,OAajBrL,oBAAS,GAbQ,mBAaxC5G,EAbwC,KAa/B4N,EAb+B,KAiBzCsC,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAItCnG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAKxGjE,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAQWyQ,EARZ,yCAQH,+BAAAzM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIuL,EADJ,KAEnBpM,GAHR,gBACYI,EADZ,EACYA,KAIRkM,EAASlM,GACTiO,EAAWjO,EAAKgO,SAChBE,EAAS1C,GAAU,IAAItO,KAAK4J,OAAO9G,EAAKyG,eAA/B+E,IACT3B,GAAW,GACXC,QAAQC,IAAI/J,GAThB,2CARG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAe3C4L,SApBAlK,EAAQE,KAAK,YAwBlB,CAACzG,EAAUuG,EAAS6J,IAEvB,IAAM1I,EAAa,yCAAG,WAAMC,GAAN,kBAAA3D,EAAA,yDAClB2D,EAAEC,kBACEyG,OAAOC,QAAQ,6EAFD,uBAGRrK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAN7B,SAWSV,KAAMoK,IAAN,mCACS8B,EADT,KAEpB,CACK,WAAcpP,EACd,QAAWoR,GAEfpO,GAjBU,kBAWNI,KAQRkC,EAAQE,KAAK,iBAnBC,2CAAH,sDAuBnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,gBAAgBL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAAnE,iCAGA,oBAAI3I,UAAU,MAAd,4CAECvF,EAAU,cAAC,GAAD,IAEP,sBAAKuF,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAE8H,aAAc,YAAa1H,QAAS,gBAAjD,UACK8G,EAAM,GAAG,GAAGvF,cADjB,IACiCuF,EAAM,GAAG,GAAGtF,WAAa,KAG1D,eAAC3C,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACf,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKiK,EAAMtM,KAAI,SAACkM,EAAM9E,GAAP,OACP,cAAC,IAAM+F,SAAP,UACKjB,EAAKlM,KAAI,SAACD,EAAMiP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKpN,EAAKiH,aAAesF,EAAM,GAAG,GAAGtF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOjL,UAAU,eAAjB,UACI,eAACiL,GAAA,EAAK/L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD8F,EAAKjN,EAAKwN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CACIzN,KAAM8G,EAAc9G,GACpBgO,UAAW9F,EAAMxK,WAAWoC,MAAK,SAAAoP,GAAO,OAAIA,EAAQlP,OAAS8G,EAAc9G,gBAV9EiP,OAFR5H,QAwB7B,eAACjE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACI,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACe,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIuG,GAAG,WACHiE,IAAI,IACJtK,YAAY,qKACZ7F,MAAO8P,EACPhK,SAAU,SAACV,GAAD,OAAO2K,EAAW3K,EAAEW,OAAO/F,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC0C,GAAA,EAAD,CAAQ5F,KAAK,SAAS6C,QAAQ,UAAUwF,KAAK,KAA7C,yCClDjBmF,OArFf,YAAiD,IAAnB5J,EAAkB,EAAlBA,QAAS6J,EAAS,EAATA,MAG7BC,EAAUD,EAAME,OAAOrK,GAHe,EAIlBiB,mBAAS,IAJS,mBAIrCuE,EAJqC,KAI9B8E,EAJ8B,KAOpCvQ,EADW8C,IACX9C,SAGFwQ,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU,IAAItO,KAAK4J,OAAOM,EAAMX,eAAhC+E,GAwBd,OArBArJ,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAOWyQ,EAPZ,yCAOH,+BAAAzM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIuL,EADJ,KAEnBpM,GAHR,gBACYI,EADZ,EACYA,KAIRkM,EAASlM,GALb,2CAPG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAU3C4L,SAfAlK,EAAQE,KAAK,YAiBlB,CAACzG,EAAUuG,EAAS6J,IAGnB,gCACI,cAAC,QAAD,CAAMlK,GAAG,gBAAgBL,UAAU,WAAW+C,MAAO,CAAE4F,WAAY,WAAnE,iCAGA,oBAAI3I,UAAU,MAAd,4CACC4F,EAAMxK,YACP,sBAAK4E,UAAU,cAAf,UACI,qBAAI+C,MAAO,CAAC8H,aAAa,YAAa1H,QAAQ,gBAA9C,UAAiE8G,EAAM,GAAG,GAAGvF,cAA7E,IAA6FuF,EAAM,GAAG,GAAGtF,WAAa,KAEtH,8BACI,cAAC7D,GAAA,EAAD,CAAKd,UAAU,mBAAf,SACKiK,EAAMtM,KAAI,SAACkM,GAAD,OACP,cAAC,IAAMiB,SAAP,UACCjB,EAAKlM,KAAI,SAACF,GAAD,OACN,cAACsD,GAAA,EAAD,CAAaf,UAAU,OAAOgB,GAAI,EAAGkE,GAAI,EAAGjE,GAAI,EAAG8J,GAAI,EAAGC,GAAI,EAA9D,SAEI,eAACC,GAAA,EAAD,CAAMlI,MAAO,CAACE,MAAO,QAASD,OAAO,SAArC,UACI,eAACiI,GAAA,EAAK/L,OAAN,WACKzB,EAAEkH,WAAa,EADpB,MAC0BlH,EAAEoH,UAD5B,KAC0C8F,EAAKlN,EAAEyN,UADjD,OAGA,cAACD,GAAA,EAAKE,KAAN,UACKvF,EAAMxK,WAAWuC,KAAI,SAACL,GAAD,OAClB,8BACKA,EAAKI,OAAS6H,aAAO9H,EAAG,eACrB,gCACI,cAACwN,GAAA,EAAKG,MAAN,CAAYrI,MAAO,CAACsC,MAAO,WAA3B,SAAuC,+CACvC,eAAC4F,GAAA,EAAKI,KAAN,WACK/N,EAAKgO,WAAW9E,UAAU,EAAG,GAC7B,IAFL,IAEW,IACNlJ,EAAKiO,SAAS/E,UAAU,EAAG,UAPlClJ,EAAKuI,cARrBpI,OAFOoM,iBCIlCwD,OApCf,WACE,OACE,cAAC,cAAD,UACE,cAACrQ,EAAD,UACE,cAACa,EAAD,UACE,eAACV,EAAD,WACE,cAAC,GAAD,IACJ,sBAAM6C,UAAU,OAAhB,SACE,eAACH,EAAA,EAAD,WACI,cAAC,KAAD,CAAQyN,KAAK,IAAIC,UAAW9M,GAAY+M,OAAK,IAC7C,cAAC,KAAD,CAAOF,KAAK,YAAYC,UAAWnM,KACnC,cAAC,KAAD,CAAOkM,KAAK,SAASC,UAAWnK,KAChC,cAAC,KAAD,CAAOkK,KAAK,sBAAsBC,UAAWjD,KAE3C,cAAC,KAAD,CAAOgD,KAAK,WAAWC,UAAWrJ,KAClC,cAAC,KAAD,CAAOoJ,KAAK,kBAAkBC,UAAWzG,KACzC,cAAC,KAAD,CAAOwG,KAAK,eAAeC,UAAWT,KACtC,cAAC,KAAD,CAAOQ,KAAK,mBAAmBC,UAAW/B,KAC1C,cAAC,KAAD,CAAO8B,KAAK,qBAAqBC,UAAWhB,KAC5C,cAAC,KAAD,CAAOe,KAAK,iBAAiBC,UAAWP,KAExC,cAAC,KAAD,CAAOM,KAAK,gBAAgBC,UAAWN,KACvC,cAAC,KAAD,CAAOK,KAAK,uBAAuBC,UAAWL,KAC9C,cAAC,KAAD,CAAOI,KAAK,qBAAqBC,UAAWE,KAC5C,cAAC,KAAD,CAAOH,KAAK,0BAA0BC,UAAWH,KACjD,cAAC,KAAD,CAAOE,KAAK,2BAA2BC,UAAWG,oBCzCnDC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.3d7a9b7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\n\n    ","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n} from '../constants/userConstants'\n\nconst userInfoFromStrage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst profileFromStrage = localStorage.getItem('profile') ?\n    JSON.parse(localStorage.getItem('profile')) : {}\n\n//initial state\nexport const loginInitialState = {\n    userInfo: userInfoFromStrage,\n    error: false,\n    loading: true\n}\nexport const profileInitialState = {\n    profile: profileFromStrage,\n    error: false,\n    loading: true,\n}\n\n//reducer\nexport const userLoginReducer = (state, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo : action.payload}\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: true}\n        case USER_LOGOUT:\n            return { userInfo: null}\n        default:\n            return state\n    }\n}\n\n\n    \nexport const userProfileReducer = (state, action) => {\n    switch (action.type) {\n        case USER_PROFILE_REQUEST:\n            return { ...state, loading: true }\n        case USER_PROFILE_SUCCESS:\n            return { ...state, loading: false, profile : action.payload}\n        case USER_PROFILE_FAIL:\n            return { ...state, loading: false, error: true}\n        case USER_PROFILE_RESET:\n            return profileInitialState\n        default:\n            return state\n    }\n}\n// export const useUserLoginReducer = () => {\n//     const [state, dispatch] = useReducer(userLoginReducer, initialState)\n//     return [state, dispatch] \n// }\n\n// export const useUserRegisterReducer = () => {\n//     const [state, dispatch] = useReducer(userRegisterReducer, initialState)\n//     return [state, dispatch] \n// }","export const SHIFT_REQUEST = 'SHIFT_REQUEST'\nexport const SHIFT_SUCCESS = 'SHIFT_SUCCESS'\nexport const SHIFT_ADD_ITEM = 'SHIFT_ADD_ITEM'\nexport const SHIFT_UPDATE_ITEM = 'SHIFT_UPDATE_ITEM'\nexport const SHIFT_REMOVE_ITEM = 'SHIFT_REMOVE_ITEM'\nexport const SHIFT_CHANGE_STATUS = 'SHIFT_CHANGE_STATUS'\nexport const SHIFT_RESET = 'SHIFT_RESET'\nexport const SHIFT_CHANGE_PERIOD = 'SHIFT_CHANGE_PERIOD'","import {\n    SHIFT_REQUEST,\n    SHIFT_SUCCESS,\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_CHANGE_PERIOD,\n    SHIFT_RESET,\n} from '../constants/shiftConstants'\n\nimport { startOfMonth, endOfMonth, subDays, addMonths, endOfDay } from 'date-fns'\n\n\n\n\n//initial state\nexport const shiftInitialState = {\n    shiftItems: [],\n    isSubmitted: false,\n    loading: false,\n    period: [\n        endOfDay(startOfMonth(addMonths(new Date(), 1))),\n        endOfDay(endOfMonth(addMonths(new Date(), 1)))\n    ],\n    deadline: subDays(endOfDay(endOfMonth(new Date())), 10),\n}\n\n//ruducers\nexport const shiftReducer = (state, action) => {\n    switch (action.type) {\n        case SHIFT_REQUEST:\n            return { ...state, loading: true}\n        case SHIFT_SUCCESS:\n            return { ...state, loading: false}\n        case SHIFT_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.shiftItems.find(x => x.date === item.date)\n            if (existItem) {\n                //update\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: state.shiftItems.map(x => x.date === existItem.date ? item : x)\n                }\n            } else {\n                //truly add\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: [...state.shiftItems, item]\n                }\n            }\n        case SHIFT_REMOVE_ITEM:\n            return {\n                ...state,\n                loading: false,\n                shiftItems: state.shiftItems.filter(x => x.date !== action.payload)\n            }\n        case SHIFT_CHANGE_STATUS:\n            return {\n                ...state,\n                loading: false,\n                isSubmitted: action.payload\n            }\n        case SHIFT_CHANGE_PERIOD:\n            return {\n                ...state,\n                loading: false,\n                deadline: action.payload\n            }\n        case SHIFT_RESET:\n            return shiftInitialState\n        default:\n            return state\n    }\n}\n","import React, { useReducer } from 'react'\nimport { userLoginReducer, loginInitialState, userProfileReducer, profileInitialState } from './reducers/userReducers'\nimport { shiftReducer, shiftInitialState } from './reducers/shiftReducers'\n\n\n\nexport const makeStore = (reducer, initialState) => {\n    const storeContext = React.createContext()\n    const dispatchContext = React.createContext()\n\n    const StoreProvider = ({ children }) => {\n        const [store, dispatch] = useReducer(reducer, initialState);\n    \n        return (\n            <dispatchContext.Provider value={dispatch}>\n                <storeContext.Provider value={store}>\n                    { children }\n                </storeContext.Provider>\n            </dispatchContext.Provider>\n        )\n    }\n\n    const useStore = () => {\n      return React.useContext(storeContext);\n    }\n\n    const useDispatch = () => {\n      return React.useContext(dispatchContext);\n    }\n\n    return [StoreProvider, useStore, useDispatch]\n}\n\nexport const [LoginProvider, useLoginStore, useLoginDispatch] = makeStore(userLoginReducer, loginInitialState)\nexport const [ProfileProvider, useProfileStore, useProfileDispatch] = makeStore(userProfileReducer, profileInitialState)\nexport const [ShiftProvider, useShiftStore, useShiftDispatch] = makeStore(shiftReducer, shiftInitialState)\n\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n } from '../constants/userConstants'\n\n\n\nexport const login = async (email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                :error.message,\n        })\n    }\n}\n\n\n\nexport const logout = (loginDispatch, profileDispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('profile')\n    loginDispatch({ type: USER_LOGOUT })\n    // profileDispatch({ type: USER_PROFILE_RESET }) \n}\n\n\nexport const register = async (name, email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getProfile = async (dispatch, userInfo) => {\n    dispatch({ type: USER_PROFILE_REQUEST })\n    \n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            Authorization : `Bearer ${userInfo.token}`\n        }\n    }\n    const { data } = await axios.get(\n        '/api/users/profile/',\n        config\n    )\n    dispatch({\n        type: USER_PROFILE_SUCCESS,\n        payload: data\n    })\n\n    localStorage.setItem('profile', JSON.stringify(data))\n}","import React from 'react'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useLoginStore, useLoginDispatch, useProfileDispatch, useShiftDispatch, useProfileStore } from '../context'\nimport { logout } from '../actions/userActions'\nimport { SHIFT_RESET } from '../constants/shiftConstants'\nimport { USER_PROFILE_RESET } from '../constants/userConstants'\n\n\nfunction Header() {\n    const state = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const { userInfo } = state\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const {profile} = profileState\n    const profileDispatch = useProfileDispatch()\n    \n\n    const logoutHandler = () => {\n        logout(loginDispatch)\n        shiftDispatch({type: SHIFT_RESET})\n        profileDispatch({ type: USER_PROFILE_RESET })\n    }\n\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' collapseOnSelect>\n                <Container>\n                    <Navbar.Brand>Shift Web</Navbar.Brand>\n                        <Nav className='mr-auto p-1'>\n\n                            {userInfo ? (\n                                <NavDropdown title={profile.name} id='username' className='px-4'>\n                                {userInfo.email === 'demo@email.com' ?\n                                    <>\n                                        <LinkContainer to='/demo/profile'>\n                                            <NavDropdown.Item>ホーム</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <LinkContainer to='/login'>\n                                            <NavDropdown.Item onClick={logoutHandler}>ログアウト</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </>\n                                    :\n                                    <>\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>ホーム</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={logoutHandler}>ログアウト</NavDropdown.Item>\n                                    </>\n                                    }\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>                        \n                                    <Nav.Link><i className=\"fas fa-user\"></i>ログイン</Nav.Link>\n                                </LinkContainer>\n                            )}\n                        </Nav>\n                \n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { useLoginStore } from '../context'\n\nfunction HomeScreen({history}) {\n    \n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n       \n        history.push('/login')\n        \n    }, [])\n\n    return (\n        <>\n            <h1>Home Page</h1>\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer( {children} ) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React, {useState, useEffect, useReducer} from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { login, register } from '../actions/userActions'\n\nimport axios from 'axios'\n\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\n\nimport { useRegisterStore, useLoginStore, useLoginDispatch } from '../context'\n\nfunction RegisterScreen({history}) {\n    //useState\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    const loginState = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    },[history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('パスワードが一致しません')\n        } else {\n            await axios.post(\n                '/api/users/register/',\n                { 'name': name, 'email': email, 'password': password },\n            )\n            login(email, password, loginDispatch)\n        }\n    }\n\n\n\n    return (\n        <FormContainer>\n            <h1>アカウント登録</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name' className='mb-4'>\n                    <Form.Label>名前</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='名前を入力'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email' className='mb-4'>\n                    <Form.Label>メールアドレス</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='メールアドレスを入力'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password' className='mb-4'>\n                    <Form.Label>パスワード</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='パスワードを入力'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm' className='mb-4'>\n                    <Form.Label>パスワード確認</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='パスワードをもう一度入力'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    登録\n                </Button>\n            </Form>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '50px',\n                width: '50px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            {/* <span className=\"sr-only\">Loading...</span> */}\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport { Form, Button,Row, Col, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { useLoginStore, useLoginDispatch } from '../context'\n\n\nfunction LoginScreen({history, location}) {\n    // const [state, dispatch] = useUserLoginReducer()\n    const state = useLoginStore()\n    const dispatch = useLoginDispatch()\n    const {userInfo, error} = state\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/profile')\n        }\n    },[history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        login(email, password, dispatch)\n    }\n\n\n    return (\n        <>\n            <FormContainer>\n                <h1>ログイン</h1>\n                \n                {error && <Message variant='danger'>'メールアドレスかパスワードが間違っています'</Message>}\n                \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label className='mb-0'>メールアドレス</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='eメールアドレスを入力'\n                            value={email}\n                            onChange={\n                                (e) => setEmail(e.target.value) \n                            }\n                        ></Form.Control>\n                    </Form.Group>\n\n\n                    <Form.Group controlId='password'>\n                        <Form.Label className='mb-0 mt-3'>パスワード</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='パスワードを入力'\n                            value={password}\n                            onChange={\n                                (e) => setPassword(e.target.value)\n                            }\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' className='mt-2 mb-3'>\n                        ログイン\n                    </Button>\n\n                </Form>\n\n                <Row className=\"py-3\">\n                    <Col>\n                        アカウントをお持ちでない方：\n                        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                            {' '} 登録\n                        </Link>\n                    </Col>\n                </Row>\n\n            </FormContainer>\n\n            <FormContainer>\n                <Message variant='info'>\n                    デモはこちら（ユーザーの登録・ログインをせずに体験できます）\n                    <br></br>\n                    <Link to={'/demo/profile'}>Demoユーザーでログイン</Link>\n                </Message>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default LoginScreen\n","import {\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_CHANGE_PERIOD,\n    SHIFT_RESET,\n} from '../constants/shiftConstants'\n\n\nexport const addShiftItem = (dispatch, date, isWork, startTime, endTime, isAllDay) => {\n    dispatch({\n        type: SHIFT_ADD_ITEM,\n        payload: {\n            date,\n            isWork,\n            startTime,\n            endTime,\n            isAllDay\n        }\n    })\n}\n\nexport const removeShiftItem = (dispatch, date) => {\n    dispatch({\n        type: SHIFT_REMOVE_ITEM,\n        payload: date\n    })\n}\n\nexport const changeSubmitStatus = (dispatch, value) => {\n    dispatch({\n        type: SHIFT_CHANGE_STATUS,\n        payload: value\n    })\n}\n\nexport const changePeriod = (dispatch, time) => {\n    dispatch({\n        type: SHIFT_CHANGE_PERIOD,\n        payload: time\n    })\n}\n","import React, { useEffect, useState, useReducer } from 'react'\nimport { Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore, useProfileDispatch, useProfileStore, useShiftDispatch, useShiftStore} from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { changeSubmitStatus } from '../actions/shiftActions'\nimport { SHIFT_REQUEST, SHIFT_SUCCESS } from '../constants/shiftConstants'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { format } from 'date-fns'\n\nfunction ProfileScreen({ history }) {\n    \n    const [shifts, setShifts] = useState([])\n\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile, loading: profileLoading } = profileState\n    const shiftState = useShiftStore()\n    const { period, deadline, isSubmitted, loading } = shiftState\n    const shiftDispatch = useShiftDispatch()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShifts() {\n                shiftDispatch({type: SHIFT_REQUEST})\n                const { data } = await axios.get(\n                    `/api/shifts/myshifts/`,\n                    config\n                )\n                setShifts(data)\n                \n                for (let i = 0; i < data.length; i++){\n                    if (data[i].period_start === getStringDate(period[0])) {\n                        changeSubmitStatus(shiftDispatch, true)\n                    }\n                }\n                \n                shiftDispatch({type: SHIFT_SUCCESS})\n            }\n            fetchShifts()\n        }\n        \n    }, [history, userInfo])\n\n    return (\n        <div>\n            <h1>ようこそ {profile.name} さん</h1>\n            <Row className='py-3'>\n                \n\n                {loading ? <Loader />\n                    :\n                    <Col md={5} sm={12} className='py-2'>\n                        <h4>シフト提出</h4>\n                        <Container className='border'>\n                            <LinkContainer to='/shifts/submit' className='d-grid gap-2 my-3 p-1'>\n                                <Button size='lg' variant='primary' disabled={isSubmitted || (new Date() > deadline)}>今月分はこちらから <p className='m-0'>{getStringDate(period[0])} ~ { getStringDate(period[1])}</p></Button>\n                            </LinkContainer>\n                            <p className='my-0 py-0'>提出状態： {isSubmitted ?　<i style={{color: 'blue'}}>提出済み</i> : <i style={{color: 'red'}}>未提出</i>}</p>\n                            <p className='my-0 py-0'>提出期限： {String(format(deadline, \"yyyy-MM-dd' 'HH:mm\"))} まで</p>\n                            {(!isSubmitted && (new Date() > deadline)) &&\n                                <Message variant='danger'>期限内に提出できていません → 担当マネージャーに連絡！</Message>\n                            }\n                        </Container>\n\n                        \n                        <h4 className='mt-5'>シフト管理</h4>\n                        {shifts.length === 0 ? <Message variant='info'>シフトがありません</Message> :\n                            <Table striped hover responsive className='table-sm border' >\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>PERIOD</th>\n                                        <th>STATUS</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {shifts.map((shift) => (\n                                        <tr key={shift._id}>\n                                            <td>{shift._id}</td>\n                                            <td>{shift.period_start} {' '} ~ {' '}{shift.period_end}</td>\n                                            <td>{shift.is_confirmed ? '確定' : '未確定'}</td>\n                                            <td>\n                                                { shift.is_confirmed ? \n                                                    <LinkContainer to={`/shifts/confirm/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-primary'>詳細</Button>\n                                                    </LinkContainer> \n                                                    :\n                                                    <LinkContainer to={`/shifts/update/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-info'>更新</Button>\n                                                    </LinkContainer> \n                                                }\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>          \n                        }\n                        \n                    </Col>\n                }\n\n\n\n                {profileLoading ? <Loader /> :\n                    <Col md={7} sm={12} className='py-2'>\n\n                    <Row>\n                        <Col md ={10} sm={10} xs={10}>\n                            <h4>プロフィール</h4>\n                        </Col>\n                        <Col md={2} sm={2} xs={2} className='m-0 px-0 pb-2 text-center'>\n                            <LinkContainer to={'/update/profile'}>\n                                    <Button variant='outline-secondary'className='btn-sm'>編集</Button>\n                            </LinkContainer>\n                        </Col>\n                    </Row>\n                        \n\n\n                        <Table striped hover responsive size='sm' className='border'>\n                            <thead>\n                                <tr>\n                                    <th>Key</th>\n                                    <th>Value</th>\n                                    <th>Remarks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>{profile._id}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>名前</td>\n                                    <td>{profile.name}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>職務</td>\n                                    <td>{profile.duty}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>セクション</td>\n                                    <td>{profile.section}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>雇用形態</td>\n                                    <td>{profile.employment_status}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>研修中</td>\n                                    <td>{profile.is_rookie ? '研修中' : '修了'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>オープン</td>\n                                    <td>{profile.is_open_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>10時締め</td>\n                                    <td>{profile.is_pre_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>締め</td>\n                                    <td>{profile.is_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 業務開始時間</td>\n                                    <td> {profile.start_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 業務終了時間</td>\n                                    <td> {profile.end_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 週間希望シフト回数</td>\n                                    <td> 週{profile.desired_times_per_week}</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 希望就労時間</td>\n                                    <td> {profile.desired_working_time}h</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 通勤方法</td>\n                                    <td> {profile.commute}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 最寄り駅</td>\n                                    <td> {profile.station}</td>\n                                    <td> 最短経路が交通費支給額です</td>\n                                </tr>\n                            \n                            </tbody>\n                        </Table>\n                    </Col>\n                } \n\n\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useProfileDispatch, useProfileStore, useLoginStore } from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\n\n\nfunction ProfileUpdateScreen({history}) {\n    //local states\n    const [name, setName] = useState('')\n    const [duty, setDuty] = useState('')\n    const [section, setSection] = useState('')\n    const [employment, setEmployment] = useState('')\n    const [isRookie, setIsRookie] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [isPreClose, setIsPreClose] = useState(false)\n    const [isClose, setIsClose] = useState(false)\n    const [startDefault, setStartDefault] = useState('')\n    const [endDefault, setEndDefault] = useState('')\n    const [weeklyWork, setWeeklyWork] = useState('')\n    const [workTime, setWorkTime] = useState('')\n    const [commute, setCommute] = useState('')\n    const [station, setStation] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    //global states\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            profile.name ? setName(profile.name) : setName('名前がありません')\n            profile.duty ? setDuty(profile.duty) : setDuty('')\n            profile.employment_status ? setEmployment(profile.employment_status) : setEmployment('')\n            profile.section ? setSection(profile.section) : setSection('')\n            profile.is_rookie ? setIsRookie(profile.is_rookie) : setIsRookie(false)\n            profile.is_open_staff ? setIsOpen(profile.is_open_staff) : setIsOpen(false)\n            profile.is_pre_close_staff ? setIsPreClose(profile.is_pre_close_staff) : setIsPreClose(false)\n            profile.is_close_staff ? setIsClose(profile.is_close_staff) : setIsClose(false)\n            profile.start_default ? setStartDefault(profile.start_default) : setStartDefault('')\n            profile.end_default ? setEndDefault(profile.end_default) : setEndDefault('')\n            profile.desired_times_per_week ? setWeeklyWork(profile.desired_times_per_week) : setWeeklyWork(0)\n            profile.desired_working_time ? setWorkTime(profile.desired_working_time) : setWorkTime(0)\n            profile.commute ? setCommute(profile.commute) : setCommute('')\n            profile.station ? setStation(profile.station) : setStation('')\n\n            setLoading(false)\n        }\n\n        if(!startDefault && !endDefault) {\n            setStartDefault(profile.start_default.substring(0,5))\n            setEndDefault(profile.end_default.substring(0,5))\n        }\n    }, [history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        console.log('submitted!')\n        console.log(name, duty, section, isRookie, isOpen, isPreClose, isClose, startDefault, endDefault, weeklyWork, workTime, commute, station)\n        if (window.confirm('プロフィールの更新をしますか？')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.put(\n                `/api/users/update/profile/`,\n                {\n                    \"name\": name,\n                    \"duty\": duty,\n                    \"employment\": employment,\n                    \"section\": section,\n                    \"isRookie\": isRookie,\n                    \"isOpen\": isOpen,\n                    \"isPreClose\": isPreClose,\n                    \"isClose\": isClose,\n                    \"startDefault\": startDefault,\n                    \"endDefault\": endDefault,\n                    \"weeklyTime\": weeklyWork,\n                    \"workTime\": workTime,\n                    \"commute\": commute,\n                    \"station\": station\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    }\n\n    return (\n        <>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            {loading ? <Loader/> :\n            <FormContainer>\n                <Form onSubmit={submitHandler} className='border p-3'>\n                    <Form.Group controlId='name'>\n                        <Form.Label className='mt-3 mb-0'>名前</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='名前を記入'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='duty'>\n                        <Form.Label className='mt-3 mb-0'>職務</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={duty}\n                            onChange={(e) => setDuty(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'アルバイトリーダー'}>アルバイトリーダー</option>\n                            <option value={'アルバイト'}>アルバイト</option>\n                            <option value={''}>「職務」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='employment'>\n                        <Form.Label className='mt-3 mb-0'>雇用形態</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={employment}\n                            onChange={(e) => setEmployment(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'フリーター（週40時間）'}>フリーター（週40時間）</option>\n                            <option value={'フリーター（週20時間）'}>フリーター（週20時間）</option>\n                            <option value={'学生'}>学生</option>\n                            <option value={''}>「雇用形態」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='section'>\n                        <Form.Label className='mt-3 mb-0'>セクション</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={section}\n                            onChange={(e) => setSection(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'フロント'}>フロント</option>\n                            <option value={'映写'}>映写</option>\n                            <option value={'コンセッション'}>コンセッション</option>\n                            <option value={'ボックス'}>ボックス</option>\n                            <option value={'ショップ'}>ショップ</option>\n                            <option value={''}>「セクション」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isRookie'>\n                        <Form.Label className='mt-3 mb-0'>研修</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isRookie}\n                            onChange={() => setIsRookie(!isRookie)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>研修中</option>\n                            <option value={false}>完了</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isOpen'>\n                        <Form.Label className={'mt-3 mb-0'}>オープン</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isOpen}\n                            onChange={() => setIsOpen(!isOpen)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isPreClose'>\n                        <Form.Label className='mt-3 mb-0'>10時締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isPreClose}\n                            onChange={() => setIsPreClose(!isPreClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isClose'>\n                        <Form.Label className={'mt-3 mb-0'}>締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isClose}\n                            onChange={() => setIsClose(!isClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務開始時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='開始時間を選択'\n                        value={startDefault}\n                        min={new Date('01/01/2021 07:00 AM')}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setStartDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{cursor: 'pointer'}}\n                    ></TimePickerComponent>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務終了時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='終了時間を選択'\n                        value={endDefault}\n                        min={new Date('01/01/2021 ' + startDefault)}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setEndDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{ cursor: 'pointer' }}\n                    ></TimePickerComponent>\n\n                    <Form.Group controlId='weeklyWork'>\n                        <Form.Label className={'mt-3 mb-0'}>週間希望シフト回数</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={weeklyWork}\n                            onChange={(e) => setWeeklyWork(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={1}>1回</option>\n                            <option value={2}>2回</option>\n                            <option value={3}>3回</option>\n                            <option value={4}>4回</option>\n                            <option value={5}>5回</option>\n                            <option value={0}>「週間希望シフト回数」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='workTime'>\n                        <Form.Label className='mt-3 mb-0'>希望就労時間</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={workTime}\n                            onChange={(e) => setWorkTime(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={3}>3h</option>\n                            <option value={4}>4h</option>\n                            <option value={5}>5h</option>\n                            <option value={6}>6h</option>\n                            <option value={7}>7h</option>\n                            <option value={8}>8h</option>\n                            <option value={0}>「希望就労時間」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='commute'>\n                        <Form.Label className='mt-3 mb-0'>通勤方法</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={commute}\n                            onChange={(e) => setCommute(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'電車'}>電車</option>\n                            <option value={'バス'}>バス</option>\n                            <option value={'徒歩'}>徒歩</option>\n                            <option value={'自転車'}>自転車</option>\n                            <option value={''}>「」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='station'>\n                        <Form.Label className='mt-3 mb-0'>最寄り駅</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='最寄り駅を入力'\n                            value={station}\n                            onChange={(e) => setStation(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' size='lg' className='mt-4'>\n                        更新\n                    </Button>\n\n                </Form>\n            </FormContainer>\n            }\n        </>\n    )\n}\n\nexport default ProfileUpdateScreen\n","const {\n    startOfMonth,\n    startOfWeek,\n    endOfMonth,\n    endOfWeek,\n    startOfDay,\n    addDays,\n} = require(\"date-fns\")\n\n\nconst takeWeek = (start = new Date()) => {\n    let date = startOfWeek(startOfDay(start, 1))\n\n    return () => {\n        const week = [...Array(7)].map((_, i) => addDays(date, i))\n        date = addDays(week[6], 1)\n        return week\n    }\n}\n\nexport const takeMonth = (start = new Date()) => {\n    let month = []\n    let date = start\n\n    const lastDayOfRange = (range) => {\n        return range[range.length - 1][6]\n    }\n\n    return () => {\n        const weekGenerator = takeWeek(startOfMonth(date))\n        const endDate = startOfDay(endOfWeek(endOfMonth(date)))\n        month.push(weekGenerator())\n\n        while (lastDayOfRange(month) < endDate) {\n            month.push(weekGenerator())        \n        }\n\n        let range = month\n        month = []\n        date = addDays(lastDayOfRange(range), 1)\n\n        return range\n    }\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore } from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport {format} from 'date-fns'\n\n// import  useMediaQuery  from 'react-response'\n\n\nfunction ShiftConfirmScreen({ history, match }) {\n    \n    //for API\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    \n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(new Date(String(shift.period_start)))()\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n            }\n            fetchShift()\n        }\n    }, [userInfo, history, match])\n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト確認</h1>\n            {shift.shiftItems &&\n            <div className='text-center'> \n                <h4 style={{borderBottom:'1px solid', display:'inline-block'}}>{ month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}</h4>\n                \n                <div>\n                    <Row className='text-center my-4' >\n                        {month.map((week) => (\n                            <React.Fragment key={week}>\n                            {week.map((x) => (\n                                <Col key={x} className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>\n                                    \n                                    <Card style={{width: '11rem', height:'10rem'}}>\n                                        <Card.Header>\n                                            {x.getMonth() + 1} / {x.getDate()} ({ days[x.getDay()]})\n                                        </Card.Header>\n                                        <Card.Body>\n                                            {shift.shiftItems.map((item) => (\n                                                <div key={item._id}>\n                                                    {item.date === format(x, 'yyyy-MM-dd') &&\n                                                        <div>\n                                                            <Card.Title style={{color: '#0405B5'}}><b>出勤</b></Card.Title>\n                                                            <Card.Text>\n                                                                {item.start_time.substring(0, 5)}\n                                                                {' '}~{' '}\n                                                                {item.end_time.substring(0, 5)}\n                                                            </Card.Text>\n                                                        </div>\n                                                    }\n                                                </div>\n                                            ))}\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </React.Fragment>\n                    ))}\n                    </Row>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ShiftConfirmScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport FormContainer from './FormContainer'\nimport { Form, ButtonGroup, ToggleButton, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport  Loader from './Loader'\nimport { useLoginStore, useProfileStore, useShiftDispatch, useShiftStore } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem, updateShiftItem } from '../actions/shiftActions'\nimport { set, setISODay } from 'date-fns'\n\n\nfunction ShiftItemUpdateForm({ shiftItem, date }) {\n\n    //States    \n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [ endTime, setEndTime] = useState('')\n    const [ isDefault, setIsDefault] = useState(true)\n    \n    //Global States\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    \n    //checkbox\n    const radios = [\n        { name:'終日', value:true},\n        { name:'時間指定', value:false}\n    ]\n    \n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    \n    useEffect(() => {\n            \n            if (shiftItem && isDefault) {\n                setIsWork(shiftItem.is_work) \n                setIsAllDay(shiftItem.is_all_day) \n                setStartTime(String(shiftItem.start_time).substring(0,5))\n                setEndTime(String(shiftItem.end_time).substring(0, 5))\n                setIsDefault(false)\n            } else {\n                if (isAllDay) {\n                    setStartTime('07:00')\n                    setEndTime('23:30')\n                } else if(!startTime && !endTime) {\n                    setStartTime(profile.start_default.substring(0,5))\n                    setEndTime(profile.end_default.substring(0,5))\n                }\n            }\n        \n            if (date && !isWork) {\n                removeShiftItem(shiftDispatch, date)\n            }\n            \n            if (isWork && date && startTime && endTime) {\n                addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n            }\n\n\n\n            // if (isAllDay) {\n            //     setStartTime('07:00')\n            //     setEndTime('23:30')\n            // }\n            // else {\n            //     // setDate(shiftItem.date)\n            //     setStartTime(String(shiftItem.start_time).substring(0,5))\n            //     setEndTime(String(shiftItem.end_time).substring(0,5))\n            //     setIsWork(shiftItem.is_work)\n            //     setIsAllDay(shiftItem.is_all_day)\n            // }\n            // console.log(shiftItem.is_work)\n        \n        \n    }, [  isAllDay, isWork, date, startTime, endTime])\n    \n\n        return (\n            \n            <>\n\n                <Container style={{ color : changeColor(isWork)}}>\n                    <Form.Group >\n                        {/* <Form.Label className={'m-0'}>日付</Form.Label>\n                        <Form.Control\n                            type='date'\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                            className={'mb-3'}\n                            required\n                            // style={{display: 'none'}}\n                            >\n                        </Form.Control> */}\n                        {!startTime && !endTime ? <Loader /> :\n\n                        <div>\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                                // if (e.target.value) {\n                                //     removeShiftItem(shiftDispatch, date)\n                                //     console.log('remove item')\n                                // }\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 ' + startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        checked={isAllDay}\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>  \n                            </div>\n                        }\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemUpdateForm","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemUpdateForm from '../components/ShiftItemUpdateForm'\n\nimport Loader from '../components/Loader'\n\n\nfunction ShiftUpdateScreen({ history, match }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const shiftState = useShiftStore()\n    const { shiftItems } = shiftState\n    \n    //local\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n    const [remarks, setRemarks] = useState([])\n    const [month, setMonth] = useState([])\n    const [loading, setLoading] = useState(true)\n\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    \n\n    //functions\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            \n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n                setRemarks(data.remarks)\n                setMonth(takeMonth(new Date(String(data.period_start)))())\n                setLoading(false)\n                console.log(data)\n            }        \n            fetchShift()\n        }\n\n        \n    }, [userInfo, history, match])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('このシフトを更新しますか?')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n        \n    \n            const { data } = await axios.put(\n                `/api/shifts/shift-update/${shiftId}/`,\n               {\n                    'shiftItems': shiftItems,\n                    'remarks': remarks,\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト更新</h1>\n            \n            {loading ? <Loader /> :\n            \n                <div className='text-center'> \n                    <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                        {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                    </h4>\n\n                    <Form onSubmit={submitHandler}>\n                        \n                        <Row className='my-5 border' >\n                            {month.map((week, i) => (\n                                <React.Fragment key={i}> \n                                    {week.map((date, j) => (\n                                        <React.Fragment key={j}>\n                                            {date.getMonth() === month[0][6].getMonth() &&\n                                                <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                    <Card  className='mx-auto my-2'>\n                                                        <Card.Header>\n                                                            {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                        </Card.Header>\n                                                        <Card.Body >\n                                                            <ShiftItemUpdateForm\n                                                                date={getStringDate(date)}\n                                                                shiftItem={shift.shiftItems.find(element => element.date === getStringDate(date))}\n                                                            />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                        }\n                                        </React.Fragment>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Row>\n\n                        <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form>\n\n                \n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default ShiftUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport  Loader from './Loader'\nimport { useProfileStore, useShiftDispatch, useShiftStore } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem, updateShiftItem } from '../actions/shiftActions'\n\n\nfunction ShiftItemForm({history, date}) {\n    //States 引数にdate\n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [endTime, setEndTime] = useState('')\n\n    \n    //Global States\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const shiftDispatch = useShiftDispatch()\n    \n    //checkbox\n    const radios = [\n        { name:'終日', value:true},\n        { name:'時間指定', value:false}\n    ]\n\n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    const chooseCursor = (flag) => {\n        if (flag) return 'pointer'\n        return 'not-allowed'\n    }\n    \n    useEffect(() => {\n\n        if (isAllDay) {\n            setStartTime('07:00')\n            setEndTime('23:30')\n        } else if(!startTime && !endTime) {\n            setStartTime(profile.start_default.substring(0,5))\n            setEndTime(profile.end_default.substring(0,5))\n        }\n\n        if (date && !isWork) {\n            removeShiftItem(shiftDispatch, date)  \n        }\n        \n        if (isWork && date&& startTime && endTime) {\n            addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n        }\n        \n    }, [history, isAllDay, isWork, date, startTime, endTime])\n\n\n        return (\n            \n            <>\n\n                <Container style={{color: changeColor(isWork)}}>\n                    <Form.Group >\n\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n                        {!startTime && !endTime ? <Loader /> :\n                            <div>\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 '+ startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>\n                            </div>\n                        }\n\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemForm  from '../components/ShiftItemForm'\n\nimport {  } from '../context'\n\n\n\n\nfunction ShiftSubmitScreen({ history }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const { shiftItems, period, isSubmitted } = shiftState\n\n    //Local States\n    const [remarks, setRemarks] = useState('')\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(period[0])()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else if (isSubmitted) {\n            history.push('/profile')\n        }\n\n    }, [userInfo, history])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('シフトを提出しますか?（提出期限後、MGRが受理するまでは更新可能です）')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.post(\n                `/api/shifts/shift/create/`,\n                {\n                    'shiftItems': shiftItems,\n                    'section': profile.section,\n                    'periodStart': getStringDate(period[0]),\n                    'periodEnd': getStringDate(period[1]),\n                    'remarks': remarks,\n                    'isSubmitted': true,\n                },\n                config\n            )\n            history.push('/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>新規シフト提出</h1>\n            \n            <div className='text-center'> \n                <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                    {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                </h4>\n\n                <Form onSubmit={submitHandler}>\n                    \n                    <Row className='my-5 border' >\n                        {month.map((week, i) => (\n                            <React.Fragment key={i}> \n                                {week.map((date, j) => (\n                                    <React.Fragment key={j}>\n                                        {date.getMonth() === month[0][6].getMonth() &&\n                                            <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                <Card  className='mx-auto my-2'>\n                                                    <Card.Header>\n                                                        {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                    </Card.Header>\n                                                    <Card.Body >    \n                                                        <ShiftItemForm date={getStringDate(date)}/>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                    }\n                                    </React.Fragment>\n                                ))}\n                            </React.Fragment>\n                        ))}\n                    </Row>\n\n                    <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n                </Form>\n\n            \n            </div>\n            \n        </div>\n    )\n}\n//空タグでkey属性をもたせたい場合、Fragmentを使う\n\nexport default ShiftSubmitScreen\n","import React, { useEffect, useState } from 'react'\nimport { Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore, useLoginDispatch , useProfileDispatch, useProfileStore, useShiftDispatch, useShiftStore} from '../context'\nimport { getProfile, login } from '../actions/userActions'\nimport { changeSubmitStatus, changePeriod } from '../actions/shiftActions'\nimport { SHIFT_REQUEST, SHIFT_SUCCESS } from '../constants/shiftConstants'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { format, endOfDay, endOfMonth, subDays, startOfMonth, startOfDay } from 'date-fns'\n\nfunction DemoProfileScreen({ history }) {\n    //local\n    const [shifts, setShifts] = useState([])\n\n    //global\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const loginDispatch = useLoginDispatch()\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile, loading: profileLoading } = profileState\n    const shiftState = useShiftStore()\n    const { period, deadline, isSubmitted, loading } = shiftState\n    const shiftDispatch = useShiftDispatch()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            const demoEmail = 'demo@email.com'\n            const demoPassword = 'demo1234'\n            login(demoEmail, demoPassword, loginDispatch)\n        } else {\n            getProfile(dispatch, userInfo)\n\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShifts() {\n                shiftDispatch({type: SHIFT_REQUEST})\n                const { data } = await axios.get(\n                    `/api/shifts/myshifts/`,\n                    config\n                )\n                setShifts(data)\n                \n                shiftDispatch({type: SHIFT_SUCCESS})\n            }\n            fetchShifts()\n        }\n        \n    }, [history, userInfo, isSubmitted, period])\n\n//handler functions\n    const isSubmittedToTrue = () => {\n        changeSubmitStatus(shiftDispatch, true)\n    }\n    const isSubmittedToFalse = () => {\n        changeSubmitStatus(shiftDispatch, false)\n    }\n    const deadlineToDefault = () => {\n        changePeriod(shiftDispatch, subDays(endOfDay(endOfMonth(new Date())), 10))\n    }\n    const deadlineToStart = () => {\n        changePeriod(shiftDispatch, startOfDay(startOfMonth(new Date())))\n    }\n    const deadlineToEnd = () => {\n        changePeriod(shiftDispatch, endOfDay(endOfMonth(new Date())))\n    }\n\n    return (\n        <div>\n            <h1>ようこそ {profile.name} さん</h1>\n            <Row className='py-3'>\n                \n\n                {loading ? <Loader />\n                    :\n                    <Col md={5} sm={12} className='py-2'>\n                        <h4>シフト提出</h4>\n                        <Container className='border'>\n                            <LinkContainer to='/demo/shift/submit' className='d-grid gap-2 my-3 p-1'>\n                                <Button className='btn-lg' variant='outline-primary' disabled={isSubmitted || (new Date() > deadline)}>今月の提出分はこちらから <p className='m-0'>{getStringDate(period[0])} ~ { getStringDate(period[1])}</p></Button>\n                            </LinkContainer>\n                            <p className='my-0 py-0'>提出状態： {isSubmitted ?　<i style={{color: 'blue'}}>提出済み</i> : <i style={{color: 'red'}}>未提出</i>}</p>\n                            <p className='my-0 py-0'>提出期限： {String(format(deadline, \"yyyy-MM-dd' 'HH:mm\"))} まで</p>\n                            {(!isSubmitted && (new Date() > deadline)) &&\n                                <Message variant='danger'>期限内に提出できていません → 担当マネージャーに連絡！</Message>\n                            }\n                        </Container>\n\n                        \n                        <h4 className='mt-5'>シフト管理</h4>\n                        {shifts.length === 0 ? <Message variant='info'>シフトがありません</Message> :\n                            <Table striped hover responsive className='table-sm border' >\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>PERIOD</th>\n                                        <th>STATUS</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {shifts.map((shift) => (\n                                        <tr key={shift._id}>\n                                            <td>{shift._id}</td>\n                                            <td>{shift.period_start} {' '} ~ {' '}{shift.period_end}</td>\n                                            <td>{shift.is_confirmed ? '確定' : '未確定'}</td>\n                                            <td>\n                                                { shift.is_confirmed ? \n                                                    <LinkContainer to={`/demo/shifts/confirm/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-primary'>詳細</Button>\n                                                    </LinkContainer> \n                                                    :\n                                                    <LinkContainer to={`/demo/shifts/update/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-info'>更新</Button>\n                                                    </LinkContainer> \n                                                }\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>          \n                        }\n                        \n                    </Col>\n                }\n\n\n\n                {profileLoading ? <Loader /> :\n                    <Col md={7} sm={12} className='py-2'>\n\n                    <Row>\n                        <Col md ={10} sm={10} xs={10}>\n                            <h4>プロフィール</h4>\n                        </Col>\n                        <Col md={2} sm={2} xs={2} className='m-0 px-0 pb-2 text-center'>\n                            <LinkContainer to={'/demo/update/profile'}>\n                                    <Button variant='outline-secondary'className='btn-sm'>編集</Button>\n                            </LinkContainer>\n                        </Col>\n                    </Row>\n                        \n\n\n                        <Table striped hover responsive size='sm' className='border'>\n                            <thead>\n                                <tr>\n                                    <th>Key</th>\n                                    <th>Value</th>\n                                    <th>Remarks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>{profile._id}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>名前</td>\n                                    <td>{profile.name}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>職務</td>\n                                    <td>{profile.duty}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>セクション</td>\n                                    <td>{profile.section}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>雇用形態</td>\n                                    <td>{profile.employment_status}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>研修中</td>\n                                    <td>{profile.is_rookie ? '研修中' : '修了'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>オープン</td>\n                                    <td>{profile.is_open_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>10時締め</td>\n                                    <td>{profile.is_pre_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>締め</td>\n                                    <td>{profile.is_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 業務開始時間</td>\n                                    <td> {profile.start_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 業務終了時間</td>\n                                    <td> {profile.end_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 週間希望シフト回数</td>\n                                    <td> 週{profile.desired_times_per_week}</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 希望就労時間</td>\n                                    <td> {profile.desired_working_time}h</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 通勤方法</td>\n                                    <td> {profile.commute}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 最寄り駅</td>\n                                    <td> {profile.station}</td>\n                                    <td> 最短経路が交通費支給額です</td>\n                                </tr>\n                            \n                            </tbody>\n                        </Table>\n                    </Col>\n                } \n\n\n            </Row>\n\n            <h4>コントローラー</h4>\n            <Message variant='info'>\n                ・一般のユーザーでは、「提出状態（来月分のシフト提出されているか）」と「提出期限」の状態管理を自動で行います。\n                <br></br>\n                <br></br>\n                ・Demoユーザーでは、「提出状態」と「提出期限」を自由に変更することができます。\n                （アクセスする日時よる制限、特定期間のシフトはユーザーに対して１つという制限を避けるため。）\n            </Message>\n\n            <Container className='border'>\n                <Row className='m-3'>\n                    <Col md={4} sm={4} xs={4}>\n                        <Button onClick={isSubmittedToTrue} variant='outline-info' disabled={isSubmitted}>提出済みにする</Button>\n                    </Col>\n                    <Col md={4} sm={4} xs={4}>\n                        <Button onClick={isSubmittedToFalse} variant='outline-danger' disabled={!isSubmitted}>未提出にする</Button>\n                    </Col>\n                </Row>\n                <Row className='m-3'>\n                    <Col>\n                        <Button onClick={deadlineToDefault} variant='outline-secondary'>提出期限をデフォルトに変更</Button>\n                    </Col>\n                    <Col>\n                        <Button onClick={deadlineToEnd} variant='outline-secondary'>提出期限を月末へ変更</Button>\n                    </Col>\n                    <Col>\n                        <Button onClick={deadlineToStart} variant='outline-secondary'>提出期限を月始へ変更</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default DemoProfileScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useProfileDispatch, useProfileStore, useLoginStore } from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\n\n\nfunction DemoProfileUpdateScreen({history}) {\n    //local states\n    const [name, setName] = useState('')\n    const [duty, setDuty] = useState('')\n    const [section, setSection] = useState('')\n    const [employment, setEmployment] = useState('')\n    const [isRookie, setIsRookie] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [isPreClose, setIsPreClose] = useState(false)\n    const [isClose, setIsClose] = useState(false)\n    const [startDefault, setStartDefault] = useState('')\n    const [endDefault, setEndDefault] = useState('')\n    const [weeklyWork, setWeeklyWork] = useState('')\n    const [workTime, setWorkTime] = useState('')\n    const [commute, setCommute] = useState('')\n    const [station, setStation] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    //global states\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            profile.name ? setName(profile.name) : setName('名前がありません')\n            profile.duty ? setDuty(profile.duty) : setDuty('')\n            profile.employment_status ? setEmployment(profile.employment_status) : setEmployment('')\n            profile.section ? setSection(profile.section) : setSection('')\n            profile.is_rookie ? setIsRookie(profile.is_rookie) : setIsRookie(false)\n            profile.is_open_staff ? setIsOpen(profile.is_open_staff) : setIsOpen(false)\n            profile.is_pre_close_staff ? setIsPreClose(profile.is_pre_close_staff) : setIsPreClose(false)\n            profile.is_close_staff ? setIsClose(profile.is_close_staff) : setIsClose(false)\n            profile.start_default ? setStartDefault(profile.start_default) : setStartDefault('')\n            profile.end_default ? setEndDefault(profile.end_default) : setEndDefault('')\n            profile.desired_times_per_week ? setWeeklyWork(profile.desired_times_per_week) : setWeeklyWork(0)\n            profile.desired_working_time ? setWorkTime(profile.desired_working_time) : setWorkTime(0)\n            profile.commute ? setCommute(profile.commute) : setCommute('')\n            profile.station ? setStation(profile.station) : setStation('')\n\n            setLoading(false)\n        }\n\n        if(!startDefault && !endDefault) {\n            setStartDefault(profile.start_default.substring(0,5))\n            setEndDefault(profile.end_default.substring(0,5))\n        }\n    }, [history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        console.log('submitted!')\n        console.log(name, duty, section, isRookie, isOpen, isPreClose, isClose, startDefault, endDefault, weeklyWork, workTime, commute, station)\n        if (window.confirm('プロフィールの更新をしますか？')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.put(\n                `/api/users/update/profile/`,\n                {\n                    \"name\": name,\n                    \"duty\": duty,\n                    \"employment\": employment,\n                    \"section\": section,\n                    \"isRookie\": isRookie,\n                    \"isOpen\": isOpen,\n                    \"isPreClose\": isPreClose,\n                    \"isClose\": isClose,\n                    \"startDefault\": startDefault,\n                    \"endDefault\": endDefault,\n                    \"weeklyTime\": weeklyWork,\n                    \"workTime\": workTime,\n                    \"commute\": commute,\n                    \"station\": station\n                },\n                config\n            )\n            history.push('/demo/profile')\n        }\n    }\n\n    return (\n        <>\n            <Link to='/demo/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            {loading ? <Loader/> :\n            <FormContainer>\n                <Form onSubmit={submitHandler} className='border p-3'>\n                    <Form.Group controlId='name'>\n                        <Form.Label className='mt-3 mb-0'>名前</Form.Label>\n                        <Form.Control\n                            required\n                            disabled\n                            type='name'\n                            placeholder='名前を記入'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='duty'>\n                        <Form.Label className='mt-3 mb-0'>職務</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={duty}\n                            onChange={(e) => setDuty(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'アルバイトリーダー'}>アルバイトリーダー</option>\n                            <option value={'アルバイト'}>アルバイト</option>\n                            <option value={''}>「職務」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='employment'>\n                        <Form.Label className='mt-3 mb-0'>雇用形態</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={employment}\n                            onChange={(e) => setEmployment(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'フリーター（週40時間）'}>フリーター（週40時間）</option>\n                            <option value={'フリーター（週20時間）'}>フリーター（週20時間）</option>\n                            <option value={'学生'}>学生</option>\n                            <option value={''}>「雇用形態」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='section'>\n                        <Form.Label className='mt-3 mb-0'>セクション</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={section}\n                            onChange={(e) => setSection(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'フロント'}>フロント</option>\n                            <option value={'キッチン'}>キッチン</option>\n                            <option value={'ドリンク'}>ドリンク</option>\n                            <option value={''}>「セクション」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isRookie'>\n                        <Form.Label className='mt-3 mb-0'>研修</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isRookie}\n                            onChange={() => setIsRookie(!isRookie)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>研修中</option>\n                            <option value={false}>完了</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isOpen'>\n                        <Form.Label className={'mt-3 mb-0'}>オープン</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isOpen}\n                            onChange={() => setIsOpen(!isOpen)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isPreClose'>\n                        <Form.Label className='mt-3 mb-0'>10時締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isPreClose}\n                            onChange={() => setIsPreClose(!isPreClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isClose'>\n                        <Form.Label className={'mt-3 mb-0'}>締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isClose}\n                            onChange={() => setIsClose(!isClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務開始時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='開始時間を選択'\n                        value={startDefault}\n                        min={new Date('01/01/2021 07:00 AM')}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setStartDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{cursor: 'pointer'}}\n                    ></TimePickerComponent>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務終了時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='終了時間を選択'\n                        value={endDefault}\n                        min={new Date('01/01/2021 ' + startDefault)}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setEndDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{ cursor: 'pointer' }}\n                    ></TimePickerComponent>\n\n                    <Form.Group controlId='weeklyWork'>\n                        <Form.Label className={'mt-3 mb-0'}>週間希望シフト回数</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={weeklyWork}\n                            onChange={(e) => setWeeklyWork(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={1}>1回</option>\n                            <option value={2}>2回</option>\n                            <option value={3}>3回</option>\n                            <option value={4}>4回</option>\n                            <option value={5}>5回</option>\n                            <option value={0}>「週間希望シフト回数」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='workTime'>\n                        <Form.Label className='mt-3 mb-0'>希望就労時間</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={workTime}\n                            onChange={(e) => setWorkTime(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={3}>3h</option>\n                            <option value={4}>4h</option>\n                            <option value={5}>5h</option>\n                            <option value={6}>6h</option>\n                            <option value={7}>7h</option>\n                            <option value={8}>8h</option>\n                            <option value={0}>「希望就労時間」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='commute'>\n                        <Form.Label className='mt-3 mb-0'>通勤方法</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={commute}\n                            onChange={(e) => setCommute(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'電車'}>電車</option>\n                            <option value={'バス'}>バス</option>\n                            <option value={'徒歩'}>徒歩</option>\n                            <option value={'自転車'}>自転車</option>\n                            <option value={''}>「」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='station'>\n                        <Form.Label className='mt-3 mb-0'>最寄り駅</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='最寄り駅を入力'\n                            value={station}\n                            onChange={(e) => setStation(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' size='lg' className='mt-4'>\n                        更新\n                    </Button>\n\n                </Form>\n            </FormContainer>\n            }\n        </>\n    )\n}\n\nexport default DemoProfileUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemForm  from '../components/ShiftItemForm'\n\n\n\n\nfunction DemoShiftSubmitScreen({ history }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const { shiftItems, period, isSubmitted } = shiftState\n\n    //Local States\n    const [remarks, setRemarks] = useState('')\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(period[0])()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else if (isSubmitted) {\n            history.push('/demo/profile')\n        }\n\n    }, [userInfo, history])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('シフトを提出しますか?（提出期限後、MGRが受理するまでは更新可能です）')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const { data } = await axios.post(\n                `/api/shifts/shift/create/`,\n                {\n                    'shiftItems': shiftItems,\n                    'section': profile.section,\n                    'periodStart': getStringDate(period[0]),\n                    'periodEnd': getStringDate(period[1]),\n                    'remarks': remarks,\n                    'isSubmitted': true,\n                },\n                config\n            )\n            history.push('/demo/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/demo/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>新規シフト提出</h1>\n            \n            <div className='text-center'> \n                <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                    {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                </h4>\n\n                <Form onSubmit={submitHandler}>\n                    \n                    <Row className='my-5 border' >\n                        {month.map((week, i) => (\n                            <React.Fragment key={i}> \n                                {week.map((date, j) => (\n                                    <React.Fragment key={j}>\n                                        {date.getMonth() === month[0][6].getMonth() &&\n                                            <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                <Card  className='mx-auto my-2'>\n                                                    <Card.Header>\n                                                        {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                    </Card.Header>\n                                                    <Card.Body >    \n                                                        <ShiftItemForm date={getStringDate(date)}/>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                    }\n                                    </React.Fragment>\n                                ))}\n                            </React.Fragment>\n                        ))}\n                    </Row>\n\n                    <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n                </Form>\n\n            \n            </div>\n            \n        </div>\n    )\n}\n//空タグでkey属性をもたせたい場合、Fragmentを使う\n\nexport default DemoShiftSubmitScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemUpdateForm from '../components/ShiftItemUpdateForm'\n\nimport Loader from '../components/Loader'\n\n\nfunction DemoShiftUpdateScreen({ history, match }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const shiftState = useShiftStore()\n    const { shiftItems } = shiftState\n    \n    //local\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n    const [remarks, setRemarks] = useState([])\n    const [month, setMonth] = useState([])\n    const [loading, setLoading] = useState(true)\n\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    \n\n    //functions\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            \n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n                setRemarks(data.remarks)\n                setMonth(takeMonth(new Date(String(data.period_start)))())\n                setLoading(false)\n                console.log(data)\n            }        \n            fetchShift()\n        }\n\n        \n    }, [userInfo, history, match])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (window.confirm('このシフトを更新しますか?')) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n        \n    \n            const { data } = await axios.put(\n                `/api/shifts/shift-update/${shiftId}/`,\n               {\n                    'shiftItems': shiftItems,\n                    'remarks': remarks,\n                },\n                config\n            )\n            history.push('/demo/profile')\n        }\n    } \n\n    return (\n        <div>\n            <Link to='/demo/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト更新</h1>\n            \n            {loading ? <Loader /> :\n            \n                <div className='text-center'> \n                    <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                        {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                    </h4>\n\n                    <Form onSubmit={submitHandler}>\n                        \n                        <Row className='my-5 border' >\n                            {month.map((week, i) => (\n                                <React.Fragment key={i}> \n                                    {week.map((date, j) => (\n                                        <React.Fragment key={j}>\n                                            {date.getMonth() === month[0][6].getMonth() &&\n                                                <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                    <Card  className='mx-auto my-2'>\n                                                        <Card.Header>\n                                                            {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                        </Card.Header>\n                                                        <Card.Body >\n                                                            <ShiftItemUpdateForm\n                                                                date={getStringDate(date)}\n                                                                shiftItem={shift.shiftItems.find(element => element.date === getStringDate(date))}\n                                                            />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                        }\n                                        </React.Fragment>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Row>\n\n                        <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form>\n\n                \n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default DemoShiftUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore } from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport {format} from 'date-fns'\n\n// import  useMediaQuery  from 'react-response'\n\n\nfunction ShiftConfirmScreen({ history, match }) {\n    \n    //for API\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    \n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(new Date(String(shift.period_start)))()\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n            }\n            fetchShift()\n        }\n    }, [userInfo, history, match])\n\n    return (\n        <div>\n            <Link to='/demo/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト確認</h1>\n            {shift.shiftItems &&\n            <div className='text-center'> \n                <h4 style={{borderBottom:'1px solid', display:'inline-block'}}>{ month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}</h4>\n                \n                <div>\n                    <Row className='text-center my-4' >\n                        {month.map((week) => (\n                            <React.Fragment key={week}>\n                            {week.map((x) => (\n                                <Col key={x} className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>\n                                    \n                                    <Card style={{width: '11rem', height:'10rem'}}>\n                                        <Card.Header>\n                                            {x.getMonth() + 1} / {x.getDate()} ({ days[x.getDay()]})\n                                        </Card.Header>\n                                        <Card.Body>\n                                            {shift.shiftItems.map((item) => (\n                                                <div key={item._id}>\n                                                    {item.date === format(x, 'yyyy-MM-dd') &&\n                                                        <div>\n                                                            <Card.Title style={{color: '#0405B5'}}><b>出勤</b></Card.Title>\n                                                            <Card.Text>\n                                                                {item.start_time.substring(0, 5)}\n                                                                {' '}~{' '}\n                                                                {item.end_time.substring(0, 5)}\n                                                            </Card.Text>\n                                                        </div>\n                                                    }\n                                                </div>\n                                            ))}\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </React.Fragment>\n                    ))}\n                    </Row>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ShiftConfirmScreen\n","import logo from './logo.svg';\nimport Header from './components/Header'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nimport HomeScreen from './screens/HomeScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ProfileUpdateScreen from './screens/ProfileUpdateScreen'\nimport { LoginProvider } from './context'\nimport { ProfileProvider } from './context'\nimport { ShiftProvider } from './context'\n\n\nimport ShiftConfirmScreen from './screens/ShiftConfirmScreen'\nimport ShiftUpdateScreen from './screens/ShiftUpdateScreen'\nimport ShiftSubmitScreen from './screens/ShiftSubmitScreen'\nimport ShiftItemForm from './components/ShiftItemForm'\nimport ShiftItemUpdateForm from './components/ShiftItemUpdateForm'\n\nimport DemoProfileScreen from './demo/DemoProfileScreen'\nimport DemoProfileUpdateScreen from './demo/DemoProfileUpdateScreen'\nimport DemoSubmitScreen from './demo/DemoSubmitScreen'\nimport DemoShiftUpdateScreen from './demo/DemoShiftUpdateScreen'\nimport DemoShiftConfirmScreen from './demo/DemoShiftConfirmScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <LoginProvider>\n        <ShiftProvider>\n          <ProfileProvider>\n            <Header />\n        <main className='py-3'>\n          <Container>\n              <Route  path='/' component={HomeScreen} exact />\n              <Route path='/register' component={RegisterScreen} />\n              <Route path='/login' component={LoginScreen}/>\n              <Route path='/shifts/confirm/:id' component={ShiftConfirmScreen} />\n              \n                <Route path='/profile' component={ProfileScreen} />\n                <Route path='/update/profile' component={ProfileUpdateScreen}/>\n                <Route path='/shifts/test' component={ShiftItemForm}/>\n                <Route path='/update/test/:id' component={ShiftItemUpdateForm}/>\n                <Route path='/shifts/update/:id' component={ShiftUpdateScreen}/>\n                <Route path='/shifts/submit' component={ShiftSubmitScreen} />\n              \n                <Route path='/demo/profile' component={DemoProfileScreen} />\n                <Route path='/demo/update/profile' component={DemoProfileUpdateScreen} />\n                <Route path='/demo/shift/submit' component={DemoSubmitScreen} />\n                <Route path='/demo/shifts/update/:id' component={DemoShiftUpdateScreen} />\n                <Route path='/demo/shifts/confirm/:id' component={DemoShiftConfirmScreen} />\n\n          </Container>\n        </main>\n            </ProfileProvider>\n        </ShiftProvider>\n      </LoginProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}