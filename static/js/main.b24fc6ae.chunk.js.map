{"version":3,"sources":["constants/userConstants.js","reducers/userReducers.js","constants/shiftConstants.js","reducers/shiftReducers.js","context.js","actions/userActions.js","components/Header.js","screens/HomeScreen.js","components/FormContainer.js","components/Message.js","screens/RegisterScreen.js","components/Loader.js","screens/LoginScreen.js","actions/shiftActions.js","screens/ProfileScreen.js","screens/ProfileUpdateScreen.js","constants/month.js","screens/ShiftConfirmScreen.js","components/ShiftItemUpdateForm.js","screens/ShiftUpdateScreen.js","components/ShiftItemForm.js","screens/ShiftSubmitScreen.js","demo/DemoProfileScreen.js","components/BackToDemoProfile.js","demo/DemoProfileUpdateScreen.js","demo/DemoSubmitScreen.js","demo/DemoShiftUpdateScreen.js","demo/DemoShiftConfirmScreen.js","demo/DemoUserListScreen.js","demo/DemoUserEditScreen.js","demo/DemoShiftListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ShiftListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_RESET","loginInitialState","userInfo","localStorage","getItem","JSON","parse","error","loading","profileInitialState","profile","SHIFT_REQUEST","SHIFT_SUCCESS","SHIFT_ADD_ITEM","SHIFT_REMOVE_ITEM","SHIFT_CHANGE_STATUS","SHIFT_RESET","SHIFT_CHANGE_PERIOD","shiftInitialState","shiftItems","isSubmitted","period","endOfDay","startOfMonth","addMonths","Date","endOfMonth","deadline","subDays","makeStore","reducer","initialState","storeContext","React","createContext","dispatchContext","children","useReducer","store","dispatch","Provider","value","useContext","state","action","type","payload","LoginProvider","useLoginStore","useLoginDispatch","ProfileProvider","useProfileStore","useProfileDispatch","item","existItem","find","x","date","map","filter","ShiftProvider","useShiftStore","useShiftDispatch","login","email","password","a","config","headers","axios","post","data","setItem","stringify","response","detail","message","getProfile","Authorization","token","get","Header","loginDispatch","shiftDispatch","profileDispatch","logoutHandler","removeItem","logout","Navbar","bg","variant","collapseOnSelect","Container","Brand","Nav","className","NavDropdown","title","name","id","to","Item","onClick","isAdmin","HomeScreen","history","useEffect","push","FormContainer","Row","Col","xs","md","Message","Alert","RegisterScreen","location","useState","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","setMessage","loginState","redirect","search","split","submitHandler","e","preventDefault","Form","onSubmit","Group","controlId","Label","Control","required","placeholder","onChange","target","Button","Loader","Spinner","animation","role","style","height","width","margin","display","LoginScreen","addShiftItem","isWork","startTime","endTime","isAllDay","removeShiftItem","changeSubmitStatus","changePeriod","time","ProfileScreen","shifts","setShifts","profileState","profileLoading","shiftState","getStringDate","dt","getFullYear","getMonth","slice","getDate","window","addEventListener","go","fetchShifts","i","length","period_start","sm","size","disabled","color","String","format","Table","striped","hover","responsive","shift","_id","period_end","is_confirmed","duty","section","employment_status","is_rookie","is_open_staff","is_pre_close_staff","is_close_staff","start_default","substring","end_default","desired_times_per_week","desired_working_time","commute","station","ProfileUpdateScreen","setDuty","setSection","employment","setEmployment","isRookie","setIsRookie","isOpen","setIsOpen","isPreClose","setIsPreClose","isClose","setIsClose","startDefault","setStartDefault","endDefault","setEndDefault","weeklyWork","setWeeklyWork","workTime","setWorkTime","setCommute","setStation","setLoading","put","background","as","cursor","min","step","change","text","openOnFocus","strictMode","showClearButton","allowEdit","require","startOfWeek","endOfWeek","startOfDay","addDays","takeWeek","start","week","Array","_","takeMonth","month","lastDayOfRange","range","weekGenerator","endDate","ShiftConfirmScreen","match","shiftId","params","setShift","days","fetchShift","borderBottom","Fragment","lg","xl","Card","getDay","Body","Title","Text","start_time","end_time","ShiftItemUpdateForm","flag","shiftItem","setIsWork","setIsAllDay","setStartTime","setEndTime","isDefault","setIsDefault","is_work","is_all_day","enabled","Check","label","checked","ShiftUpdateScreen","remarks","setRemarks","setMonth","j","element","row","ShiftItemForm","chooseCursor","ShiftSubmitScreen","DemoProfileScreen","BackToDemoProfile","DemoProfileUpdateScreen","DemoShiftSubmitScreen","DemoShiftUpdateScreen","DemoShiftConfirmScreen","DemoUserListScreen","users","setUsers","successDelete","setSuccessDelete","fetchUsers","bordered","user","DemoUserEditScreen","userId","setIsAdmin","fetchUser","DemoShiftListScreen","console","log","UserListScreen","confirm","fetchDeleteUser","delete","deleteHandler","UserEditScreen","ShiftListScreen","App","path","component","exact","DemoSubmitScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAMdC,EAAuB,uBACvBC,EAAuB,uBAEvBC,EAAqB,qBCKrBC,EAAoB,CAC7BC,SARuBC,aAAaC,QAAQ,YAC5CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAQ/CG,OAAO,EACPC,SAAS,GAEAC,EAAsB,CAC/BC,QAVsBP,aAAaC,QAAQ,WAC3CC,KAAKC,MAAMH,aAAaC,QAAQ,YAAc,GAU9CG,OAAO,EACPC,SAAS,G,QC1BAG,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAc,cACdC,EAAsB,sB,wCCStBC,EAAoB,CAC7BC,WAAY,GACZC,aAAa,EACbZ,SAAS,EACTa,OAAQ,CACJC,YAASC,YAAaC,YAAU,IAAIC,KAAQ,KAC5CH,YAASI,YAAWF,YAAU,IAAIC,KAAQ,MAE9CE,SAAUC,YAAQN,YAASI,YAAW,IAAID,OAAU,K,OCnB3CI,EAAY,SAACC,EAASC,GAC/B,IAAMC,EAAeC,IAAMC,gBACrBC,EAAkBF,IAAMC,gBAsB9B,MAAO,CApBe,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SAAe,EACVC,qBAAWP,EAASC,GADV,mBAC7BO,EAD6B,KACtBC,EADsB,KAGpC,OACI,cAACJ,EAAgBK,SAAjB,CAA0BC,MAAOF,EAAjC,SACI,cAACP,EAAaQ,SAAd,CAAuBC,MAAOH,EAA9B,SACMF,OAMD,WACf,OAAOH,IAAMS,WAAWV,IAGN,WAClB,OAAOC,IAAMS,WAAWP,M,EAOkCN,GHHhC,SAACc,EAAOC,GACpC,OAAQA,EAAOC,MACX,KAAKnD,EACD,MAAO,CAAEc,SAAS,GACtB,KAAKb,EACD,MAAO,CAAEa,SAAS,EAAON,SAAW0C,EAAOE,SAC/C,KAAKlD,EACD,MAAO,CAAEY,SAAS,EAAOD,OAAO,GACpC,KAAKV,EACD,MAAO,CAAEK,SAAU,MACvB,QACI,OAAOyC,KGRyE1C,G,mBAA9E8C,E,KAAeC,E,KAAeC,E,OAC0BpB,GHapC,SAACc,EAAOC,GACtC,OAAQA,EAAOC,MACX,KAAK/C,EACD,OAAO,2BAAK6C,GAAZ,IAAmBnC,SAAS,IAChC,KAAKT,EACD,OAAO,2BAAK4C,GAAZ,IAAmBnC,SAAS,EAAOE,QAAUkC,EAAOE,UACxD,IDzCyB,oBC0CrB,OAAO,2BAAKH,GAAZ,IAAmBnC,SAAS,EAAOD,OAAO,IAC9C,KAAKP,EACD,OAAOS,EACX,QACI,OAAOkC,KGxBiFlC,G,mBAAtFyC,E,KAAiBC,E,KAAiBC,E,OACgBvB,GDPpC,SAACc,EAAOC,GAChC,OAAQA,EAAOC,MACX,KAAKlC,EACD,OAAO,2BAAKgC,GAAZ,IAAmBnC,SAAS,IAChC,KAAKI,EACD,OAAO,2BAAK+B,GAAZ,IAAmBnC,SAAS,IAChC,KAAKK,EACD,IAAMwC,EAAOT,EAAOE,QACdQ,EAAYX,EAAMxB,WAAWoC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAASJ,EAAKI,QAC7D,OAAIH,EAEO,2BACAX,GADP,IAEInC,SAAS,EACTW,WAAYwB,EAAMxB,WAAWuC,KAAI,SAAAF,GAAC,OAAIA,EAAEC,OAASH,EAAUG,KAAOJ,EAAOG,OAItE,2BACAb,GADP,IAEInC,SAAS,EACTW,WAAW,GAAD,mBAAMwB,EAAMxB,YAAZ,CAAwBkC,MAG9C,KAAKvC,EACD,OAAO,2BACA6B,GADP,IAEInC,SAAS,EACTW,WAAYwB,EAAMxB,WAAWwC,QAAO,SAAAH,GAAC,OAAIA,EAAEC,OAASb,EAAOE,aAEnE,KAAK/B,EACD,OAAO,2BACA4B,GADP,IAEInC,SAAS,EACTY,YAAawB,EAAOE,UAE5B,KAAK7B,EACD,OAAO,2BACA0B,GADP,IAEInC,SAAS,EACTmB,SAAUiB,EAAOE,UAEzB,KAAK9B,EACD,OAAOE,EACX,QACI,OAAOyB,KCtCqEzB,G,mBAA1E0C,E,KAAeC,E,KAAeC,E,sDCpB/BC,GAAK,yCAAG,WAAOC,EAAOC,EAAU1B,GAAxB,oBAAA2B,EAAA,sEAEb3B,EAAS,CACLM,KAAMnD,IAEJyE,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPX,SAUUC,KAAMC,KACzB,oBACA,CAAE,SAAYN,EAAO,SAAYC,GACjCE,GAbS,gBAULI,EAVK,EAULA,KAKRhC,EAAS,CACLM,KAAMlD,EACNmD,QAASyB,IAEbpE,aAAaqE,QAAQ,WAAYnE,KAAKoE,UAAUF,IAnBnC,kDAsBbhC,EAAS,CACLM,KAAMjD,EACNkD,QAAS,KAAM4B,UAAY,KAAMA,SAASH,KAAKI,OACzC,KAAMD,SAASH,KAAKI,OACrB,KAAMC,UA1BF,0DAAH,0DA2ELC,GAAU,yCAAG,WAAOtC,EAAUrC,GAAjB,oBAAAgE,EAAA,6DACtB3B,EAAS,CAAEM,KAAM/C,IAEXqE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SANrB,SASCV,KAAMW,IACzB,sBACAb,GAXkB,gBASdI,EATc,EASdA,KAIRhC,EAAS,CACLM,KAAM9C,EACN+C,QAASyB,IAGbpE,aAAaqE,QAAQ,UAAWnE,KAAKoE,UAAUF,IAlBzB,2CAAH,wDCCRU,OAjFf,WACI,IAAMtC,EAAQK,IACRkC,EAAgBjC,IACd/C,EAAayC,EAAbzC,SACFiF,EAAgBrB,IAEfpD,EADcyC,IACdzC,QACD0E,EAAkBhC,IAGlBiC,EAAgB,YD4BJ,SAACH,EAAeE,GAClCjF,aAAamF,WAAW,YACxBnF,aAAamF,WAAW,WACxBJ,EAAc,CAAErC,KAAMhD,IC9BlB0F,CAAOL,GACPC,EAAc,CAACtC,KAAM7B,IACrBoE,EAAgB,CAAEvC,KAAM7C,KAG5B,OACI,iCACI,cAACwF,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,kBAAgB,EAAjD,SACI,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAOK,MAAR,wBACI,eAACC,EAAA,EAAD,CAAKC,UAAU,cAAf,UAEC7F,GACG,cAAC8F,EAAA,EAAD,CAAaC,MAAOvF,EAAQwF,KAAMC,GAAG,WAAWJ,UAAU,OAA1D,SACwB,mBAAnB7F,EAAS8D,MACN,qCACI,cAAC,gBAAD,CAAeoC,GAAG,gBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,mCAEJ,cAAC,gBAAD,CAAeD,GAAG,SAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,CAAkBC,QAASjB,EAA3B,iDAIR,qCACI,cAAC,gBAAD,CAAee,GAAG,WAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,mCAEJ,cAACL,EAAA,EAAYK,KAAb,CAAkBC,QAASjB,EAA3B,iDAMfnF,GAAYA,EAASqG,SAClB,eAACP,EAAA,EAAD,CAAaC,MAAM,iCAAQE,GAAG,YAA9B,UACI,cAAC,gBAAD,CAAeC,GAAG,kBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,qDAGJ,cAAC,gBAAD,CAAeD,GAAG,mBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,kDAKXnG,GACG,mCACoB,mBAAnBA,EAAS8D,OACN,eAACgC,EAAA,EAAD,CAAaC,MAAM,iCAAQE,GAAG,YAA9B,UACI,cAAC,gBAAD,CAAeC,GAAG,uBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,qDAGJ,cAAC,gBAAD,CAAeD,GAAG,wBAAlB,SACI,cAACJ,EAAA,EAAYK,KAAb,+D,kBCvDzBG,OAlBf,YAAgC,IAAXC,EAAU,EAAVA,QAWjB,OATmBzD,IACZ9C,SAEPwG,qBAAU,WAEND,EAAQE,KAAK,YAEd,IAGC,mCACI,8C,sCCDGC,OAZf,YAAsC,IAAbxE,EAAY,EAAZA,SACrB,OACI,cAACwD,EAAA,EAAD,UACI,cAACiB,GAAA,EAAD,CAAKd,UAAU,4BAAf,SACI,cAACe,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACK5E,S,UCGN6E,OARf,YAAuC,IAArBvB,EAAoB,EAApBA,QAAStD,EAAW,EAAXA,SACvB,OACI,cAAC8E,GAAA,EAAD,CAAOxB,QAASA,EAAhB,SACKtD,KCgHE+E,OAzGf,YAA8C,IAArBV,EAAoB,EAApBA,QAASW,EAAW,EAAXA,SAAW,EAEjBC,mBAAS,IAFQ,mBAElCnB,EAFkC,KAE5BoB,EAF4B,OAGfD,mBAAS,IAHM,mBAGlCrD,EAHkC,KAG3BuD,EAH2B,OAITF,mBAAS,IAJA,mBAIlCpD,EAJkC,KAIxBuD,EAJwB,OAKKH,mBAAS,IALd,mBAKlCI,EALkC,KAKjBC,EALiB,OAMXL,mBAAS,IANE,mBAMlCzC,EANkC,KAMzB+C,EANyB,KASnCC,EAAa5E,IACbkC,EAAgBjC,IACf/C,EAAY0H,EAAZ1H,SAED2H,EAAWT,EAASU,OAASV,EAASU,OAAOC,MAAM,KAAK,GAAK,IAGnErB,qBAAU,WACFxG,GACAuG,EAAQE,KAAK,OAEnB,CAACF,EAASvG,IAEZ,IAAM8H,EAAa,yCAAG,WAAMC,GAAN,UAAA/D,EAAA,yDAClB+D,EAAEC,iBACEjE,IAAawD,EAFC,gBAGdE,EAAW,4EAHG,sCAKRtD,KAAMC,KACR,uBACA,CAAE,KAAQ4B,EAAM,MAASlC,EAAO,SAAYC,IAPlC,OASdF,GAAMC,EAAOC,EAAUiB,GATT,2CAAH,sDAenB,OACI,eAAC,GAAD,WACI,4EACCN,GAAW,cAAC,GAAD,CAASc,QAAQ,SAAjB,SAA2Bd,IAEvC,eAACuD,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UACI,eAACG,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAOvC,UAAU,OAAvC,UACI,cAACoC,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR5F,KAAK,OACL6F,YAAY,iCACZjG,MAAOyD,EACPyC,SAAU,SAACV,GAAD,OAAOX,EAAQW,EAAEW,OAAOnG,aAI1C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAQvC,UAAU,OAAxC,UACI,cAACoC,GAAA,EAAKI,MAAN,yDACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR5F,KAAK,QACL6F,YAAY,+DACZjG,MAAOuB,EACP2E,SAAU,SAACV,GAAD,OAAOV,EAASU,EAAEW,OAAOnG,aAI3C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAWvC,UAAU,OAA3C,UACI,cAACoC,GAAA,EAAKI,MAAN,6CACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR5F,KAAK,WACL6F,YAAY,mDACZjG,MAAOwB,EACP0E,SAAU,SAACV,GAAD,OAAOT,EAAYS,EAAEW,OAAOnG,aAI9C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,kBAAkBvC,UAAU,OAAlD,UACI,cAACoC,GAAA,EAAKI,MAAN,yDACA,cAACJ,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR5F,KAAK,WACL6F,YAAY,2EACZjG,MAAOgF,EACPkB,SAAU,SAACV,GAAD,OAAOP,EAAmBO,EAAEW,OAAOnG,aAIrD,cAACoG,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAA9B,6BAKJ,cAACmB,GAAA,EAAD,CAAKd,UAAU,OAAf,SACI,eAACe,GAAA,EAAD,gFAEI,eAAC,QAAD,CAAMV,GAAIyB,EAAQ,0BAAsBA,GAAa,SAArD,UACK,IADL,wC,UCxFLiB,OAjBf,WACI,OACI,cAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLC,MAAO,CACHC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,QAAS,YCoFVC,OApFf,YAA2C,IAArB9C,EAAoB,EAApBA,QAASW,EAAW,EAAXA,SAErBzE,EAAQK,IACRT,EAAWU,IACV/C,EAAmByC,EAAnBzC,SAAUK,EAASoC,EAATpC,MAJqB,EAKZ8G,mBAAS,IALG,mBAK/BrD,EAL+B,KAKxBuD,EALwB,OAMNF,mBAAS,IANH,mBAM/BpD,EAN+B,KAMrBuD,EANqB,KAQhCK,EAAWT,EAASU,OAASV,EAASU,OAAOC,MAAM,KAAK,GAAK,IAenE,OAZArB,qBAAU,WACFxG,GACAuG,EAAQE,KAAK,cAEnB,CAACF,EAASvG,IASR,qCACI,eAAC,GAAD,WACI,0DAECK,GAAS,cAAC,GAAD,CAASmF,QAAQ,SAAjB,8IAEV,eAACyC,GAAA,EAAD,CAAMC,SAbI,SAACH,GACnBA,EAAEC,iBACFnE,GAAMC,EAAOC,EAAU1B,IAWf,UACI,eAAC4F,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,OAAtB,wDACA,cAACoC,GAAA,EAAKK,QAAN,CACI3F,KAAK,QACL6F,YAAY,gEACZjG,MAAOuB,EACP2E,SACI,SAACV,GAAD,OAAOV,EAASU,EAAEW,OAAOnG,aAMrC,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,4CACA,cAACoC,GAAA,EAAKK,QAAN,CACI3F,KAAK,WACL6F,YAAY,mDACZjG,MAAOwB,EACP0E,SACI,SAACV,GAAD,OAAOT,EAAYS,EAAEW,OAAOnG,aAKxC,cAACoG,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAUK,UAAU,YAAlD,yCAMJ,cAACc,GAAA,EAAD,CAAKd,UAAU,OAAf,SACI,eAACe,GAAA,EAAD,kGAEI,eAAC,QAAD,CAAMV,GAAIyB,EAAQ,6BAAyBA,GAAa,YAAxD,UACK,IADL,2BAQZ,cAAC,GAAD,UACI,eAAC,GAAD,CAASnC,QAAQ,OAAjB,iMAEI,uBACA,cAAC,QAAD,CAAMU,GAAI,gBAAV,iF,UCjFPoD,GAAe,SAACjH,EAAUkB,EAAMgG,EAAQC,EAAWC,EAASC,GACrErH,EAAS,CACLM,KAAMhC,EACNiC,QAAS,CACLW,OACAgG,SACAC,YACAC,UACAC,eAKCC,GAAkB,SAACtH,EAAUkB,GACtClB,EAAS,CACLM,KAAM/B,EACNgC,QAASW,KAIJqG,GAAqB,SAACvH,EAAUE,GACzCF,EAAS,CACLM,KAAM9B,EACN+B,QAASL,KAIJsH,GAAe,SAACxH,EAAUyH,GACnCzH,EAAS,CACLM,KAAM5B,EACN6B,QAASkH,K,SC+MFC,OAvOf,YAAqC,IAAZxD,EAAW,EAAXA,QAAW,EAEJY,mBAAS,IAFL,mBAEzB6C,EAFyB,KAEjBC,EAFiB,KAMzBjK,EADY8C,IACZ9C,SACDqC,EAAWa,IACXgH,EAAejH,IACbzC,EAAqC0J,EAArC1J,QAAkB2J,EAAmBD,EAA5B5J,QACX8J,EAAazG,IACXxC,EAA2CiJ,EAA3CjJ,OAAQM,EAAmC2I,EAAnC3I,SAAUP,EAAyBkJ,EAAzBlJ,YAAaZ,EAAY8J,EAAZ9J,QACjC2E,EAAgBrB,IAEhByG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IA2CxG,OAxCAjE,qBAAU,WAQN,GANAmE,OAAOC,iBAAiB,YAAY,SAAC7C,GACV,QAAnBxB,EAAQ7D,QACR6D,EAAQsE,GAAG,MAId7K,EAEE,CAAC,IASW8K,EATZ,yCASH,iCAAA9G,EAAA,6DACIiB,EAAc,CAACtC,KAAMlC,IADzB,SAE2B0D,KAAMW,IAAN,wBAEnBb,GAJR,OAQI,IARJ,SAEYI,EAFZ,EAEYA,KAIR4F,EAAU5F,GAED0G,EAAI,EAAGA,EAAI1G,EAAK2G,OAAQD,IACzB1G,EAAK0G,GAAGE,eAAiBZ,EAAclJ,EAAO,KAC9CyI,GAAmB3E,GAAe,GAI1CA,EAAc,CAACtC,KAAMjC,IAdzB,2CATG,qDACHiE,GAAWtC,EAAUrC,GAErB,IAAMiE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAmB3CiG,SA1BAvE,EAAQE,KAAK,YA6BlB,CAACF,EAASvG,EAAUqC,EAAU4C,IAG7B,gCACI,2DAAUzE,EAAQwF,KAAlB,mBACA,eAACW,GAAA,EAAD,CAAKd,UAAU,OAAf,UAGKvF,EAAU,cAAC,GAAD,IAEP,eAACsG,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,GAAIrF,UAAU,OAA9B,UACI,gEACA,eAACH,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,cAAC,gBAAD,CAAeK,GAAG,iBAAiBL,UAAU,wBAA7C,SACI,eAAC8C,GAAA,EAAD,CAAQwC,KAAK,KAAK3F,QAAQ,UAAU4F,SAAUlK,GAAgB,IAAIK,KAASE,EAA3E,oEAAgG,oBAAGoE,UAAU,MAAb,UAAoBwE,EAAclJ,EAAO,IAAzC,MAAkDkJ,EAAclJ,EAAO,YAE3K,oBAAG0E,UAAU,YAAb,4CAAgC3E,EAAc,mBAAG8H,MAAO,CAACqC,MAAO,QAAlB,sCAAsC,mBAAGrC,MAAO,CAACqC,MAAO,OAAlB,mCACpF,oBAAGxF,UAAU,YAAb,4CAAgCyF,OAAOC,aAAO9J,EAAU,uBAAxD,oBACGP,GAAgB,IAAIK,KAASE,GAC5B,cAAC,GAAD,CAAS+D,QAAQ,SAAjB,+KAKR,oBAAIK,UAAU,OAAd,4CACmB,IAAlBmE,EAAOgB,OAAe,cAAC,GAAD,CAASxF,QAAQ,OAAjB,oEACnB,eAACgG,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAAC9F,UAAU,kBAA1C,UACI,gCACI,+BACI,oCACA,wCACA,wCACA,4BAGR,gCACKmE,EAAOxG,KAAI,SAACoI,GAAD,OACR,+BACI,6BAAKA,EAAMC,MACX,+BAAKD,EAAMX,aAAX,IAA0B,IAA1B,MAAkC,IAAKW,EAAME,cAC7C,6BAAKF,EAAMG,aAAe,eAAO,uBACjC,6BACMH,EAAMG,aACJ,cAAC,gBAAD,CAAe7F,GAAE,0BAAqB0F,EAAMC,KAA5C,SACI,cAAClD,GAAA,EAAD,CAAQ9C,UAAU,SAASL,QAAQ,kBAAnC,4BAGJ,cAAC,gBAAD,CAAeU,GAAE,yBAAoB0F,EAAMC,KAA3C,SACI,cAAClD,GAAA,EAAD,CAAQ9C,UAAU,SAASL,QAAQ,eAAnC,gCAXPoG,EAAMC,gBA0BtC1B,EAAiB,cAAC,GAAD,IACd,eAACvD,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,GAAIrF,UAAU,OAA9B,UAEA,eAACc,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKE,GAAK,GAAIoE,GAAI,GAAIrE,GAAI,GAA1B,SACI,wEAEJ,cAACD,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,EAAGrE,GAAI,EAAGhB,UAAU,4BAApC,SACI,cAAC,gBAAD,CAAeK,GAAI,kBAAnB,SACQ,cAACyC,GAAA,EAAD,CAAQnD,QAAQ,oBAAmBK,UAAU,SAA7C,iCAOZ,eAAC2F,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACR,KAAK,KAAKtF,UAAU,SAApD,UACI,gCACI,+BACI,qCACA,uCACA,8CAGR,kCACI,+BACI,oCACA,6BAAKrF,EAAQqL,MACb,0BAEJ,+BACI,8CACA,6BAAKrL,EAAQwF,OACb,0BAEJ,+BACI,8CACA,6BAAKxF,EAAQwL,OACb,0BAEJ,+BACI,gEACA,6BAAKxL,EAAQyL,UACb,0BAEJ,+BACI,0DACA,6BAAKzL,EAAQ0L,oBACb,0BAEJ,+BACI,oDACA,6BAAK1L,EAAQ2L,UAAY,qBAAQ,iBACjC,0BAEJ,+BACI,0DACA,6BAAK3L,EAAQ4L,cAAgB,SAAM,iBACnC,0BAEJ,+BACI,sDACA,6BAAK5L,EAAQ6L,mBAAqB,SAAM,iBACxC,0BAEJ,+BACI,8CACA,6BAAK7L,EAAQ8L,eAAiB,SAAM,iBACpC,0BAEJ,+BACI,uEACA,mCAAM9L,EAAQ+L,cAAcC,UAAU,EAAE,MACxC,yHAEJ,+BACI,uEACA,mCAAMhM,EAAQiM,YAAYD,UAAU,EAAE,MACtC,yHAEJ,+BACI,yFACA,yCAAOhM,EAAQkM,0BACf,6GAEJ,+BACI,uEACA,mCAAMlM,EAAQmM,qBAAd,OACA,6GAEJ,+BACI,2DACA,mCAAMnM,EAAQoM,WACd,0BAEJ,+BACI,2DACA,mCAAMpM,EAAQqM,WACd,oI,UCoGrBC,OA/Tf,YAAyC,IAAXvG,EAAU,EAAVA,QAAU,EAEZY,mBAAS,IAFG,mBAE7BnB,EAF6B,KAEvBoB,EAFuB,OAGZD,mBAAS,IAHG,mBAG7B6E,EAH6B,KAGvBe,EAHuB,OAIN5F,mBAAS,IAJH,mBAI7B8E,EAJ6B,KAIpBe,EAJoB,OAKA7F,mBAAS,IALT,mBAK7B8F,EAL6B,KAKjBC,EALiB,OAMJ/F,oBAAS,GANL,mBAM7BgG,EAN6B,KAMnBC,EANmB,OAORjG,oBAAS,GAPD,mBAO7BkG,EAP6B,KAOrBC,EAPqB,OAQAnG,oBAAS,GART,mBAQ7BoG,EAR6B,KAQjBC,EARiB,OASNrG,oBAAS,GATH,mBAS7BsG,EAT6B,KASpBC,EAToB,OAUIvG,mBAAS,IAVb,mBAU7BwG,EAV6B,KAUfC,EAVe,OAWAzG,mBAAS,IAXT,mBAW7B0G,EAX6B,KAWjBC,EAXiB,OAYA3G,mBAAS,IAZT,mBAY7B4G,EAZ6B,KAYjBC,EAZiB,OAaJ7G,mBAAS,IAbL,mBAa7B8G,GAb6B,KAanBC,GAbmB,QAcN/G,mBAAS,IAdH,qBAc7ByF,GAd6B,MAcpBuB,GAdoB,SAeNhH,mBAAS,IAfH,qBAe7B0F,GAf6B,MAepBuB,GAfoB,SAgBNjH,oBAAS,GAhBH,qBAgB7B7G,GAhB6B,MAgBpB+N,GAhBoB,MAoB7BrO,GADY8C,IACZ9C,SACDqC,GAAWa,IAET1C,GADayC,IACbzC,QAERgG,qBAAU,WACDxG,IAGD2E,GAAWtC,GAAUrC,IAErBQ,GAAQwF,KAAOoB,EAAQ5G,GAAQwF,MAAQoB,EAAQ,oDAC/C5G,GAAQwL,KAAOe,EAAQvM,GAAQwL,MAAQe,EAAQ,IAC/CvM,GAAQ0L,kBAAoBgB,EAAc1M,GAAQ0L,mBAAqBgB,EAAc,IACrF1M,GAAQyL,QAAUe,EAAWxM,GAAQyL,SAAWe,EAAW,IAC3DxM,GAAQ2L,UAAYiB,EAAY5M,GAAQ2L,WAAaiB,GAAY,GACjE5M,GAAQ4L,cAAgBkB,EAAU9M,GAAQ4L,eAAiBkB,GAAU,GACrE9M,GAAQ6L,mBAAqBmB,EAAchN,GAAQ6L,oBAAsBmB,GAAc,GACvFhN,GAAQ8L,eAAiBoB,EAAWlN,GAAQ8L,gBAAkBoB,GAAW,GACzElN,GAAQ+L,cAAgBqB,EAAgBpN,GAAQ+L,eAAiBqB,EAAgB,IACjFpN,GAAQiM,YAAcqB,EAActN,GAAQiM,aAAeqB,EAAc,IACzEtN,GAAQkM,uBAAyBsB,EAAcxN,GAAQkM,wBAA0BsB,EAAc,GAC/FxN,GAAQmM,qBAAuBuB,GAAY1N,GAAQmM,sBAAwBuB,GAAY,GACvF1N,GAAQoM,QAAUuB,GAAW3N,GAAQoM,SAAWuB,GAAW,IAC3D3N,GAAQqM,QAAUuB,GAAW5N,GAAQqM,SAAWuB,GAAW,IAE3DC,IAAW,IAnBX9H,EAAQE,KAAK,UAsBbkH,GAAiBE,IACjBD,EAAgBpN,GAAQ+L,cAAcC,UAAU,EAAE,IAClDsB,EAActN,GAAQiM,YAAYD,UAAU,EAAE,OAEnD,CAACjG,EAASvG,GAAUqC,KAEvB,IAAMyF,GAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBAEI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAc,UAAD,OAAY5E,GAAS6E,SANxB,SAUKV,KAAMmK,IAAN,6BAEnB,CACI,KAAQtI,EACR,KAAQgG,EACR,WAAciB,EACd,QAAWhB,EACX,SAAYkB,EACZ,OAAUE,EACV,WAAcE,EACd,QAAWE,EACX,aAAgBE,EAChB,WAAcE,EACd,WAAcE,EACd,SAAYE,GACZ,QAAWrB,GACX,QAAWC,IAEf5I,GA5Bc,kBAUVI,KAoBRkC,EAAQE,KAAK,YA9BK,2CAAH,sDAiCnB,OACI,qCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAA9D,iCAGCjO,GAAU,cAAC,GAAD,IACX,cAAC,GAAD,UACI,eAAC2H,GAAA,EAAD,CAAMC,SAAUJ,GAAejC,UAAU,aAAzC,UACI,eAACoC,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,cAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR5F,KAAK,OACL6F,YAAY,iCACZjG,MAAOyD,EACPyC,SAAU,SAACV,GAAD,OAAOX,EAAQW,EAAEW,OAAOnG,aAI1C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOyJ,EACPvD,SAAU,SAACV,GAAD,OAAOgF,EAAQhF,EAAEW,OAAOnG,QAClCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,yDAAf,oEACA,wBAAQA,MAAO,iCAAf,4CACA,wBAAQA,MAAO,GAAf,kGAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0K,EACPxE,SAAU,SAACV,GAAD,OAAOmF,EAAcnF,EAAEW,OAAOnG,QACxCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,GAAf,8GAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,4CACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0J,EACPxD,SAAU,SAACV,GAAD,OAAOiF,EAAWjF,EAAEW,OAAOnG,QACrCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,2BAAf,sCACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,6CAAf,wDACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,GAAf,oHAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO4K,EACP1E,SAAU,kBAAM2E,GAAaD,IAC7BnE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,gCACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO8K,EACP5E,SAAU,kBAAM6E,GAAWD,IAC3BrE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,kCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOgL,EACP9E,SAAU,kBAAM+E,GAAeD,IAC/BvE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOkL,EACPhF,SAAU,kBAAMiF,GAAYD,IAC5BzE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,cAAC0F,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOoL,EACPe,IAAK,IAAInN,KAAK,uBACdgK,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO6F,EAAgB7F,EAAE8G,OACjCC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAACyF,OAAQ,aAGpB,cAACxG,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOsL,EACPa,IAAK,IAAInN,KAAK,cAAgBoM,GAC9BpC,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO+F,EAAc/F,EAAE8G,OAC/BC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAAEyF,OAAQ,aAGrB,eAACxG,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,oEACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOwL,EACPtF,SAAU,SAACV,GAAD,OAAOiG,EAAcjG,EAAEW,OAAOnG,QACxCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,4IAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,kDACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0L,GACPxF,SAAU,SAACV,GAAD,OAAOmG,GAAYnG,EAAEW,OAAOnG,QACtCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,0HAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOqK,GACPnE,SAAU,SAACV,GAAD,OAAOoG,GAAWpG,EAAEW,OAAOnG,QACrCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,qBAAf,gCACA,wBAAQA,MAAO,GAAf,sFAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,cAACoC,GAAA,EAAKK,QAAN,CACI3F,KAAK,OACL6F,YAAY,6CACZjG,MAAOsK,GACPpE,SAAU,SAACV,GAAD,OAAOqG,GAAWrG,EAAEW,OAAOnG,aAI7C,cAACoG,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAAKtF,UAAU,OAA5D,mC,aCzThBqJ,EAAQ,IANR7N,G,GAAAA,aACA8N,G,GAAAA,YACA3N,G,GAAAA,WACA4N,G,GAAAA,UACAC,G,GAAAA,WACAC,G,GAAAA,QAIEC,GAAW,WAAyB,IAAxBC,EAAuB,uDAAf,IAAIjO,KACtBgC,EAAO4L,GAAYE,GAAWG,EAAO,IAEzC,OAAO,WACH,IAAMC,EAAO,YAAIC,MAAM,IAAIlM,KAAI,SAACmM,EAAG5E,GAAJ,OAAUuE,GAAQ/L,EAAMwH,MAEvD,OADAxH,EAAO+L,GAAQG,EAAK,GAAI,GACjBA,IAIFG,GAAY,WAAyB,IAAxBJ,EAAuB,uDAAf,IAAIjO,KAC9BsO,EAAQ,GACRtM,EAAOiM,EAELM,EAAiB,SAACC,GACpB,OAAOA,EAAMA,EAAM/E,OAAS,GAAG,IAGnC,OAAO,WACH,IAAMgF,EAAgBT,GAASlO,GAAakC,IACtC0M,EAAUZ,GAAWD,GAAU5N,GAAW+B,KAGhD,IAFAsM,EAAMpJ,KAAKuJ,KAEJF,EAAeD,GAASI,GAC3BJ,EAAMpJ,KAAKuJ,KAGf,IAAID,EAAQF,EAIZ,OAHAA,EAAQ,GACRtM,EAAO+L,GAAQQ,EAAeC,GAAQ,GAE/BA,ICwDAG,OArFf,YAAiD,IAAnB3J,EAAkB,EAAlBA,QAAS4J,EAAS,EAATA,MAG7BC,EAAUD,EAAME,OAAOpK,GAHe,EAIlBkB,mBAAS,IAJS,mBAIrCyE,EAJqC,KAI9B0E,EAJ8B,KAOpCtQ,EADW8C,IACX9C,SAGFuQ,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU,IAAIrO,KAAK+J,OAAOM,EAAMX,eAAhC2E,GAwBd,OArBApJ,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAOWwQ,EAPZ,yCAOH,+BAAAxM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIsL,EADJ,KAEnBnM,GAHR,gBACYI,EADZ,EACYA,KAIRiM,EAASjM,GALb,2CAPG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAU3C2L,SAfAjK,EAAQE,KAAK,YAiBlB,CAACzG,EAAUuG,EAAS4J,IAGnB,gCACI,cAAC,QAAD,CAAMjK,GAAG,WAAWL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAA9D,iCAGA,oBAAI1I,UAAU,MAAd,4CACC+F,EAAM3K,YACP,sBAAK4E,UAAU,cAAf,UACI,qBAAImD,MAAO,CAACyH,aAAa,YAAarH,QAAQ,gBAA9C,UAAiEyG,EAAM,GAAG,GAAGtF,cAA7E,IAA6FsF,EAAM,GAAG,GAAGrF,WAAa,KAEtH,8BACI,cAAC7D,GAAA,EAAD,CAAKd,UAAU,mBAAf,SACKgK,EAAMrM,KAAI,SAACiM,GAAD,OACP,cAAC,IAAMiB,SAAP,UACCjB,EAAKjM,KAAI,SAACF,GAAD,OACN,cAACsD,GAAA,EAAD,CAAaf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAA9D,SAEI,eAACC,GAAA,EAAD,CAAM7H,MAAO,CAACE,MAAO,QAASD,OAAO,SAArC,UACI,eAAC4H,GAAA,EAAK9L,OAAN,WACKzB,EAAEkH,WAAa,EADpB,MAC0BlH,EAAEoH,UAD5B,KAC0C6F,EAAKjN,EAAEwN,UADjD,OAGA,cAACD,GAAA,EAAKE,KAAN,UACKnF,EAAM3K,WAAWuC,KAAI,SAACL,GAAD,OAClB,8BACKA,EAAKI,OAASgI,aAAOjI,EAAG,eACrB,gCACI,cAACuN,GAAA,EAAKG,MAAN,CAAYhI,MAAO,CAACqC,MAAO,WAA3B,SAAuC,+CACvC,eAACwF,GAAA,EAAKI,KAAN,WACK9N,EAAK+N,WAAW1E,UAAU,EAAG,GAC7B,IAFL,IAEW,IACNrJ,EAAKgO,SAAS3E,UAAU,EAAG,UAPlCrJ,EAAK0I,cARrBvI,OAFOmM,iBCoFlC2B,OAvIf,YAAmD,IAc1BC,EAdMC,EAAmB,EAAnBA,UAAW/N,EAAQ,EAARA,KAAQ,EAGhB4D,oBAAS,GAHO,mBAGtCoC,EAHsC,KAG9BgI,EAH8B,OAIZpK,oBAAS,GAJG,mBAItCuC,EAJsC,KAI5B8H,EAJ4B,OAKVrK,mBAAS,IALC,mBAKtCqC,EALsC,KAK3BiI,EAL2B,OAMftK,mBAAS,IANM,mBAMtCsC,EANsC,KAM7BiI,EAN6B,OAOXvK,oBAAS,GAPE,mBAOtCwK,EAPsC,KAO3BC,EAP2B,KAUxC3M,EAAgBrB,IAEdpD,EADayC,IACbzC,QAmCJ,OA5BJgG,qBAAU,WACF8K,GAAaK,GACbJ,EAAUD,EAAUO,SACpBL,EAAYF,EAAUQ,YACtBL,EAAanG,OAAOgG,EAAUJ,YAAY1E,UAAU,EAAE,IACtDkF,EAAWpG,OAAOgG,EAAUH,UAAU3E,UAAU,EAAG,IACnDoF,GAAa,IAETlI,GACA+H,EAAa,SACbC,EAAW,UACJlI,GAAcC,IACrBgI,EAAajR,EAAQ+L,cAAcC,UAAU,EAAE,IAC/CkF,EAAWlR,EAAQiM,YAAYD,UAAU,EAAE,KAI/CjJ,IAASgG,GACTI,GAAgB1E,EAAe1B,GAG/BgG,GAAUhG,GAAQiG,GAAaC,GAC/BH,GAAarE,EAAe1B,EAAMgG,EAAQC,EAAWC,EAASC,KAGnE,CAAEA,EAAUH,EAAQhG,EAAMiG,EAAWC,EAASkI,EAAWnR,EAAS8Q,EAAWrM,IAKxE,mCAEI,cAACS,EAAA,EAAD,CAAWsD,MAAO,CAAEqC,OArCXgG,EAqC+B9H,EApC5C8H,EAAa,aACV,KAmCC,SACI,cAACpJ,GAAA,EAAKE,MAAN,UAWMqB,GAAcC,EAEhB,gCACA,cAACxB,GAAA,EAAKI,MAAN,CAAYxC,UAAW,MAAvB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIkG,GAAG,SACHjM,MAAOgH,EACPd,SAAU,SAACV,GACPwJ,GAAWhI,IAMf1D,UAAW,OACXmD,MAAO,CAACyF,OAAQ,WAXpB,UAaI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,uBAII,cAAC0F,GAAA,EAAKI,MAAN,CAAYxC,UAAW,OAAvB,sCACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOiH,EACPkF,IAAK,IAAInN,KAAK,uBACdgK,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO0J,EAAa1J,EAAE8G,OAC9BkD,SAAUrI,GAAYH,EACtBuF,aAAcpF,EACdqF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAAEyF,OAAQ,aAGrB,cAACxG,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,sCACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOkH,EACPiF,IAAK,IAAInN,KAAK,cAAgBiI,GAC9B+B,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO2J,EAAW3J,EAAE8G,OAC5BkD,SAAUrI,GAAYH,EACtBuF,aAAcpF,EACdqF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAAEyF,OAAQ,aAGrB,cAACxG,GAAA,EAAKE,MAAN,CAAYtC,UAAU,OAAOuC,UAAU,oBAAvC,SACI,cAACH,GAAA,EAAK+J,MAAN,CACI5G,UAAW7B,EACX5G,KAAK,WACLsP,MAAM,eACNC,QAASxI,EACTjB,SAAU,kBAAM+I,GAAa9H,IAC7B7D,UAAU,mBA7DA,cAAC,GAAD,WC4FnCsM,OAxJf,YAAgD,IAAnB5L,EAAkB,EAAlBA,QAAS4J,EAAS,EAATA,MAI1BnQ,EADW8C,IACX9C,SAEAiB,EADW0C,IACX1C,WAGFmP,EAAUD,EAAME,OAAOpK,GATc,EAUjBkB,mBAAS,IAVQ,mBAUpCyE,EAVoC,KAU7B0E,EAV6B,OAWbnJ,mBAAS,IAXI,mBAWpCiL,EAXoC,KAW3BC,EAX2B,OAYjBlL,mBAAS,IAZQ,mBAYpC0I,EAZoC,KAY7ByC,EAZ6B,OAabnL,oBAAS,GAbI,mBAapC7G,EAboC,KAa3B+N,EAb2B,KAiBrCkC,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAItClG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAKxGjE,qBAAU,WAEN,GAAKxG,EAEE,CAAC,IAQWwQ,EARZ,yCAQH,+BAAAxM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIsL,EADJ,KAEnBnM,GAHR,gBACYI,EADZ,EACYA,KAIRiM,EAASjM,GACTgO,EAAWhO,EAAK+N,SAChBE,EAAS1C,GAAU,IAAIrO,KAAK+J,OAAOjH,EAAK4G,eAA/B2E,IACTvB,GAAW,GARf,2CARG,qDACGpK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAe3C2L,SApBAjK,EAAQE,KAAK,YAwBlB,CAACzG,EAAUuG,EAAS4J,IAEvB,IAAMrI,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBAEI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SANzB,SAWKV,KAAMmK,IAAN,mCACS8B,EADT,KAEnB,CACI,WAAcnP,EACd,QAAWmR,GAEfnO,GAjBc,kBAWVI,KAQRkC,EAAQE,KAAK,YAnBK,2CAAH,sDAuBnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAA9D,iCAGA,oBAAI1I,UAAU,MAAd,4CAECvF,EAAU,cAAC,GAAD,IAEP,sBAAKuF,UAAU,cAAf,UACI,qBAAImD,MAAO,CAAEyH,aAAc,YAAarH,QAAS,gBAAjD,UACKyG,EAAM,GAAG,GAAGtF,cADjB,IACiCsF,EAAM,GAAG,GAAGrF,WAAa,KAG1D,eAACvC,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACnB,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKgK,EAAMrM,KAAI,SAACiM,EAAM1E,GAAP,OACP,cAAC,IAAM2F,SAAP,UACKjB,EAAKjM,KAAI,SAACD,EAAMgP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKnN,EAAKiH,aAAeqF,EAAM,GAAG,GAAGrF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOhL,UAAU,eAAjB,UACI,eAACgL,GAAA,EAAK9L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD6F,EAAKhN,EAAKuN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CACIxN,KAAM8G,EAAc9G,GACpB+N,UAAW1F,EAAM3K,WAAWoC,MAAK,SAAAmP,GAAO,OAAIA,EAAQjP,OAAS8G,EAAc9G,gBAV9EgP,OAFRxH,QAwB7B,eAACpE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACI,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACmB,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIkG,GAAG,WACHiE,IAAI,IACJjK,YAAY,qKACZjG,MAAO6P,EACP3J,SAAU,SAACV,GAAD,OAAOsK,EAAWtK,EAAEW,OAAOnG,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC8C,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAA7C,yCCtBjBuH,OArHf,YAAyC,IAchBrB,EAdD9K,EAAgB,EAAhBA,QAAShD,EAAO,EAAPA,KAAO,EAEN4D,oBAAS,GAFH,mBAE5BoC,EAF4B,KAEpBgI,EAFoB,OAGFpK,oBAAS,GAHP,mBAG5BuC,EAH4B,KAGlB8H,EAHkB,OAIArK,mBAAS,IAJT,mBAI5BqC,EAJ4B,KAIjBiI,EAJiB,OAKNtK,mBAAS,IALH,mBAK7BsC,EAL6B,KAKpBiI,EALoB,KAU5BlR,EADayC,IACbzC,QACFyE,EAAgBrB,IAOhB+O,EAAe,SAACtB,GAClB,OAAIA,EAAa,UACV,eAwBP,OArBJ7K,qBAAU,WAEFkD,GACA+H,EAAa,SACbC,EAAW,UACJlI,GAAcC,IACrBgI,EAAajR,EAAQ+L,cAAcC,UAAU,EAAE,IAC/CkF,EAAWlR,EAAQiM,YAAYD,UAAU,EAAE,KAG3CjJ,IAASgG,GACTI,GAAgB1E,EAAe1B,GAG/BgG,GAAUhG,GAAOiG,GAAaC,GAC9BH,GAAarE,EAAe1B,EAAMgG,EAAQC,EAAWC,EAASC,KAGnE,CAACnD,EAASmD,EAAUH,EAAQhG,EAAMiG,EAAWC,EAASjJ,EAASyE,IAK1D,mCAEI,cAACS,EAAA,EAAD,CAAWsD,MAAO,CAACqC,OAlCVgG,EAkC6B9H,EAjC1C8H,EAAa,aACV,KAgCC,SACI,eAACpJ,GAAA,EAAKE,MAAN,WAEI,cAACF,GAAA,EAAKI,MAAN,CAAYxC,UAAW,MAAvB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIkG,GAAG,SACHjM,MAAOgH,EACPd,SAAU,SAACV,GACPwJ,GAAWhI,IAEf1D,UAAW,OACXmD,MAAO,CAACyF,OAAQ,WAPpB,UASI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,uBAGFiH,GAAcC,EACZ,gCACI,cAACxB,GAAA,EAAKI,MAAN,CAAYxC,UAAW,OAAvB,sCACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOiH,EACPkF,IAAK,IAAInN,KAAK,uBACdgK,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO0J,EAAa1J,EAAE8G,OAC9BkD,SAAUrI,GAAYH,EACtBuF,aAAcpF,EACdqF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAACyF,OAAQkE,EAAapJ,MAGjC,cAACtB,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,sCACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOkH,EACPiF,IAAK,IAAInN,KAAK,cAAeiI,GAC7B+B,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO2J,EAAW3J,EAAE8G,OAC5BkD,SAAUrI,GAAYH,EACtBuF,aAAcpF,EACdqF,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAACyF,OAAQkE,EAAapJ,MAGjC,cAACtB,GAAA,EAAKE,MAAN,CAAYtC,UAAU,OAAOuC,UAAU,oBAAvC,SACI,cAACH,GAAA,EAAK+J,MAAN,CACI5G,UAAW7B,EACX5G,KAAK,WACLsP,MAAM,eACNxJ,SAAU,kBAAM+I,GAAa9H,IAC7B7D,UAAU,mBAxCA,cAAC,GAAD,YCgEnC+M,OA5Hf,YAAyC,IAAZrM,EAAW,EAAXA,QAIjBvG,EADW8C,IACX9C,SAEAQ,EADayC,IACbzC,QACF4J,EAAazG,IACX1C,EAAoCmJ,EAApCnJ,WAAYE,EAAwBiJ,EAAxBjJ,OAAQD,EAAgBkJ,EAAhBlJ,YARQ,EAWNiG,mBAAS,IAXH,mBAW7BiL,EAX6B,KAWpBC,EAXoB,KAc9B9B,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAUzO,EAAO,GAAjByO,GAERvF,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAIxGjE,qBAAU,WACDxG,EAEMkB,GACPqF,EAAQE,KAAK,YAFbF,EAAQE,KAAK,YAKlB,CAACzG,EAAUuG,IAEd,IAAMuB,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBAEI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SANzB,SAUKV,KAAMC,KAAN,4BAEnB,CACI,WAAcnD,EACd,QAAWT,EAAQyL,QACnB,YAAe5B,EAAclJ,EAAO,IACpC,UAAakJ,EAAclJ,EAAO,IAClC,QAAWiR,EACX,aAAe,GAEnBnO,GApBc,kBAUVI,KAYRkC,EAAQE,KAAK,YAtBK,2CAAH,sDA0BnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAG,WAAWL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAA9D,iCAGA,oBAAI1I,UAAU,MAAd,wDAEA,sBAAKA,UAAU,cAAf,UACI,qBAAImD,MAAO,CAAEyH,aAAc,YAAarH,QAAS,gBAAjD,UACKyG,EAAM,GAAG,GAAGtF,cADjB,IACiCsF,EAAM,GAAG,GAAGrF,WAAa,KAG1D,eAACvC,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACnB,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKgK,EAAMrM,KAAI,SAACiM,EAAM1E,GAAP,OACP,cAAC,IAAM2F,SAAP,UACKjB,EAAKjM,KAAI,SAACD,EAAMgP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKnN,EAAKiH,aAAeqF,EAAM,GAAG,GAAGrF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOhL,UAAU,eAAjB,UACI,eAACgL,GAAA,EAAK9L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD6F,EAAKhN,EAAKuN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CAAexN,KAAM8G,EAAc9G,aARlCgP,OAFRxH,QAqB7B,eAACpE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACQ,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACmB,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIkG,GAAG,WACHiE,IAAI,IACJjK,YAAY,qKACZjG,MAAO6P,EACP3J,SAAU,SAACV,GAAD,OAAOsK,EAAWtK,EAAEW,OAAOnG,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC8C,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAA7C,yC,SCiKjB0H,OA7Qf,YAAyC,IAAZtM,EAAW,EAAXA,QAAW,EAERY,mBAAS,IAFD,mBAE7B6C,EAF6B,KAErBC,EAFqB,KAM5BjK,EADW8C,IACX9C,SACFgF,EAAgBjC,IAChBV,EAAWa,IACXgH,EAAejH,IACbzC,EAAqC0J,EAArC1J,QAAkB2J,EAAmBD,EAA5B5J,QACX8J,EAAazG,IACXxC,EAA2CiJ,EAA3CjJ,OAAQM,EAAmC2I,EAAnC3I,SAAUP,EAAyBkJ,EAAzBlJ,YAAaZ,EAAY8J,EAAZ9J,QACjC2E,EAAgBrB,IAEhByG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAsDxG,OAnDAjE,qBAAU,WAMN,GALAmE,OAAOC,iBAAiB,YAAY,SAAC7C,GACV,QAAnBxB,EAAQ7D,QACR6D,EAAQsE,GAAG,MAGd7K,EAIE,CAAC,IASW8K,EATZ,yCASH,+BAAA9G,EAAA,6DACIiB,EAAc,CAACtC,KAAMlC,IADzB,SAE2B0D,KAAMW,IAAN,wBAEnBb,GAJR,gBAEYI,EAFZ,EAEYA,KAIR4F,EAAU5F,GAEVY,EAAc,CAACtC,KAAMjC,IARzB,2CATG,qDACHiE,GAAWtC,EAAUrC,GAErB,IAAMiE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAa3CiG,QAvBW,CAGXjH,GAFkB,iBACG,WACUmB,MAuBpC,CAACuB,EAASvG,EAAUkB,EAAaC,EAAQkB,EAAU2C,EAAeC,IAoBjE,gCACI,2DAAUzE,EAAQwF,KAAlB,mBACA,eAACW,GAAA,EAAD,CAAKd,UAAU,OAAf,UAGKvF,EAAU,cAAC,GAAD,IAEP,eAACsG,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,GAAIrF,UAAU,OAA9B,UACI,gEACA,eAACH,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,cAAC,gBAAD,CAAeK,GAAG,qBAAqBL,UAAU,wBAAjD,SACI,eAAC8C,GAAA,EAAD,CAAQ9C,UAAU,SAASL,QAAQ,kBAAkB4F,SAAUlK,GAAgB,IAAIK,KAASE,EAA5F,sFAAoH,oBAAGoE,UAAU,MAAb,UAAoBwE,EAAclJ,EAAO,IAAzC,MAAkDkJ,EAAclJ,EAAO,YAE/L,oBAAG0E,UAAU,YAAb,4CAAgC3E,EAAc,mBAAG8H,MAAO,CAACqC,MAAO,QAAlB,sCAAsC,mBAAGrC,MAAO,CAACqC,MAAO,OAAlB,mCACpF,oBAAGxF,UAAU,YAAb,4CAAgCyF,OAAOC,aAAO9J,EAAU,uBAAxD,oBACGP,GAAgB,IAAIK,KAASE,GAC5B,cAAC,GAAD,CAAS+D,QAAQ,SAAjB,+KAKR,oBAAIK,UAAU,OAAd,4CACmB,IAAlBmE,EAAOgB,OAAe,cAAC,GAAD,CAASxF,QAAQ,OAAjB,oEACnB,eAACgG,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAAC9F,UAAU,kBAA1C,UACI,gCACI,+BACI,oCACA,wCACA,wCACA,4BAGR,gCACKmE,EAAOxG,KAAI,SAACoI,GAAD,OACR,+BACI,6BAAKA,EAAMC,MACX,+BAAKD,EAAMX,aAAX,IAA0B,IAA1B,MAAkC,IAAKW,EAAME,cAC7C,6BAAKF,EAAMG,aAAe,eAAO,uBACjC,6BACMH,EAAMG,aACJ,cAAC,gBAAD,CAAe7F,GAAE,+BAA0B0F,EAAMC,KAAjD,SACI,cAAClD,GAAA,EAAD,CAAQ9C,UAAU,SAASL,QAAQ,kBAAnC,4BAGJ,cAAC,gBAAD,CAAeU,GAAE,8BAAyB0F,EAAMC,KAAhD,SACI,cAAClD,GAAA,EAAD,CAAQ9C,UAAU,SAASL,QAAQ,eAAnC,gCAXPoG,EAAMC,gBA0BtC1B,EAAiB,cAAC,GAAD,IACd,eAACvD,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,GAAIrF,UAAU,OAA9B,UAEA,eAACc,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKE,GAAK,GAAIoE,GAAI,GAAIrE,GAAI,GAA1B,SACI,wEAEJ,cAACD,GAAA,EAAD,CAAKE,GAAI,EAAGoE,GAAI,EAAGrE,GAAI,EAAGhB,UAAU,4BAApC,SACI,cAAC,gBAAD,CAAeK,GAAI,uBAAnB,SACQ,cAACyC,GAAA,EAAD,CAAQnD,QAAQ,oBAAmBK,UAAU,SAA7C,iCAOZ,eAAC2F,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACR,KAAK,KAAKtF,UAAU,SAApD,UACI,gCACI,+BACI,qCACA,uCACA,8CAGR,kCACI,+BACI,oCACA,6BAAKrF,EAAQqL,MACb,0BAEJ,+BACI,8CACA,6BAAKrL,EAAQwF,OACb,0BAEJ,+BACI,8CACA,6BAAKxF,EAAQwL,OACb,0BAEJ,+BACI,gEACA,6BAAKxL,EAAQyL,UACb,0BAEJ,+BACI,0DACA,6BAAKzL,EAAQ0L,oBACb,0BAEJ,+BACI,oDACA,6BAAK1L,EAAQ2L,UAAY,qBAAQ,iBACjC,0BAEJ,+BACI,0DACA,6BAAK3L,EAAQ4L,cAAgB,SAAM,iBACnC,0BAEJ,+BACI,sDACA,6BAAK5L,EAAQ6L,mBAAqB,SAAM,iBACxC,0BAEJ,+BACI,8CACA,6BAAK7L,EAAQ8L,eAAiB,SAAM,iBACpC,0BAEJ,+BACI,uEACA,mCAAM9L,EAAQ+L,cAAcC,UAAU,EAAE,MACxC,6GAEJ,+BACI,uEACA,mCAAMhM,EAAQiM,YAAYD,UAAU,EAAE,MACtC,6GAEJ,+BACI,yFACA,yCAAOhM,EAAQkM,0BACf,6GAEJ,+BACI,uEACA,mCAAMlM,EAAQmM,qBAAd,OACA,6GAEJ,+BACI,2DACA,mCAAMnM,EAAQoM,WACd,0BAEJ,+BACI,2DACA,mCAAMpM,EAAQqM,WACd,gIAWxB,sFAEA,eAACnH,EAAA,EAAD,CAAWG,UAAU,SAArB,UACI,eAAC,GAAD,WAEA,eAACc,GAAA,EAAD,CAAKd,UAAU,MAAf,UACI,mBAAGA,UAAU,OAAb,sCACA,cAAC8C,GAAA,EAAD,CAAQvC,QAjME,WACtBwD,GAAmB3E,GAAe,IAgMcO,QAAQ,eAAe4F,SAAUlK,EAArE,sCACA,cAACyH,GAAA,EAAD,CAAQvC,QA/LG,WACvBwD,GAAmB3E,GAAe,IA8LeO,QAAQ,iBAAiB4F,UAAWlK,EAAzE,mCAEJ,eAACyF,GAAA,EAAD,CAAKd,UAAU,MAAf,UACI,mBAAGA,UAAU,OAAb,sCAEI,cAAC8C,GAAA,EAAD,CAAQvC,QAjMF,WACtByD,GAAa5E,EAAevD,YAAQN,YAASI,YAAW,IAAID,OAAU,MAgMlBiE,QAAQ,oBAA5C,4CACA,cAACmD,GAAA,EAAD,CAAQvC,QA5LN,WAClByD,GAAa5E,EAAe7D,YAASI,YAAW,IAAID,SA2LJiE,QAAQ,oBAAxC,gCACA,cAACmD,GAAA,EAAD,CAAQvC,QAhMJ,WACpByD,GAAa5E,EAAeoK,aAAWhO,YAAa,IAAIE,SA+LNiE,QAAQ,oBAA1C,sCAIR,eAAC,GAAD,CAASA,QAAQ,OAAjB,+OAEI,uBAFJ,uVCvQDsN,OARf,WACI,OACI,cAAC,QAAD,CAAM5M,GAAG,gBAAgBL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAAnE,qBCoUOwE,OA7Tf,YAA6C,IAAXxM,EAAU,EAAVA,QAAU,EAEhBY,mBAAS,IAFO,mBAEjCnB,EAFiC,KAE3BoB,EAF2B,OAGhBD,mBAAS,IAHO,mBAGjC6E,EAHiC,KAG3Be,EAH2B,OAIV5F,mBAAS,IAJC,mBAIjC8E,EAJiC,KAIxBe,EAJwB,OAKJ7F,mBAAS,IALL,mBAKjC8F,EALiC,KAKrBC,EALqB,OAMR/F,oBAAS,GAND,mBAMjCgG,EANiC,KAMvBC,EANuB,OAOZjG,oBAAS,GAPG,mBAOjCkG,EAPiC,KAOzBC,EAPyB,OAQJnG,oBAAS,GARL,mBAQjCoG,EARiC,KAQrBC,EARqB,OASVrG,oBAAS,GATC,mBASjCsG,EATiC,KASxBC,EATwB,OAUAvG,mBAAS,IAVT,mBAUjCwG,EAViC,KAUnBC,EAVmB,OAWJzG,mBAAS,IAXL,mBAWjC0G,EAXiC,KAWrBC,EAXqB,OAYJ3G,mBAAS,IAZL,mBAYjC4G,EAZiC,KAYrBC,EAZqB,OAaR7G,mBAAS,IAbD,mBAajC8G,GAbiC,KAavBC,GAbuB,QAcV/G,mBAAS,IAdC,qBAcjCyF,GAdiC,MAcxBuB,GAdwB,SAeVhH,mBAAS,IAfC,qBAejC0F,GAfiC,MAexBuB,GAfwB,SAgBVjH,oBAAS,GAhBC,qBAgBjC7G,GAhBiC,MAgBxB+N,GAhBwB,MAoBjCrO,GADY8C,IACZ9C,SACDqC,GAAWa,IAET1C,GADayC,IACbzC,QAERgG,qBAAU,WACDxG,IAGD2E,GAAWtC,GAAUrC,IAErBQ,GAAQwF,KAAOoB,EAAQ5G,GAAQwF,MAAQoB,EAAQ,oDAC/C5G,GAAQwL,KAAOe,EAAQvM,GAAQwL,MAAQe,EAAQ,IAC/CvM,GAAQ0L,kBAAoBgB,EAAc1M,GAAQ0L,mBAAqBgB,EAAc,IACrF1M,GAAQyL,QAAUe,EAAWxM,GAAQyL,SAAWe,EAAW,IAC3DxM,GAAQ2L,UAAYiB,EAAY5M,GAAQ2L,WAAaiB,GAAY,GACjE5M,GAAQ4L,cAAgBkB,EAAU9M,GAAQ4L,eAAiBkB,GAAU,GACrE9M,GAAQ6L,mBAAqBmB,EAAchN,GAAQ6L,oBAAsBmB,GAAc,GACvFhN,GAAQ8L,eAAiBoB,EAAWlN,GAAQ8L,gBAAkBoB,GAAW,GACzElN,GAAQ+L,cAAgBqB,EAAgBpN,GAAQ+L,eAAiBqB,EAAgB,IACjFpN,GAAQiM,YAAcqB,EAActN,GAAQiM,aAAeqB,EAAc,IACzEtN,GAAQkM,uBAAyBsB,EAAcxN,GAAQkM,wBAA0BsB,EAAc,GAC/FxN,GAAQmM,qBAAuBuB,GAAY1N,GAAQmM,sBAAwBuB,GAAY,GACvF1N,GAAQoM,QAAUuB,GAAW3N,GAAQoM,SAAWuB,GAAW,IAC3D3N,GAAQqM,QAAUuB,GAAW5N,GAAQqM,SAAWuB,GAAW,IAE3DC,IAAW,IAnBX9H,EAAQE,KAAK,UAsBbkH,GAAiBE,IACjBD,EAAgBpN,GAAQ+L,cAAcC,UAAU,EAAE,IAClDsB,EAActN,GAAQiM,YAAYD,UAAU,EAAE,OAEnD,CAACjG,EAASvG,GAAUqC,KAEvB,IAAMyF,GAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBACI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAc,UAAD,OAAY5E,GAAS6E,SALxB,SASKV,KAAMmK,IAAN,6BAEnB,CACI,KAAQtI,EACR,KAAQgG,EACR,WAAciB,EACd,QAAWhB,EACX,SAAYkB,EACZ,OAAUE,EACV,WAAcE,EACd,QAAWE,EACX,aAAgBE,EAChB,WAAcE,EACd,WAAcE,EACd,SAAYE,GACZ,QAAWrB,GACX,QAAWC,IAEf5I,GA3Bc,kBASVI,KAoBRkC,EAAQE,KAAK,iBA7BK,2CAAH,sDAiCnB,OACI,qCACI,cAAC,GAAD,IAECnG,GAAU,cAAC,GAAD,IACX,cAAC,GAAD,UACI,eAAC2H,GAAA,EAAD,CAAMC,SAAUJ,GAAejC,UAAU,aAAzC,UACI,eAACoC,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,cAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACR6C,UAAQ,EACRzI,KAAK,OACL6F,YAAY,iCACZjG,MAAOyD,EACPyC,SAAU,SAACV,GAAD,OAAOX,EAAQW,EAAEW,OAAOnG,aAI1C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOyJ,EACPvD,SAAU,SAACV,GAAD,OAAOgF,EAAQhF,EAAEW,OAAOnG,QAClCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,yDAAf,oEACA,wBAAQA,MAAO,iCAAf,4CACA,wBAAQA,MAAO,GAAf,kGAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0K,EACPxE,SAAU,SAACV,GAAD,OAAOmF,EAAcnF,EAAEW,OAAOnG,QACxCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,qBAAf,gCACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,iEAAf,4EACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,GAAf,8GAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,4CACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0J,EACPxD,SAAU,SAACV,GAAD,OAAOiF,EAAWjF,EAAEW,OAAOnG,QACrCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,2BAAf,sCACA,wBAAQA,MAAO,GAAf,oHAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO4K,EACP1E,SAAU,kBAAM2E,GAAaD,IAC7BnE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,gCACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO8K,EACP5E,SAAU,kBAAM6E,GAAWD,IAC3BrE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,kCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOgL,EACP9E,SAAU,kBAAM+E,GAAeD,IAC/BvE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,0BACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOkL,EACPhF,SAAU,kBAAMiF,GAAYD,IAC5BzE,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,OAAO,EAAf,oBACA,wBAAQA,OAAO,EAAf,gCAIR,cAAC0F,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOoL,EACPe,IAAK,IAAInN,KAAK,uBACdgK,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO6F,EAAgB7F,EAAE8G,OACjCC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAACyF,OAAQ,aAGpB,cAACxG,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,8DACA,cAAC,KAAD,CACI2C,YAAY,6CACZjG,MAAOsL,EACPa,IAAK,IAAInN,KAAK,cAAgBoM,GAC9BpC,OAAO,QACPoD,KAAM,GACNC,OAAQ,SAAC7G,GAAD,OAAO+F,EAAc/F,EAAE8G,OAC/BC,aAAa,EACbC,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjG,MAAO,CAAEyF,OAAQ,aAGrB,eAACxG,GAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAW,YAAvB,oEACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOwL,EACPtF,SAAU,SAACV,GAAD,OAAOiG,EAAcjG,EAAEW,OAAOnG,QACxCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,4IAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,kDACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAO0L,GACPxF,SAAU,SAACV,GAAD,OAAOmG,GAAYnG,EAAEW,OAAOnG,QACtCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,gBACA,wBAAQA,MAAO,EAAf,0HAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,eAACoC,GAAA,EAAKK,QAAN,CACIC,UAAQ,EACRiG,GAAG,SACHjM,MAAOqK,GACPnE,SAAU,SAACV,GAAD,OAAOoG,GAAWpG,EAAEW,OAAOnG,QACrCyG,MAAO,CAACyF,OAAQ,WALpB,UAOI,wBAAQlM,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,eAAf,0BACA,wBAAQA,MAAO,qBAAf,gCACA,wBAAQA,MAAO,GAAf,sFAIR,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,CAAYxC,UAAU,YAAtB,sCACA,cAACoC,GAAA,EAAKK,QAAN,CACI3F,KAAK,OACL6F,YAAY,6CACZjG,MAAOsK,GACPpE,SAAU,SAACV,GAAD,OAAOqG,GAAWrG,EAAEW,OAAOnG,aAI7C,cAACoG,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAAKtF,UAAU,OAA5D,mCC3LLmN,OAxHf,YAA6C,IAAZzM,EAAW,EAAXA,QAIrBvG,EADW8C,IACX9C,SAEAQ,EADayC,IACbzC,QACF4J,EAAazG,IACX1C,EAAoCmJ,EAApCnJ,WAAYE,EAAwBiJ,EAAxBjJ,OAAQD,EAAgBkJ,EAAhBlJ,YARY,EAWViG,mBAAS,IAXC,mBAWjCiL,EAXiC,KAWxBC,EAXwB,KAclC9B,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAUzO,EAAO,GAAjByO,GAERvF,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAIxGjE,qBAAU,WACDxG,EAEMkB,GACPqF,EAAQE,KAAK,iBAFbF,EAAQE,KAAK,YAKlB,CAACzG,EAAUuG,EAASrF,IAEvB,IAAM4G,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBACI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SALzB,SASKV,KAAMC,KAAN,4BAEnB,CACI,WAAcnD,EACd,QAAWT,EAAQyL,QACnB,YAAe5B,EAAclJ,EAAO,IACpC,UAAakJ,EAAclJ,EAAO,IAClC,QAAWiR,EACX,aAAe,GAEnBnO,GAnBc,kBASVI,KAYRkC,EAAQE,KAAK,iBArBK,2CAAH,sDAwBnB,OACI,gCACI,cAAC,GAAD,IACA,oBAAIZ,UAAU,MAAd,wDAEA,sBAAKA,UAAU,cAAf,UACI,qBAAImD,MAAO,CAAEyH,aAAc,YAAarH,QAAS,gBAAjD,UACKyG,EAAM,GAAG,GAAGtF,cADjB,IACiCsF,EAAM,GAAG,GAAGrF,WAAa,KAG1D,eAACvC,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACnB,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKgK,EAAMrM,KAAI,SAACiM,EAAM1E,GAAP,OACP,cAAC,IAAM2F,SAAP,UACKjB,EAAKjM,KAAI,SAACD,EAAMgP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKnN,EAAKiH,aAAeqF,EAAM,GAAG,GAAGrF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOhL,UAAU,eAAjB,UACI,eAACgL,GAAA,EAAK9L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD6F,EAAKhN,EAAKuN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CAAexN,KAAM8G,EAAc9G,aARlCgP,OAFRxH,QAqB7B,eAACpE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACQ,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACmB,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIkG,GAAG,WACHiE,IAAI,IACJjK,YAAY,qKACZjG,MAAO6P,EACP3J,SAAU,SAACV,GAAD,OAAOsK,EAAWtK,EAAEW,OAAOnG,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC8C,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAA7C,yCCwCjB8H,OAhJf,YAAoD,IAAnB1M,EAAkB,EAAlBA,QAAS4J,EAAS,EAATA,MAI9BnQ,EADW8C,IACX9C,SAEAiB,EADW0C,IACX1C,WAGFmP,EAAUD,EAAME,OAAOpK,GATkB,EAUrBkB,mBAAS,IAVY,mBAUxCyE,EAVwC,KAUjC0E,EAViC,OAWjBnJ,mBAAS,IAXQ,mBAWxCiL,EAXwC,KAW/BC,EAX+B,OAYrBlL,mBAAS,IAZY,mBAYxC0I,EAZwC,KAYjCyC,EAZiC,OAajBnL,oBAAS,GAbQ,mBAaxC7G,EAbwC,KAa/B+N,EAb+B,KAiBzCkC,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAItClG,EAAgB,WAAsB,IAArBC,EAAoB,uDAAf,IAAI/I,KAC5B,OAAO+I,EAAGC,cAAgB,KAAO,KAAKD,EAAGE,WAAW,IAAIC,OAAO,GAAK,KAAO,IAAIH,EAAGI,WAAWD,OAAO,IAKxGjE,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAQWwQ,EARZ,yCAQH,+BAAAxM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIsL,EADJ,KAEnBnM,GAHR,gBACYI,EADZ,EACYA,KAIRiM,EAASjM,GACTgO,EAAWhO,EAAK+N,SAChBE,EAAS1C,GAAU,IAAIrO,KAAK+J,OAAOjH,EAAK4G,eAA/B2E,IACTvB,GAAW,GARf,2CARG,qDACGpK,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAc3C2L,SAnBAjK,EAAQE,KAAK,YAuBlB,CAACzG,EAAUuG,EAAS4J,EAAOC,IAE9B,IAAMtI,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBACI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SALzB,SAQKV,KAAMmK,IAAN,mCACS8B,EADT,KAEnB,CACI,WAAcnP,EACd,QAAWmR,GAEfnO,GAdc,kBAQVI,KAQRkC,EAAQE,KAAK,iBAhBK,2CAAH,sDAmBnB,OACI,gCACI,cAAC,GAAD,IACA,oBAAIZ,UAAU,MAAd,4CAECvF,EAAU,cAAC,GAAD,IAEP,sBAAKuF,UAAU,cAAf,UACI,qBAAImD,MAAO,CAAEyH,aAAc,YAAarH,QAAS,gBAAjD,UACKyG,EAAM,GAAG,GAAGtF,cADjB,IACiCsF,EAAM,GAAG,GAAGrF,WAAa,KAG1D,eAACvC,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UAEI,cAACnB,GAAA,EAAD,CAAKd,UAAU,cAAf,SACKgK,EAAMrM,KAAI,SAACiM,EAAM1E,GAAP,OACP,cAAC,IAAM2F,SAAP,UACKjB,EAAKjM,KAAI,SAACD,EAAMgP,GAAP,OACN,cAAC,IAAM7B,SAAP,UACKnN,EAAKiH,aAAeqF,EAAM,GAAG,GAAGrF,YAC7B,cAAC5D,GAAA,EAAD,CAAKf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAAtD,SACI,eAACC,GAAA,EAAD,CAAOhL,UAAU,eAAjB,UACI,eAACgL,GAAA,EAAK9L,OAAN,WACKxB,EAAKiH,WAAa,EADvB,MAC6BjH,EAAKmH,UADlC,KACgD6F,EAAKhN,EAAKuN,UAD1D,OAGA,cAACD,GAAA,EAAKE,KAAN,UACI,cAAC,GAAD,CACIxN,KAAM8G,EAAc9G,GACpB+N,UAAW1F,EAAM3K,WAAWoC,MAAK,SAAAmP,GAAO,OAAIA,EAAQjP,OAAS8G,EAAc9G,gBAV9EgP,OAFRxH,QAwB7B,eAACpE,GAAA,EAAD,CAAKd,UAAU,WAAf,UACI,cAACe,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACmB,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,2BACA,cAACJ,GAAA,EAAKK,QAAN,CACIkG,GAAG,WACHiE,IAAI,IACJjK,YAAY,qKACZjG,MAAO6P,EACP3J,SAAU,SAACV,GAAD,OAAOsK,EAAWtK,EAAEW,OAAOnG,eAKjD,cAACqE,GAAA,EAAD,CAAKE,GAAI,EAAGjB,UAAU,oBAAtB,SACI,cAAC8C,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU2F,KAAK,KAA7C,yCC7CjB+H,OApFf,YAAqD,IAAnB3M,EAAkB,EAAlBA,QAAS4J,EAAS,EAATA,MAGjCC,EAAUD,EAAME,OAAOpK,GAHmB,EAItBkB,mBAAS,IAJa,mBAIzCyE,EAJyC,KAIlC0E,EAJkC,KAOxCtQ,EADW8C,IACX9C,SAGFuQ,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACtCV,EAAQD,GAAU,IAAIrO,KAAK+J,OAAOM,EAAMX,eAAhC2E,GAwBd,OArBApJ,qBAAU,WACN,GAAKxG,EAEE,CAAC,IAOWwQ,EAPZ,yCAOH,+BAAAxM,EAAA,sEAC2BG,KAAMW,IAAN,8BACIsL,EADJ,KAEnBnM,GAHR,gBACYI,EADZ,EACYA,KAIRiM,EAASjM,GALb,2CAPG,qDACGJ,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAU3C2L,SAfAjK,EAAQE,KAAK,YAiBlB,CAACzG,EAAUuG,EAAS4J,EAAOC,IAG1B,gCACI,cAAC,GAAD,IAEA,oBAAIvK,UAAU,MAAd,4CACC+F,EAAM3K,YACP,sBAAK4E,UAAU,cAAf,UACI,qBAAImD,MAAO,CAACyH,aAAa,YAAarH,QAAQ,gBAA9C,UAAiEyG,EAAM,GAAG,GAAGtF,cAA7E,IAA6FsF,EAAM,GAAG,GAAGrF,WAAa,KAEtH,8BACI,cAAC7D,GAAA,EAAD,CAAKd,UAAU,mBAAf,SACKgK,EAAMrM,KAAI,SAACiM,GAAD,OACP,cAAC,IAAMiB,SAAP,UACCjB,EAAKjM,KAAI,SAACF,GAAD,OACN,cAACsD,GAAA,EAAD,CAAaf,UAAU,OAAOgB,GAAI,EAAGqE,GAAI,EAAGpE,GAAI,EAAG6J,GAAI,EAAGC,GAAI,EAA9D,SAEI,eAACC,GAAA,EAAD,CAAM7H,MAAO,CAACE,MAAO,QAASD,OAAO,SAArC,UACI,eAAC4H,GAAA,EAAK9L,OAAN,WACKzB,EAAEkH,WAAa,EADpB,MAC0BlH,EAAEoH,UAD5B,KAC0C6F,EAAKjN,EAAEwN,UADjD,OAGA,cAACD,GAAA,EAAKE,KAAN,UACKnF,EAAM3K,WAAWuC,KAAI,SAACL,GAAD,OAClB,8BACKA,EAAKI,OAASgI,aAAOjI,EAAG,eACrB,gCACI,cAACuN,GAAA,EAAKG,MAAN,CAAYhI,MAAO,CAACqC,MAAO,WAA3B,SAAuC,+CACvC,eAACwF,GAAA,EAAKI,KAAN,WACK9N,EAAK+N,WAAW1E,UAAU,EAAG,GAC7B,IAFL,IAEW,IACNrJ,EAAKgO,SAAS3E,UAAU,EAAG,UAPlCrJ,EAAK0I,cARrBvI,OAFOmM,iBC4ClC0D,OA7Ff,YAA0C,IAAZ5M,EAAW,EAAXA,QAAW,EAEXY,mBAAS,IAFE,mBAE9BiM,EAF8B,KAEvBC,EAFuB,OAGKlM,oBAAS,GAHd,mBAG9BmM,EAH8B,KAGfC,EAHe,KAM9BvT,EADY8C,IACZ9C,SAmCP,OAjCAwG,qBAAU,WAQN,GANAmE,OAAOC,iBAAiB,YAAY,SAAC7C,GACV,QAAnBxB,EAAQ7D,QACR6D,EAAQsE,GAAG,MAIf7K,GAA+B,mBAAnBA,EAAS8D,MAA4B,CAAC,IAOnC0P,EAPkC,yCAOjD,+BAAAxP,EAAA,sEAC2BG,KAAMW,IAAN,6BAEnBb,GAHR,gBACYI,EADZ,EACYA,KAIRgP,EAAShP,GACTkP,GAAiB,GANrB,2CAPiD,qDAC3CtP,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAW3C2O,SAEAjN,EAAQE,KAAK,YAElB,CAACF,EAASvG,EAAUsT,IAOnB,gCACI,sEACEF,EACE,eAAC5H,GAAA,EAAD,CAAOC,SAAO,EAACgI,UAAQ,EAAC/H,OAAK,EAACC,YAAU,EAAC9F,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,kDAIR,gCACKuN,EAAM5P,KAAI,SAAAkQ,GAAI,OACX,+BACI,6BAAKA,EAAK7H,MACV,6BAAK6H,EAAK1N,OACV,qCACA,6BAAK0N,EAAKrN,QACN,mBAAGR,UAAU,iBAEb,mBAAGA,UAAU,mBAGjB,+BACI,cAAC,gBAAD,CAAeK,GAAE,eAAUwN,EAAK7H,IAAf,SAAjB,SACI,cAAClD,GAAA,EAAD,CAAQnD,QAAQ,QAAQK,UAAU,cAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAAC8C,GAAA,EAAD,CAAS9C,UAAU,cAAnB,SACI,mBAAGA,UAAU,wBAlBhB6N,EAAK7H,aAdpB,cAAC,GAAD,IAwCV,qBAAKhG,UAAU,OAAf,SACI,cAAC,GAAD,CAASL,QAAQ,SAAjB,kTCmCDmO,OAtHf,YAAiD,IAAnBxD,EAAkB,EAAlBA,MAAO5J,EAAW,EAAXA,QAE3BqN,EAASzD,EAAME,OAAOpK,GAFgB,EAIpBkB,mBAAS,IAJW,mBAIrCnB,EAJqC,KAI/BoB,EAJ+B,OAKlBD,mBAAS,IALS,mBAKrCrD,EALqC,KAK9BuD,EAL8B,OAMdF,oBAAS,GANK,mBAMrCd,EANqC,KAM5BwN,EAN4B,KASrC7T,EADY8C,IACZ9C,SAEPwG,qBAAU,WACAR,GAASlC,GAAQ,yCACnB,iCAAAE,EAAA,6DACUC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAJ/C,SAO2BV,KAAMW,IAAN,qBACL8O,EADK,KAEnB3P,GATR,gBAOYI,EAPZ,EAOYA,KAIR+C,EAAQ/C,EAAK2B,MACbqB,EAAShD,EAAKP,OACd+P,EAAWxP,EAAKgC,SAbpB,2CADmB,oDAgBnByN,KAEL,CAAC9T,EAAUuG,EAASqN,IAEvB,IAAM9L,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBACI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SALzB,SASKV,KAAMmK,IAAN,qCACWsF,EADX,KAEnB,CACI,KAAQ5N,EACR,MAASlC,EACT,QAAWuC,GAEfpC,GAhBc,kBASVI,KASRkC,EAAQE,KAAK,mBAlBK,2CAAH,sDAqBnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAI,uBAAwBL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAA5E,iCAGA,eAAC,GAAD,WACI,kFAEA,eAACtG,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UACI,eAACG,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,6CACA,cAACJ,GAAA,EAAKK,QAAN,CACI3F,KAAK,OACL6F,YAAY,aACZD,UAAQ,EACRhG,MAAOyD,EACPyC,SAAU,SAACV,GAAD,OAAOX,EAAQW,EAAEW,OAAOnG,aAI1C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,+FACA,cAACJ,GAAA,EAAKK,QAAN,CACI3F,KAAK,QACL6F,YAAY,MACZD,UAAQ,OAIhB,eAACN,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,mDACA,cAACJ,GAAA,EAAK+J,MAAN,CACIrP,KAAK,WACL6F,YAAY,WACZjG,MAAO8D,EACP6L,QAAS7L,EACToC,SAAU,SAACV,GAAD,OAAO8L,EAAW9L,EAAEW,OAAOwJ,eAK7C,cAACvJ,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAAU4F,UAAQ,EAAhD,gCAOR,eAAC,GAAD,WACI,qBAAKvF,UAAU,OAAf,SACI,cAAC,GAAD,CAASL,QAAQ,SAAjB,8JAIJ,qBAAKK,UAAU,OAAf,SACI,cAAC,GAAD,CAASL,QAAQ,OAAjB,oXCzFLuO,OAxBf,YAA2C,IAAZxN,EAAW,EAAXA,QAGpBvG,EADY8C,IACZ9C,SAWP,OATAwG,qBAAU,WACFxG,GAA+B,mBAAnBA,EAAS8D,MAErBkQ,QAAQC,IAAI,aAEZ1N,EAAQE,KAAK,YAElB,CAACF,EAASvG,IAGT,gCACI,cAAC,QAAD,CAAMkG,GAAI,gBAAiBL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAArE,iCAGA,0ECqFG2F,OAvGf,YAAsC,IAAZ3N,EAAW,EAAXA,QAAW,EAEPY,mBAAS,IAFF,mBAE1BiM,EAF0B,KAEnBC,EAFmB,OAGSlM,oBAAS,GAHlB,mBAG1BmM,EAH0B,KAGXC,EAHW,KAM1BvT,EADY8C,IACZ9C,SAkDP,OAhDAwG,qBAAU,WAQN,GANAmE,OAAOC,iBAAiB,YAAY,SAAC7C,GACV,QAAnBxB,EAAQ7D,QACR6D,EAAQsE,GAAG,MAIf7K,GAAYA,EAASqG,QAAS,CAAC,IAOhBmN,EAPe,yCAO9B,+BAAAxP,EAAA,sEAC2BG,KAAMW,IAAN,6BAEnBb,GAHR,gBACYI,EADZ,EACYA,KAIRgP,EAAShP,GACTkP,GAAiB,GANrB,2CAP8B,qDACxBtP,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAW3C2O,SAEAjN,EAAQE,KAAK,YAElB,CAACF,EAASvG,EAAUsT,IAsBnB,gCACI,sEACEF,EACE,eAAC5H,GAAA,EAAD,CAAOC,SAAO,EAACgI,UAAQ,EAAC/H,OAAK,EAACC,YAAU,EAAC9F,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,kDAIR,gCACKuN,EAAM5P,KAAI,SAAAkQ,GAAI,OACX,+BACI,6BAAKA,EAAK7H,MACV,6BAAK6H,EAAK1N,OACV,6BAAK0N,EAAK5P,QACV,6BAAK4P,EAAKrN,QACN,mBAAGR,UAAU,iBAEb,mBAAGA,UAAU,mBAGjB,+BACI,cAAC,gBAAD,CAAeK,GAAE,eAAUwN,EAAK7H,IAAf,SAAjB,SACI,cAAClD,GAAA,EAAD,CAAQnD,QAAQ,QAAQK,UAAU,cAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAAC8C,GAAA,EAAD,CAAS9C,UAAU,cAAcO,QAAS,kBArDpD,SAACH,GACnB,GAAI0E,OAAOwJ,QAAP,uDAA4BlO,EAA5B,yFAAiD,CAAC,IAOnCmO,EAPkC,yCAOjD,uBAAApQ,EAAA,sEAC2BG,KAAMkQ,OAAN,sCACYpO,EADZ,KAEnBhC,GAHR,cACYI,KAIRkP,GAAiB,GALrB,2CAPiD,qDAC3CtP,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAU3CuP,KAsCwEE,CAAcZ,EAAK7H,MAAnE,SACI,mBAAGhG,UAAU,wBAlBhB6N,EAAK7H,aAdpB,cAAC,GAAD,QC4DP0I,OAnHf,YAA6C,IAAnBpE,EAAkB,EAAlBA,MAAO5J,EAAW,EAAXA,QAEvBqN,EAASzD,EAAME,OAAOpK,GAFY,EAIhBkB,mBAAS,IAJO,mBAIjCnB,EAJiC,KAI3BoB,EAJ2B,OAKdD,mBAAS,IALK,mBAKjCrD,EALiC,KAK1BuD,EAL0B,OAMVF,oBAAS,GANC,mBAMjCd,EANiC,KAMxBwN,EANwB,KASjC7T,EADY8C,IACZ9C,SAEPwG,qBAAU,WACAR,GAASlC,GAAQ,yCACnB,iCAAAE,EAAA,6DACUC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SAJ/C,SAO2BV,KAAMW,IAAN,qBACL8O,EADK,KAEnB3P,GATR,gBAOYI,EAPZ,EAOYA,KAIR+C,EAAQ/C,EAAK2B,MACbqB,EAAShD,EAAKP,OACd+P,EAAWxP,EAAKgC,SAbpB,2CADmB,oDAgBnByN,KAEL,CAAC9T,EAAUuG,EAASqN,IAEvB,IAAM9L,EAAa,yCAAG,WAAMC,GAAN,kBAAA/D,EAAA,6DAClB+D,EAAEC,iBACI/D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBU,cAAa,iBAAa5E,EAAS6E,SALzB,SASKV,KAAMmK,IAAN,qCACWsF,EADX,KAEnB,CACI,KAAQ5N,EACR,MAASlC,EACT,QAAWuC,GAEfpC,GAhBc,kBASVI,KASRkC,EAAQE,KAAK,mBAlBK,2CAAH,sDAqBnB,OACI,gCACI,cAAC,QAAD,CAAMP,GAAI,kBAAmBL,UAAU,WAAWmD,MAAO,CAAEuF,WAAY,WAAvE,iCAGA,eAAC,GAAD,WACI,kFAEA,eAACtG,GAAA,EAAD,CAAMC,SAAUJ,EAAhB,UACI,eAACG,GAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,6CACA,cAACJ,GAAA,EAAKK,QAAN,CACI3F,KAAK,OACL6F,YAAY,aACZD,UAAQ,EACRhG,MAAOyD,EACPyC,SAAU,SAACV,GAAD,OAAOX,EAAQW,EAAEW,OAAOnG,aAI1C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,+FACA,cAACJ,GAAA,EAAKK,QAAN,CACI3F,KAAK,QACL6F,YAAY,cACZD,UAAQ,EACRhG,MAAOuB,EACP2E,SAAU,SAACV,GAAD,OAAOV,EAASU,EAAEW,OAAOnG,aAI3C,eAAC0F,GAAA,EAAKE,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACH,GAAA,EAAKI,MAAN,mDACA,cAACJ,GAAA,EAAK+J,MAAN,CACIrP,KAAK,WACL6F,YAAY,WACZjG,MAAO8D,EACP6L,QAAS7L,EACToC,SAAU,SAACV,GAAD,OAAO8L,EAAW9L,EAAEW,OAAOwJ,eAK7C,cAACvJ,GAAA,EAAD,CAAQhG,KAAK,SAAS6C,QAAQ,UAA9B,gCAOR,cAAC,GAAD,UACI,qBAAKK,UAAU,OAAf,SACI,cAAC,GAAD,CAASL,QAAQ,OAAjB,mXClCLgP,OAzEf,YAAuC,IAAZjO,EAAW,EAAXA,QAGhBvG,EADY8C,IACZ9C,SAWP,OATAwG,qBAAU,WACFxG,GAAYA,EAASqG,QAErB2N,QAAQC,IAAI,aAEZ1N,EAAQE,KAAK,YAElB,CAACF,EAASvG,IAGT,8BACI,yECqDGyU,OA3Cf,WACE,OACE,cAAC,cAAD,UACE,cAAC5R,EAAD,UACE,cAACa,EAAD,UACE,eAACV,EAAD,WACE,cAAC,GAAD,IACJ,sBAAM6C,UAAU,OAAhB,SACE,eAACH,EAAA,EAAD,WACI,cAAC,KAAD,CAAQgP,KAAK,IAAIC,UAAWrO,GAAYsO,OAAK,IAC7C,cAAC,KAAD,CAAOF,KAAK,YAAYC,UAAW1N,KACnC,cAAC,KAAD,CAAOyN,KAAK,SAASC,UAAWtL,KAChC,cAAC,KAAD,CAAOqL,KAAK,sBAAsBC,UAAWzE,KAE3C,cAAC,KAAD,CAAOwE,KAAK,WAAWC,UAAW5K,KAClC,cAAC,KAAD,CAAO2K,KAAK,kBAAkBC,UAAW7H,KACzC,cAAC,KAAD,CAAO4H,KAAK,eAAeC,UAAWjC,KACtC,cAAC,KAAD,CAAOgC,KAAK,mBAAmBC,UAAWvD,KAC1C,cAAC,KAAD,CAAOsD,KAAK,qBAAqBC,UAAWxC,KAC5C,cAAC,KAAD,CAAOuC,KAAK,iBAAiBC,UAAW/B,KAExC,cAAC,KAAD,CAAO8B,KAAK,gBAAgBC,UAAW9B,KACvC,cAAC,KAAD,CAAO6B,KAAK,uBAAuBC,UAAW5B,KAC9C,cAAC,KAAD,CAAO2B,KAAK,qBAAqBC,UAAWE,KAC5C,cAAC,KAAD,CAAOH,KAAK,0BAA0BC,UAAW1B,KACjD,cAAC,KAAD,CAAOyB,KAAK,2BAA2BC,UAAWzB,KAClD,cAAC,KAAD,CAAOwB,KAAK,wBAAwBC,UAAWxB,KAC/C,cAAC,KAAD,CAAOuB,KAAK,4BAA4BC,UAAWhB,KACnD,cAAC,KAAD,CAAOe,KAAK,wBAAwBC,UAAWZ,KAE/C,cAAC,KAAD,CAAOW,KAAK,kBAAkBC,UAAWT,KACzC,cAAC,KAAD,CAAOQ,KAAK,uBAAuBC,UAAWJ,KAC9C,cAAC,KAAD,CAAOG,KAAK,mBAAmBC,UAAWH,oBCvD3CM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b24fc6ae.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\n\n    ","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n    USER_PROFILE_FAIL,\n    USER_PROFILE_RESET,\n} from '../constants/userConstants'\n\nconst userInfoFromStrage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst profileFromStrage = localStorage.getItem('profile') ?\n    JSON.parse(localStorage.getItem('profile')) : {}\n\n//initial state\nexport const loginInitialState = {\n    userInfo: userInfoFromStrage,\n    error: false,\n    loading: true\n}\nexport const profileInitialState = {\n    profile: profileFromStrage,\n    error: false,\n    loading: true,\n}\n\n//reducer\nexport const userLoginReducer = (state, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo : action.payload}\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: true}\n        case USER_LOGOUT:\n            return { userInfo: null}\n        default:\n            return state\n    }\n}\n\n\n    \nexport const userProfileReducer = (state, action) => {\n    switch (action.type) {\n        case USER_PROFILE_REQUEST:\n            return { ...state, loading: true }\n        case USER_PROFILE_SUCCESS:\n            return { ...state, loading: false, profile : action.payload}\n        case USER_PROFILE_FAIL:\n            return { ...state, loading: false, error: true}\n        case USER_PROFILE_RESET:\n            return profileInitialState\n        default:\n            return state\n    }\n}","export const SHIFT_REQUEST = 'SHIFT_REQUEST'\nexport const SHIFT_SUCCESS = 'SHIFT_SUCCESS'\nexport const SHIFT_ADD_ITEM = 'SHIFT_ADD_ITEM'\nexport const SHIFT_UPDATE_ITEM = 'SHIFT_UPDATE_ITEM'\nexport const SHIFT_REMOVE_ITEM = 'SHIFT_REMOVE_ITEM'\nexport const SHIFT_CHANGE_STATUS = 'SHIFT_CHANGE_STATUS'\nexport const SHIFT_RESET = 'SHIFT_RESET'\nexport const SHIFT_CHANGE_PERIOD = 'SHIFT_CHANGE_PERIOD'","import {\n    SHIFT_REQUEST,\n    SHIFT_SUCCESS,\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_CHANGE_PERIOD,\n    SHIFT_RESET,\n} from '../constants/shiftConstants'\n\nimport { startOfMonth, endOfMonth, subDays, addMonths, endOfDay } from 'date-fns'\n\n\n\n\n//initial state\nexport const shiftInitialState = {\n    shiftItems: [],\n    isSubmitted: false,\n    loading: false,\n    period: [\n        endOfDay(startOfMonth(addMonths(new Date(), 1))),\n        endOfDay(endOfMonth(addMonths(new Date(), 1)))\n    ],\n    deadline: subDays(endOfDay(endOfMonth(new Date())), 10),\n}\n\n//ruducers\nexport const shiftReducer = (state, action) => {\n    switch (action.type) {\n        case SHIFT_REQUEST:\n            return { ...state, loading: true}\n        case SHIFT_SUCCESS:\n            return { ...state, loading: false}\n        case SHIFT_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.shiftItems.find(x => x.date === item.date)\n            if (existItem) {\n                //update\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: state.shiftItems.map(x => x.date === existItem.date ? item : x)\n                }\n            } else {\n                //truly add\n                return {\n                    ...state,\n                    loading: false,\n                    shiftItems: [...state.shiftItems, item]\n                }\n            }\n        case SHIFT_REMOVE_ITEM:\n            return {\n                ...state,\n                loading: false,\n                shiftItems: state.shiftItems.filter(x => x.date !== action.payload)\n            }\n        case SHIFT_CHANGE_STATUS:\n            return {\n                ...state,\n                loading: false,\n                isSubmitted: action.payload\n            }\n        case SHIFT_CHANGE_PERIOD:\n            return {\n                ...state,\n                loading: false,\n                deadline: action.payload\n            }\n        case SHIFT_RESET:\n            return shiftInitialState\n        default:\n            return state\n    }\n}\n","import React, { useReducer } from 'react'\nimport { userLoginReducer, loginInitialState, userProfileReducer, profileInitialState } from './reducers/userReducers'\nimport { shiftReducer, shiftInitialState } from './reducers/shiftReducers'\n\n\nexport const makeStore = (reducer, initialState) => {\n    const storeContext = React.createContext()\n    const dispatchContext = React.createContext()\n\n    const StoreProvider = ({ children }) => {\n        const [store, dispatch] = useReducer(reducer, initialState);\n    \n        return (\n            <dispatchContext.Provider value={dispatch}>\n                <storeContext.Provider value={store}>\n                    { children }\n                </storeContext.Provider>\n            </dispatchContext.Provider>\n        )\n    }\n\n    const useStore = () => {\n      return React.useContext(storeContext);\n    }\n\n    const useDispatch = () => {\n      return React.useContext(dispatchContext);\n    }\n\n    return [StoreProvider, useStore, useDispatch]\n}\n\n\nexport const [LoginProvider, useLoginStore, useLoginDispatch] = makeStore(userLoginReducer, loginInitialState)\nexport const [ProfileProvider, useProfileStore, useProfileDispatch] = makeStore(userProfileReducer, profileInitialState)\nexport const [ShiftProvider, useShiftStore, useShiftDispatch] = makeStore(shiftReducer, shiftInitialState)","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_PROFILE_REQUEST,\n    USER_PROFILE_SUCCESS,\n } from '../constants/userConstants'\n\n\n\nexport const login = async (email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                :error.message,\n        })\n    }\n}\n\n\n\nexport const logout = (loginDispatch, profileDispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('profile')\n    loginDispatch({ type: USER_LOGOUT })\n    // profileDispatch({ type: USER_PROFILE_RESET }) \n}\n\n\nexport const register = async (name, email, password, dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getProfile = async (dispatch, userInfo) => {\n    dispatch({ type: USER_PROFILE_REQUEST })\n    \n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            Authorization : `Bearer ${userInfo.token}`\n        }\n    }\n    const { data } = await axios.get(\n        '/api/users/profile/',\n        config\n    )\n    dispatch({\n        type: USER_PROFILE_SUCCESS,\n        payload: data\n    })\n\n    localStorage.setItem('profile', JSON.stringify(data))\n}","import React from 'react'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useLoginStore, useLoginDispatch, useProfileDispatch, useShiftDispatch, useProfileStore } from '../context'\nimport { logout } from '../actions/userActions'\nimport { SHIFT_RESET } from '../constants/shiftConstants'\nimport { USER_PROFILE_RESET } from '../constants/userConstants'\n\n\nfunction Header() {\n    const state = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const { userInfo } = state\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const {profile} = profileState\n    const profileDispatch = useProfileDispatch()\n    \n\n    const logoutHandler = () => {\n        logout(loginDispatch)\n        shiftDispatch({type: SHIFT_RESET})\n        profileDispatch({ type: USER_PROFILE_RESET })\n    }\n\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' collapseOnSelect>\n                <Container>\n                    <Navbar.Brand>Shift Web</Navbar.Brand>\n                        <Nav className='mr-auto p-1'>\n\n                        {userInfo &&\n                            <NavDropdown title={profile.name} id='username' className='px-4'>\n                                {userInfo.email === 'demo@email.com' ?\n                                    <>\n                                        <LinkContainer to='/demo/profile'>\n                                            <NavDropdown.Item>ホーム</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <LinkContainer to='/login'>\n                                            <NavDropdown.Item onClick={logoutHandler}>ログアウト</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </>\n                                    :\n                                    <>\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>ホーム</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={logoutHandler}>ログアウト</NavDropdown.Item>\n                                    </>\n                                }\n                            </NavDropdown>\n                        }\n\n                        {userInfo && userInfo.isAdmin && (\n                            <NavDropdown title='管理者権限' id='adminmenu'>\n                                <LinkContainer to='/admin/userlist'>\n                                    <NavDropdown.Item>ユーザー管理</NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/admin/shiftlist'>\n                                    <NavDropdown.Item>シフト管理</NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                        )}\n\n                        {userInfo &&\n                            <>\n                            {userInfo.email === 'demo@email.com' &&\n                                <NavDropdown title='管理者権限' id='adminmenu'>\n                                    <LinkContainer to='/demo/admin/userlist'>\n                                        <NavDropdown.Item>ユーザー管理</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/demo/admin/shiftlist'>\n                                        <NavDropdown.Item>シフト管理</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            }\n                            </>\n                        }\n\n                        </Nav>\n                \n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { useLoginStore } from '../context'\n\nfunction HomeScreen({history}) {\n    \n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n       \n        history.push('/login')\n        \n    }, [])\n\n    return (\n        <>\n            <h1>Home Page</h1>\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer( {children} ) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React, {useState, useEffect, useReducer} from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport { Link } from 'react-router-dom'\n\n\nimport axios from 'axios'\n\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\n\nimport { useRegisterStore, useLoginStore, useLoginDispatch } from '../context'\n\nfunction RegisterScreen({history, location}) {\n    //useState\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    const loginState = useLoginStore()\n    const loginDispatch = useLoginDispatch()\n    const {userInfo} = loginState\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    },[history, userInfo])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('パスワードが一致しません')\n        } else {\n            await axios.post(\n                '/api/users/register/',\n                { 'name': name, 'email': email, 'password': password },\n            )\n            login(email, password, loginDispatch)\n        }\n    }\n\n\n\n    return (\n        <FormContainer>\n            <h1>アカウント登録</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name' className='mb-4'>\n                    <Form.Label>名前</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='名前を入力'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email' className='mb-4'>\n                    <Form.Label>メールアドレス</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='メールアドレスを入力'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password' className='mb-4'>\n                    <Form.Label>パスワード</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='パスワードを入力'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm' className='mb-4'>\n                    <Form.Label>パスワード確認</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='パスワードをもう一度入力'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    登録\n                </Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    アカウントをお持ち方：\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        {' '} ログイン\n                    </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '50px',\n                width: '50px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            {/* <span className=\"sr-only\">Loading...</span> */}\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport { Form, Button,Row, Col, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { useLoginStore, useLoginDispatch } from '../context'\n\n\nfunction LoginScreen({history, location}) {\n    // const [state, dispatch] = useUserLoginReducer()\n    const state = useLoginStore()\n    const dispatch = useLoginDispatch()\n    const {userInfo, error} = state\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/profile')\n        }\n    },[history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        login(email, password, dispatch)\n    }\n\n\n    return (\n        <>\n            <FormContainer>\n                <h1>ログイン</h1>\n                \n                {error && <Message variant='danger'>'メールアドレスかパスワードが間違っています'</Message>}\n                \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label className='mb-0'>メールアドレス</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='eメールアドレスを入力'\n                            value={email}\n                            onChange={\n                                (e) => setEmail(e.target.value) \n                            }\n                        ></Form.Control>\n                    </Form.Group>\n\n\n                    <Form.Group controlId='password'>\n                        <Form.Label className='mb-0 mt-3'>パスワード</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='パスワードを入力'\n                            value={password}\n                            onChange={\n                                (e) => setPassword(e.target.value)\n                            }\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' className='mt-2 mb-3'>\n                        ログイン\n                    </Button>\n\n                </Form>\n\n                <Row className=\"py-3\">\n                    <Col>\n                        アカウントをお持ちでない方：\n                        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                            {' '} 登録\n                        </Link>\n                    </Col>\n                </Row>\n\n            </FormContainer>\n\n            <FormContainer>\n                <Message variant='info'>\n                    デモはこちら（ユーザーの登録・ログインをせずに体験できます）\n                    <br></br>\n                    <Link to={'/demo/profile'}>Demoユーザーでログイン</Link>\n                </Message>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default LoginScreen\n","import {\n    SHIFT_ADD_ITEM,\n    SHIFT_REMOVE_ITEM,\n    SHIFT_CHANGE_STATUS,\n    SHIFT_CHANGE_PERIOD,\n} from '../constants/shiftConstants'\n\n\nexport const addShiftItem = (dispatch, date, isWork, startTime, endTime, isAllDay) => {\n    dispatch({\n        type: SHIFT_ADD_ITEM,\n        payload: {\n            date,\n            isWork,\n            startTime,\n            endTime,\n            isAllDay\n        }\n    })\n}\n\nexport const removeShiftItem = (dispatch, date) => {\n    dispatch({\n        type: SHIFT_REMOVE_ITEM,\n        payload: date\n    })\n}\n\nexport const changeSubmitStatus = (dispatch, value) => {\n    dispatch({\n        type: SHIFT_CHANGE_STATUS,\n        payload: value\n    })\n}\n\nexport const changePeriod = (dispatch, time) => {\n    dispatch({\n        type: SHIFT_CHANGE_PERIOD,\n        payload: time\n    })\n}\n","import React, { useEffect, useState, useReducer } from 'react'\nimport { Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore, useProfileDispatch, useProfileStore, useShiftDispatch, useShiftStore} from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { changeSubmitStatus } from '../actions/shiftActions'\nimport { SHIFT_REQUEST, SHIFT_SUCCESS } from '../constants/shiftConstants'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { format } from 'date-fns'\n\nfunction ProfileScreen({ history }) {\n    \n    const [shifts, setShifts] = useState([])\n\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile, loading: profileLoading } = profileState\n    const shiftState = useShiftStore()\n    const { period, deadline, isSubmitted, loading } = shiftState\n    const shiftDispatch = useShiftDispatch()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    useEffect(() => {\n        //for iOS/Safari bfCache\n        window.addEventListener('popstate', (e) => {\n            if (history.action === 'POP') {\n                history.go(0)\n            }\n        })\n\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShifts() {\n                shiftDispatch({type: SHIFT_REQUEST})\n                const { data } = await axios.get(\n                    `/api/shifts/myshifts/`,\n                    config\n                )\n                setShifts(data)\n                \n                for (let i = 0; i < data.length; i++){\n                    if (data[i].period_start === getStringDate(period[0])) {\n                        changeSubmitStatus(shiftDispatch, true)\n                    }\n                }\n                \n                shiftDispatch({type: SHIFT_SUCCESS})\n            }\n            fetchShifts()\n        }\n        \n    }, [history, userInfo, dispatch, shiftDispatch])\n\n    return (\n        <div>\n            <h1>ようこそ {profile.name} さん</h1>\n            <Row className='py-3'>\n                \n\n                {loading ? <Loader />\n                    :\n                    <Col md={5} sm={12} className='py-2'>\n                        <h4>シフト提出</h4>\n                        <Container className='border'>\n                            <LinkContainer to='/shifts/submit' className='d-grid gap-2 my-3 p-1'>\n                                <Button size='lg' variant='primary' disabled={isSubmitted || (new Date() > deadline)}>今月分はこちらから <p className='m-0'>{getStringDate(period[0])} ~ { getStringDate(period[1])}</p></Button>\n                            </LinkContainer>\n                            <p className='my-0 py-0'>提出状態： {isSubmitted ?　<i style={{color: 'blue'}}>提出済み</i> : <i style={{color: 'red'}}>未提出</i>}</p>\n                            <p className='my-0 py-0'>提出期限： {String(format(deadline, \"yyyy-MM-dd' 'HH:mm\"))} まで</p>\n                            {(!isSubmitted && (new Date() > deadline)) &&\n                                <Message variant='danger'>期限内に提出できていません → 担当マネージャーに連絡！</Message>\n                            }\n                        </Container>\n\n                        \n                        <h4 className='mt-5'>シフト管理</h4>\n                        {shifts.length === 0 ? <Message variant='info'>シフトがありません</Message> :\n                            <Table striped hover responsive className='table-sm border' >\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>PERIOD</th>\n                                        <th>STATUS</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {shifts.map((shift) => (\n                                        <tr key={shift._id}>\n                                            <td>{shift._id}</td>\n                                            <td>{shift.period_start} {' '} ~ {' '}{shift.period_end}</td>\n                                            <td>{shift.is_confirmed ? '確定' : '未確定'}</td>\n                                            <td>\n                                                { shift.is_confirmed ? \n                                                    <LinkContainer to={`/shifts/confirm/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-primary'>詳細</Button>\n                                                    </LinkContainer> \n                                                    :\n                                                    <LinkContainer to={`/shifts/update/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-info'>更新</Button>\n                                                    </LinkContainer> \n                                                }\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>          \n                        }\n                        \n                    </Col>\n                }\n\n\n\n                {profileLoading ? <Loader /> :\n                    <Col md={7} sm={12} className='py-2'>\n\n                    <Row>\n                        <Col md ={10} sm={10} xs={10}>\n                            <h4>プロフィール</h4>\n                        </Col>\n                        <Col md={2} sm={2} xs={2} className='m-0 px-0 pb-2 text-center'>\n                            <LinkContainer to={'/update/profile'}>\n                                    <Button variant='outline-secondary'className='btn-sm'>編集</Button>\n                            </LinkContainer>\n                        </Col>\n                    </Row>\n                        \n\n\n                        <Table striped hover responsive size='sm' className='border'>\n                            <thead>\n                                <tr>\n                                    <th>Key</th>\n                                    <th>Value</th>\n                                    <th>Remarks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>{profile._id}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>名前</td>\n                                    <td>{profile.name}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>職務</td>\n                                    <td>{profile.duty}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>セクション</td>\n                                    <td>{profile.section}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>雇用形態</td>\n                                    <td>{profile.employment_status}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>研修中</td>\n                                    <td>{profile.is_rookie ? '研修中' : '修了'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>オープン</td>\n                                    <td>{profile.is_open_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>10時締め</td>\n                                    <td>{profile.is_pre_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>締め</td>\n                                    <td>{profile.is_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 業務開始時間</td>\n                                    <td> {profile.start_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 業務終了時間</td>\n                                    <td> {profile.end_default.substring(0,5)}</td>\n                                    <td>提出時に自動入力される値です</td>\n                                </tr>\n                                <tr>\n                                    <td> 週間希望シフト回数</td>\n                                    <td> 週{profile.desired_times_per_week}</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 希望就労時間</td>\n                                    <td> {profile.desired_working_time}h</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 通勤方法</td>\n                                    <td> {profile.commute}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 最寄り駅</td>\n                                    <td> {profile.station}</td>\n                                    <td> 最短経路が交通費支給額です</td>\n                                </tr>\n                            \n                            </tbody>\n                        </Table>\n                    </Col>\n                } \n\n\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useProfileDispatch, useProfileStore, useLoginStore } from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { Form, Button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\n\n\nfunction ProfileUpdateScreen({history}) {\n    //local states\n    const [name, setName] = useState('')\n    const [duty, setDuty] = useState('')\n    const [section, setSection] = useState('')\n    const [employment, setEmployment] = useState('')\n    const [isRookie, setIsRookie] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [isPreClose, setIsPreClose] = useState(false)\n    const [isClose, setIsClose] = useState(false)\n    const [startDefault, setStartDefault] = useState('')\n    const [endDefault, setEndDefault] = useState('')\n    const [weeklyWork, setWeeklyWork] = useState('')\n    const [workTime, setWorkTime] = useState('')\n    const [commute, setCommute] = useState('')\n    const [station, setStation] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    //global states\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            profile.name ? setName(profile.name) : setName('名前がありません')\n            profile.duty ? setDuty(profile.duty) : setDuty('')\n            profile.employment_status ? setEmployment(profile.employment_status) : setEmployment('')\n            profile.section ? setSection(profile.section) : setSection('')\n            profile.is_rookie ? setIsRookie(profile.is_rookie) : setIsRookie(false)\n            profile.is_open_staff ? setIsOpen(profile.is_open_staff) : setIsOpen(false)\n            profile.is_pre_close_staff ? setIsPreClose(profile.is_pre_close_staff) : setIsPreClose(false)\n            profile.is_close_staff ? setIsClose(profile.is_close_staff) : setIsClose(false)\n            profile.start_default ? setStartDefault(profile.start_default) : setStartDefault('')\n            profile.end_default ? setEndDefault(profile.end_default) : setEndDefault('')\n            profile.desired_times_per_week ? setWeeklyWork(profile.desired_times_per_week) : setWeeklyWork(0)\n            profile.desired_working_time ? setWorkTime(profile.desired_working_time) : setWorkTime(0)\n            profile.commute ? setCommute(profile.commute) : setCommute('')\n            profile.station ? setStation(profile.station) : setStation('')\n\n            setLoading(false)\n        }\n\n        if(!startDefault && !endDefault) {\n            setStartDefault(profile.start_default.substring(0,5))\n            setEndDefault(profile.end_default.substring(0,5))\n        }\n    }, [history, userInfo, dispatch])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n    \n        const { data } = await axios.put(\n            `/api/users/update/profile/`,\n            {\n                \"name\": name,\n                \"duty\": duty,\n                \"employment\": employment,\n                \"section\": section,\n                \"isRookie\": isRookie,\n                \"isOpen\": isOpen,\n                \"isPreClose\": isPreClose,\n                \"isClose\": isClose,\n                \"startDefault\": startDefault,\n                \"endDefault\": endDefault,\n                \"weeklyTime\": weeklyWork,\n                \"workTime\": workTime,\n                \"commute\": commute,\n                \"station\": station\n            },\n            config\n        )\n        history.push('/profile')\n    }\n\n    return (\n        <>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            {loading ? <Loader/> :\n            <FormContainer>\n                <Form onSubmit={submitHandler} className='border p-3'>\n                    <Form.Group controlId='name'>\n                        <Form.Label className='mt-3 mb-0'>名前</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='名前を記入'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='duty'>\n                        <Form.Label className='mt-3 mb-0'>職務</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={duty}\n                            onChange={(e) => setDuty(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'アルバイトリーダー'}>アルバイトリーダー</option>\n                            <option value={'アルバイト'}>アルバイト</option>\n                            <option value={''}>「職務」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='employment'>\n                        <Form.Label className='mt-3 mb-0'>雇用形態</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={employment}\n                            onChange={(e) => setEmployment(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'フリーター（週40時間）'}>フリーター（週40時間）</option>\n                            <option value={'フリーター（週20時間）'}>フリーター（週20時間）</option>\n                            <option value={'学生'}>学生</option>\n                            <option value={''}>「雇用形態」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='section'>\n                        <Form.Label className='mt-3 mb-0'>セクション</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={section}\n                            onChange={(e) => setSection(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'フロント'}>フロント</option>\n                            <option value={'映写'}>映写</option>\n                            <option value={'コンセッション'}>コンセッション</option>\n                            <option value={'ボックス'}>ボックス</option>\n                            <option value={'ショップ'}>ショップ</option>\n                            <option value={''}>「セクション」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isRookie'>\n                        <Form.Label className='mt-3 mb-0'>研修</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isRookie}\n                            onChange={() => setIsRookie(!isRookie)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>研修中</option>\n                            <option value={false}>完了</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isOpen'>\n                        <Form.Label className={'mt-3 mb-0'}>オープン</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isOpen}\n                            onChange={() => setIsOpen(!isOpen)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isPreClose'>\n                        <Form.Label className='mt-3 mb-0'>10時締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isPreClose}\n                            onChange={() => setIsPreClose(!isPreClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isClose'>\n                        <Form.Label className={'mt-3 mb-0'}>締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isClose}\n                            onChange={() => setIsClose(!isClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務開始時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='開始時間を選択'\n                        value={startDefault}\n                        min={new Date('01/01/2021 07:00 AM')}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setStartDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{cursor: 'pointer'}}\n                    ></TimePickerComponent>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務終了時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='終了時間を選択'\n                        value={endDefault}\n                        min={new Date('01/01/2021 ' + startDefault)}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setEndDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{ cursor: 'pointer' }}\n                    ></TimePickerComponent>\n\n                    <Form.Group controlId='weeklyWork'>\n                        <Form.Label className={'mt-3 mb-0'}>週間希望シフト回数</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={weeklyWork}\n                            onChange={(e) => setWeeklyWork(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={1}>1回</option>\n                            <option value={2}>2回</option>\n                            <option value={3}>3回</option>\n                            <option value={4}>4回</option>\n                            <option value={5}>5回</option>\n                            <option value={0}>「週間希望シフト回数」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='workTime'>\n                        <Form.Label className='mt-3 mb-0'>希望就労時間</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={workTime}\n                            onChange={(e) => setWorkTime(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={3}>3h</option>\n                            <option value={4}>4h</option>\n                            <option value={5}>5h</option>\n                            <option value={6}>6h</option>\n                            <option value={7}>7h</option>\n                            <option value={8}>8h</option>\n                            <option value={0}>「希望就労時間」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='commute'>\n                        <Form.Label className='mt-3 mb-0'>通勤方法</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={commute}\n                            onChange={(e) => setCommute(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'電車'}>電車</option>\n                            <option value={'バス'}>バス</option>\n                            <option value={'徒歩'}>徒歩</option>\n                            <option value={'自転車'}>自転車</option>\n                            <option value={''}>「」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='station'>\n                        <Form.Label className='mt-3 mb-0'>最寄り駅</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='最寄り駅を入力'\n                            value={station}\n                            onChange={(e) => setStation(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' size='lg' className='mt-4'>\n                        更新\n                    </Button>\n\n                </Form>\n            </FormContainer>\n            }\n        </>\n    )\n}\n\nexport default ProfileUpdateScreen\n","const {\n    startOfMonth,\n    startOfWeek,\n    endOfMonth,\n    endOfWeek,\n    startOfDay,\n    addDays,\n} = require(\"date-fns\")\n\n\nconst takeWeek = (start = new Date()) => {\n    let date = startOfWeek(startOfDay(start, 1))\n\n    return () => {\n        const week = [...Array(7)].map((_, i) => addDays(date, i))\n        date = addDays(week[6], 1)\n        return week\n    }\n}\n\nexport const takeMonth = (start = new Date()) => {\n    let month = []\n    let date = start\n\n    const lastDayOfRange = (range) => {\n        return range[range.length - 1][6]\n    }\n\n    return () => {\n        const weekGenerator = takeWeek(startOfMonth(date))\n        const endDate = startOfDay(endOfWeek(endOfMonth(date)))\n        month.push(weekGenerator())\n\n        while (lastDayOfRange(month) < endDate) {\n            month.push(weekGenerator())        \n        }\n\n        let range = month\n        month = []\n        date = addDays(lastDayOfRange(range), 1)\n\n        return range\n    }\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore } from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport {format} from 'date-fns'\n\n// import  useMediaQuery  from 'react-response'\n\n\nfunction ShiftConfirmScreen({ history, match }) {\n    \n    //for API\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    \n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(new Date(String(shift.period_start)))()\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n            }\n            fetchShift()\n        }\n    }, [userInfo, history, match])\n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト確認</h1>\n            {shift.shiftItems &&\n            <div className='text-center'> \n                <h4 style={{borderBottom:'1px solid', display:'inline-block'}}>{ month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}</h4>\n                \n                <div>\n                    <Row className='text-center my-4' >\n                        {month.map((week) => (\n                            <React.Fragment key={week}>\n                            {week.map((x) => (\n                                <Col key={x} className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>\n                                    \n                                    <Card style={{width: '11rem', height:'10rem'}}>\n                                        <Card.Header>\n                                            {x.getMonth() + 1} / {x.getDate()} ({ days[x.getDay()]})\n                                        </Card.Header>\n                                        <Card.Body>\n                                            {shift.shiftItems.map((item) => (\n                                                <div key={item._id}>\n                                                    {item.date === format(x, 'yyyy-MM-dd') &&\n                                                        <div>\n                                                            <Card.Title style={{color: '#0405B5'}}><b>出勤</b></Card.Title>\n                                                            <Card.Text>\n                                                                {item.start_time.substring(0, 5)}\n                                                                {' '}~{' '}\n                                                                {item.end_time.substring(0, 5)}\n                                                            </Card.Text>\n                                                        </div>\n                                                    }\n                                                </div>\n                                            ))}\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </React.Fragment>\n                    ))}\n                    </Row>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ShiftConfirmScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport  Loader from './Loader'\nimport { useProfileStore, useShiftDispatch } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem} from '../actions/shiftActions'\n\n\nfunction ShiftItemUpdateForm({ shiftItem, date }) {\n\n    //States    \n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [ endTime, setEndTime] = useState('')\n    const [ isDefault, setIsDefault] = useState(true)\n    \n    //Global States\n    const shiftDispatch = useShiftDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    \n    useEffect(() => {\n        if (shiftItem && isDefault) {\n            setIsWork(shiftItem.is_work) \n            setIsAllDay(shiftItem.is_all_day) \n            setStartTime(String(shiftItem.start_time).substring(0,5))\n            setEndTime(String(shiftItem.end_time).substring(0, 5))\n            setIsDefault(false)\n        } else {\n            if (isAllDay) {\n                setStartTime('07:00')\n                setEndTime('23:30')\n            } else if(!startTime && !endTime) {\n                setStartTime(profile.start_default.substring(0,5))\n                setEndTime(profile.end_default.substring(0,5))\n            }\n        }\n    \n        if (date && !isWork) {\n            removeShiftItem(shiftDispatch, date)\n        }\n        \n        if (isWork && date && startTime && endTime) {\n            addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n        }\n        \n    }, [ isAllDay, isWork, date, startTime, endTime, isDefault, profile, shiftItem, shiftDispatch])\n    \n\n        return (\n            \n            <>\n\n                <Container style={{ color : changeColor(isWork)}}>\n                    <Form.Group >\n                        {/* <Form.Label className={'m-0'}>日付</Form.Label>\n                        <Form.Control\n                            type='date'\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                            className={'mb-3'}\n                            required\n                            // style={{display: 'none'}}\n                            >\n                        </Form.Control> */}\n                        {!startTime && !endTime ? <Loader /> :\n\n                        <div>\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                                // if (e.target.value) {\n                                //     removeShiftItem(shiftDispatch, date)\n                                //     console.log('remove item')\n                                // }\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 ' + startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{ cursor: 'pointer' }}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        checked={isAllDay}\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>  \n                            </div>\n                        }\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemUpdateForm","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemUpdateForm from '../components/ShiftItemUpdateForm'\n\nimport Loader from '../components/Loader'\n\n\nfunction ShiftUpdateScreen({ history, match }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const shiftState = useShiftStore()\n    const { shiftItems } = shiftState\n    \n    //local\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n    const [remarks, setRemarks] = useState([])\n    const [month, setMonth] = useState([])\n    const [loading, setLoading] = useState(true)\n\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    \n\n    //functions\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    \n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            \n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n                setRemarks(data.remarks)\n                setMonth(takeMonth(new Date(String(data.period_start)))())\n                setLoading(false)\n                \n            }        \n            fetchShift()\n        }\n\n        \n    }, [userInfo, history, match])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n    \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n    \n\n        const { data } = await axios.put(\n            `/api/shifts/shift-update/${shiftId}/`,\n            {\n                'shiftItems': shiftItems,\n                'remarks': remarks,\n            },\n            config\n        )\n        history.push('/profile')\n        \n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>シフト更新</h1>\n            \n            {loading ? <Loader /> :\n            \n                <div className='text-center'> \n                    <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                        {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                    </h4>\n\n                    <Form onSubmit={submitHandler}>\n                        \n                        <Row className='my-5 border' >\n                            {month.map((week, i) => (\n                                <React.Fragment key={i}> \n                                    {week.map((date, j) => (\n                                        <React.Fragment key={j}>\n                                            {date.getMonth() === month[0][6].getMonth() &&\n                                                <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                    <Card  className='mx-auto my-2'>\n                                                        <Card.Header>\n                                                            {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                        </Card.Header>\n                                                        <Card.Body >\n                                                            <ShiftItemUpdateForm\n                                                                date={getStringDate(date)}\n                                                                shiftItem={shift.shiftItems.find(element => element.date === getStringDate(date))}\n                                                            />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                        }\n                                        </React.Fragment>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Row>\n\n                        <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form>\n\n                \n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default ShiftUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Container } from 'react-bootstrap'\nimport  Loader from './Loader'\nimport { useProfileStore, useShiftDispatch } from '../context'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\nimport { addShiftItem, removeShiftItem } from '../actions/shiftActions'\n\n\nfunction ShiftItemForm({history, date}) {\n    //States 引数にdate\n    const [ isWork, setIsWork ] = useState(false) \n    const [ isAllDay, setIsAllDay ] = useState(false) \n    const [ startTime, setStartTime ] = useState('')\n    const [endTime, setEndTime] = useState('')\n\n    \n    //Global States\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftDispatch = useShiftDispatch()\n    \n\n    const changeColor = (flag) => {\n        if (flag) return 'dodgerblue'\n        return ''\n    }\n    const chooseCursor = (flag) => {\n        if (flag) return 'pointer'\n        return 'not-allowed'\n    }\n    \n    useEffect(() => {\n\n        if (isAllDay) {\n            setStartTime('07:00')\n            setEndTime('23:30')\n        } else if(!startTime && !endTime) {\n            setStartTime(profile.start_default.substring(0,5))\n            setEndTime(profile.end_default.substring(0,5))\n        }\n\n        if (date && !isWork) {\n            removeShiftItem(shiftDispatch, date)  \n        }\n        \n        if (isWork && date&& startTime && endTime) {\n            addShiftItem(shiftDispatch, date, isWork, startTime, endTime, isAllDay)\n        }\n        \n    }, [history, isAllDay, isWork, date, startTime, endTime, profile, shiftDispatch])\n\n\n        return (\n            \n            <>\n\n                <Container style={{color: changeColor(isWork)}}>\n                    <Form.Group >\n\n                        <Form.Label className={'m-0'}>出欠</Form.Label>\n                        <Form.Control\n                            as='select'\n                            value={isWork}\n                            onChange={(e) => {\n                                setIsWork(!isWork)\n                            }}\n                            className={'mb-3'}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={false}>☓</option>\n                            <option value={true}>○</option>\n                        </Form.Control>\n\n                        {!startTime && !endTime ? <Loader /> :\n                            <div>\n                                <Form.Label className={'mb-0'}>開始時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='開始時間を選択'\n                                    value={startTime}\n                                    min={new Date('01/01/2021 07:00 AM')}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setStartTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n            \n                                <Form.Label className={'mt-3 mb-0'}>終了時間</Form.Label>\n                                <TimePickerComponent\n                                    placeholder='終了時間を選択'\n                                    value={endTime}\n                                    min={new Date('01/01/2021 '+ startTime)}\n                                    format=\"HH:mm\"\n                                    step={30}\n                                    change={(e) => setEndTime(e.text)}\n                                    enabled={!isAllDay && isWork}\n                                    openOnFocus={!isAllDay}\n                                    strictMode={true}\n                                    showClearButton={false}\n                                    allowEdit={false}\n                                    style={{cursor: chooseCursor(isWork)}}\n                                ></TimePickerComponent>\n                                    \n                                <Form.Group className=\"my-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check\n                                        disabled={!isWork}\n                                        type=\"checkbox\"\n                                        label=\"終日\"\n                                        onChange={() => setIsAllDay(!isAllDay)}\n                                        className='text-left'\n                                    />\n                                </Form.Group>\n                            </div>\n                        }\n\n                    </Form.Group>\n                </Container>\n            </>\n    )\n}\n\nexport default ShiftItemForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemForm  from '../components/ShiftItemForm'\n\nimport {  } from '../context'\n\n\n\n\nfunction ShiftSubmitScreen({ history }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const { shiftItems, period, isSubmitted } = shiftState\n\n    //Local States\n    const [remarks, setRemarks] = useState('')\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(period[0])()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else if (isSubmitted) {\n            history.push('/profile')\n        }\n\n    }, [userInfo, history])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n    \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/shifts/shift/create/`,\n            {\n                'shiftItems': shiftItems,\n                'section': profile.section,\n                'periodStart': getStringDate(period[0]),\n                'periodEnd': getStringDate(period[1]),\n                'remarks': remarks,\n                'isSubmitted': true,\n            },\n            config\n        )\n        history.push('/profile')\n        \n    } \n\n    return (\n        <div>\n            <Link to='/profile' className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1 className='p-4'>新規シフト提出</h1>\n            \n            <div className='text-center'> \n                <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                    {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                </h4>\n\n                <Form onSubmit={submitHandler}>\n                    \n                    <Row className='my-5 border' >\n                        {month.map((week, i) => (\n                            <React.Fragment key={i}> \n                                {week.map((date, j) => (\n                                    <React.Fragment key={j}>\n                                        {date.getMonth() === month[0][6].getMonth() &&\n                                            <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                <Card  className='mx-auto my-2'>\n                                                    <Card.Header>\n                                                        {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                    </Card.Header>\n                                                    <Card.Body >    \n                                                        <ShiftItemForm date={getStringDate(date)}/>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                    }\n                                    </React.Fragment>\n                                ))}\n                            </React.Fragment>\n                        ))}\n                    </Row>\n\n                    <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n                </Form>\n\n            \n            </div>\n            \n        </div>\n    )\n}\n//空タグでkey属性をもたせたい場合、Fragmentを使う\n\nexport default ShiftSubmitScreen\n","import React, { useEffect, useState } from 'react'\nimport { Button, Row, Col, Table, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore, useLoginDispatch , useProfileDispatch, useProfileStore, useShiftDispatch, useShiftStore} from '../context'\nimport { getProfile, login } from '../actions/userActions'\nimport { changeSubmitStatus, changePeriod } from '../actions/shiftActions'\nimport { SHIFT_REQUEST, SHIFT_SUCCESS } from '../constants/shiftConstants'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { format, endOfDay, endOfMonth, subDays, startOfMonth, startOfDay } from 'date-fns'\n\nfunction DemoProfileScreen({ history }) {\n    //local\n    const [shifts, setShifts] = useState([])\n\n    //global\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const loginDispatch = useLoginDispatch()\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile, loading: profileLoading } = profileState\n    const shiftState = useShiftStore()\n    const { period, deadline, isSubmitted, loading } = shiftState\n    const shiftDispatch = useShiftDispatch()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    useEffect(() => {\n        window.addEventListener('popstate', (e) => {\n            if (history.action === 'POP') {\n                history.go(0)\n            }\n        })\n        if (!userInfo) {\n            const demoEmail = 'demo@email.com'\n            const demoPassword = 'demo1234'\n            login(demoEmail, demoPassword, loginDispatch)\n        } else {\n            getProfile(dispatch, userInfo)\n\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShifts() {\n                shiftDispatch({type: SHIFT_REQUEST})\n                const { data } = await axios.get(\n                    `/api/shifts/myshifts/`,\n                    config\n                )\n                setShifts(data)\n                \n                shiftDispatch({type: SHIFT_SUCCESS})\n            }\n            fetchShifts()\n        }\n        \n    }, [history, userInfo, isSubmitted, period, dispatch, loginDispatch, shiftDispatch])\n\n//handler functions\n    const isSubmittedToTrue = () => {\n        changeSubmitStatus(shiftDispatch, true)\n    }\n    const isSubmittedToFalse = () => {\n        changeSubmitStatus(shiftDispatch, false)\n    }\n    const deadlineToDefault = () => {\n        changePeriod(shiftDispatch, subDays(endOfDay(endOfMonth(new Date())), 10))\n    }\n    const deadlineToStart = () => {\n        changePeriod(shiftDispatch, startOfDay(startOfMonth(new Date())))\n    }\n    const deadlineToEnd = () => {\n        changePeriod(shiftDispatch, endOfDay(endOfMonth(new Date())))\n    }\n\n    return (\n        <div>\n            <h1>ようこそ {profile.name} さん</h1>\n            <Row className='py-3'>\n                \n\n                {loading ? <Loader />\n                    :\n                    <Col md={5} sm={12} className='py-2'>\n                        <h4>シフト提出</h4>\n                        <Container className='border'>\n                            <LinkContainer to='/demo/shift/submit' className='d-grid gap-2 my-3 p-1'>\n                                <Button className='btn-lg' variant='outline-primary' disabled={isSubmitted || (new Date() > deadline)}>今月の提出分はこちらから <p className='m-0'>{getStringDate(period[0])} ~ { getStringDate(period[1])}</p></Button>\n                            </LinkContainer>\n                            <p className='my-0 py-0'>提出状態： {isSubmitted ?　<i style={{color: 'blue'}}>提出済み</i> : <i style={{color: 'red'}}>未提出</i>}</p>\n                            <p className='my-0 py-0'>提出期限： {String(format(deadline, \"yyyy-MM-dd' 'HH:mm\"))} まで</p>\n                            {(!isSubmitted && (new Date() > deadline)) &&\n                                <Message variant='danger'>期限内に提出できていません → 担当マネージャーに連絡！</Message>\n                            }\n                        </Container>\n\n                        \n                        <h4 className='mt-5'>シフト管理</h4>\n                        {shifts.length === 0 ? <Message variant='info'>シフトがありません</Message> :\n                            <Table striped hover responsive className='table-sm border' >\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>PERIOD</th>\n                                        <th>STATUS</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {shifts.map((shift) => (\n                                        <tr key={shift._id}>\n                                            <td>{shift._id}</td>\n                                            <td>{shift.period_start} {' '} ~ {' '}{shift.period_end}</td>\n                                            <td>{shift.is_confirmed ? '確定' : '未確定'}</td>\n                                            <td>\n                                                { shift.is_confirmed ? \n                                                    <LinkContainer to={`/demo/shifts/confirm/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-primary'>詳細</Button>\n                                                    </LinkContainer> \n                                                    :\n                                                    <LinkContainer to={`/demo/shifts/update/${shift._id}`}>\n                                                        <Button className='btn-sm' variant='outline-info'>更新</Button>\n                                                    </LinkContainer> \n                                                }\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>          \n                        }\n                        \n                    </Col>\n                }\n\n\n\n                {profileLoading ? <Loader /> :\n                    <Col md={7} sm={12} className='py-2'>\n\n                    <Row>\n                        <Col md ={10} sm={10} xs={10}>\n                            <h4>プロフィール</h4>\n                        </Col>\n                        <Col md={2} sm={2} xs={2} className='m-0 px-0 pb-2 text-center'>\n                            <LinkContainer to={'/demo/update/profile'}>\n                                    <Button variant='outline-secondary'className='btn-sm'>編集</Button>\n                            </LinkContainer>\n                        </Col>\n                    </Row>\n                        \n\n\n                        <Table striped hover responsive size='sm' className='border'>\n                            <thead>\n                                <tr>\n                                    <th>Key</th>\n                                    <th>Value</th>\n                                    <th>Remarks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>{profile._id}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>名前</td>\n                                    <td>{profile.name}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>職務</td>\n                                    <td>{profile.duty}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>セクション</td>\n                                    <td>{profile.section}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>雇用形態</td>\n                                    <td>{profile.employment_status}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>研修中</td>\n                                    <td>{profile.is_rookie ? '研修中' : '修了'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>オープン</td>\n                                    <td>{profile.is_open_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>10時締め</td>\n                                    <td>{profile.is_pre_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>締め</td>\n                                    <td>{profile.is_close_staff ? '可' : '不可'}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 業務開始時間</td>\n                                    <td> {profile.start_default.substring(0,5)}</td>\n                                    <td>提出時の初期値となります</td>\n                                </tr>\n                                <tr>\n                                    <td> 業務終了時間</td>\n                                    <td> {profile.end_default.substring(0,5)}</td>\n                                    <td>提出時の初期値となります</td>\n                                </tr>\n                                <tr>\n                                    <td> 週間希望シフト回数</td>\n                                    <td> 週{profile.desired_times_per_week}</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 希望就労時間</td>\n                                    <td> {profile.desired_working_time}h</td>\n                                    <td>シフト作成の参考にします</td>\n                                </tr>\n                                <tr>\n                                    <td> 通勤方法</td>\n                                    <td> {profile.commute}</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td> 最寄り駅</td>\n                                    <td> {profile.station}</td>\n                                    <td> 最短経路が交通費支給額です</td>\n                                </tr>\n                            \n                            </tbody>\n                        </Table>\n                    </Col>\n                } \n\n\n            </Row>\n\n            <h4>DEMO用コントローラー</h4>\n\n            <Container className='border'>\n                <FormContainer>\n\n                <Row className='m-3'>\n                    <p className='mb-0'>提出状態</p>\n                    <Button onClick={isSubmittedToTrue} variant='outline-info' disabled={isSubmitted}>提出済み</Button>\n                    <Button onClick={isSubmittedToFalse} variant='outline-danger' disabled={!isSubmitted}>未提出</Button>\n                </Row>\n                <Row className='m-3'>\n                    <p className='mb-0'>提出期限</p>\n                    \n                        <Button onClick={deadlineToDefault} variant='outline-secondary'>デフォルト</Button>\n                        <Button onClick={deadlineToEnd} variant='outline-secondary'>月末へ</Button>\n                        <Button onClick={deadlineToStart} variant='outline-secondary'>月始へ</Button>\n\n                </Row>\n                </FormContainer>\n                <Message variant='info'>\n                    ・Demoユーザーでは、「提出状態」と「提出期限」を自由に変更することができます。\n                    <br></br>\n                    ・一般のユーザーでは、「提出状態（来月分のシフト提出されているか）」と「提出期限」の状態管理を自動で行います。\n                </Message>\n            </Container>\n        </div>\n    )\n}\n\nexport default DemoProfileScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction BackToDemoProfile() {\n    return (\n        <Link to='/demo/profile' className='btn my-2' style={{ background: '#95a5a6'}}>\n            ＜\n        </Link>\n    )\n}\n\nexport default BackToDemoProfile\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useProfileDispatch, useProfileStore, useLoginStore } from '../context'\nimport { getProfile } from '../actions/userActions'\nimport { Form, Button} from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\nimport BackToDemoProfile from '../components/BackToDemoProfile'\n\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\n\n\nfunction DemoProfileUpdateScreen({history}) {\n    //local states\n    const [name, setName] = useState('')\n    const [duty, setDuty] = useState('')\n    const [section, setSection] = useState('')\n    const [employment, setEmployment] = useState('')\n    const [isRookie, setIsRookie] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [isPreClose, setIsPreClose] = useState(false)\n    const [isClose, setIsClose] = useState(false)\n    const [startDefault, setStartDefault] = useState('')\n    const [endDefault, setEndDefault] = useState('')\n    const [weeklyWork, setWeeklyWork] = useState('')\n    const [workTime, setWorkTime] = useState('')\n    const [commute, setCommute] = useState('')\n    const [station, setStation] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    //global states\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    const dispatch = useProfileDispatch()\n    const profileState = useProfileStore()\n    const { profile } = profileState\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            getProfile(dispatch, userInfo)\n\n            profile.name ? setName(profile.name) : setName('名前がありません')\n            profile.duty ? setDuty(profile.duty) : setDuty('')\n            profile.employment_status ? setEmployment(profile.employment_status) : setEmployment('')\n            profile.section ? setSection(profile.section) : setSection('')\n            profile.is_rookie ? setIsRookie(profile.is_rookie) : setIsRookie(false)\n            profile.is_open_staff ? setIsOpen(profile.is_open_staff) : setIsOpen(false)\n            profile.is_pre_close_staff ? setIsPreClose(profile.is_pre_close_staff) : setIsPreClose(false)\n            profile.is_close_staff ? setIsClose(profile.is_close_staff) : setIsClose(false)\n            profile.start_default ? setStartDefault(profile.start_default) : setStartDefault('')\n            profile.end_default ? setEndDefault(profile.end_default) : setEndDefault('')\n            profile.desired_times_per_week ? setWeeklyWork(profile.desired_times_per_week) : setWeeklyWork(0)\n            profile.desired_working_time ? setWorkTime(profile.desired_working_time) : setWorkTime(0)\n            profile.commute ? setCommute(profile.commute) : setCommute('')\n            profile.station ? setStation(profile.station) : setStation('')\n\n            setLoading(false)\n        }\n\n        if(!startDefault && !endDefault) {\n            setStartDefault(profile.start_default.substring(0,5))\n            setEndDefault(profile.end_default.substring(0,5))\n        }\n    }, [history, userInfo, dispatch])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/profile/`,\n            {\n                \"name\": name,\n                \"duty\": duty,\n                \"employment\": employment,\n                \"section\": section,\n                \"isRookie\": isRookie,\n                \"isOpen\": isOpen,\n                \"isPreClose\": isPreClose,\n                \"isClose\": isClose,\n                \"startDefault\": startDefault,\n                \"endDefault\": endDefault,\n                \"weeklyTime\": weeklyWork,\n                \"workTime\": workTime,\n                \"commute\": commute,\n                \"station\": station\n            },\n            config\n        )\n        history.push('/demo/profile')\n        \n    }\n\n    return (\n        <>\n            <BackToDemoProfile />\n            \n            {loading ? <Loader/> :\n            <FormContainer>\n                <Form onSubmit={submitHandler} className='border p-3'>\n                    <Form.Group controlId='name'>\n                        <Form.Label className='mt-3 mb-0'>名前</Form.Label>\n                        <Form.Control\n                            required\n                            disabled\n                            type='name'\n                            placeholder='名前を記入'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='duty'>\n                        <Form.Label className='mt-3 mb-0'>職務</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={duty}\n                            onChange={(e) => setDuty(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'アルバイトリーダー'}>アルバイトリーダー</option>\n                            <option value={'アルバイト'}>アルバイト</option>\n                            <option value={''}>「職務」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='employment'>\n                        <Form.Label className='mt-3 mb-0'>雇用形態</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={employment}\n                            onChange={(e) => setEmployment(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'正社員'}>正社員</option>\n                            <option value={'フリーター（週40時間）'}>フリーター（週40時間）</option>\n                            <option value={'フリーター（週20時間）'}>フリーター（週20時間）</option>\n                            <option value={'学生'}>学生</option>\n                            <option value={''}>「雇用形態」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='section'>\n                        <Form.Label className='mt-3 mb-0'>セクション</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={section}\n                            onChange={(e) => setSection(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'フロント'}>フロント</option>\n                            <option value={'キッチン'}>キッチン</option>\n                            <option value={'ドリンク'}>ドリンク</option>\n                            <option value={''}>「セクション」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isRookie'>\n                        <Form.Label className='mt-3 mb-0'>研修</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isRookie}\n                            onChange={() => setIsRookie(!isRookie)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>研修中</option>\n                            <option value={false}>完了</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='isOpen'>\n                        <Form.Label className={'mt-3 mb-0'}>オープン</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isOpen}\n                            onChange={() => setIsOpen(!isOpen)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isPreClose'>\n                        <Form.Label className='mt-3 mb-0'>10時締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isPreClose}\n                            onChange={() => setIsPreClose(!isPreClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='isClose'>\n                        <Form.Label className={'mt-3 mb-0'}>締め</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={isClose}\n                            onChange={() => setIsClose(!isClose)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={true}>可</option>\n                            <option value={false}>不可</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務開始時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='開始時間を選択'\n                        value={startDefault}\n                        min={new Date('01/01/2021 07:00 AM')}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setStartDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{cursor: 'pointer'}}\n                    ></TimePickerComponent>\n\n                    <Form.Label className='mt-3 mb-0'>通常業務終了時間</Form.Label>\n                    <TimePickerComponent\n                        placeholder='終了時間を選択'\n                        value={endDefault}\n                        min={new Date('01/01/2021 ' + startDefault)}\n                        format=\"HH:mm\"\n                        step={30}\n                        change={(e) => setEndDefault(e.text)}\n                        openOnFocus={true}\n                        strictMode={true}\n                        showClearButton={false}\n                        allowEdit={false}\n                        style={{ cursor: 'pointer' }}\n                    ></TimePickerComponent>\n\n                    <Form.Group controlId='weeklyWork'>\n                        <Form.Label className={'mt-3 mb-0'}>週間希望シフト回数</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={weeklyWork}\n                            onChange={(e) => setWeeklyWork(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={1}>1回</option>\n                            <option value={2}>2回</option>\n                            <option value={3}>3回</option>\n                            <option value={4}>4回</option>\n                            <option value={5}>5回</option>\n                            <option value={0}>「週間希望シフト回数」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='workTime'>\n                        <Form.Label className='mt-3 mb-0'>希望就労時間</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={workTime}\n                            onChange={(e) => setWorkTime(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={3}>3h</option>\n                            <option value={4}>4h</option>\n                            <option value={5}>5h</option>\n                            <option value={6}>6h</option>\n                            <option value={7}>7h</option>\n                            <option value={8}>8h</option>\n                            <option value={0}>「希望就労時間」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='commute'>\n                        <Form.Label className='mt-3 mb-0'>通勤方法</Form.Label>\n                        <Form.Control\n                            required\n                            as='select'\n                            value={commute}\n                            onChange={(e) => setCommute(e.target.value)}\n                            style={{cursor: 'pointer'}}\n                        >\n                            <option value={'電車'}>電車</option>\n                            <option value={'バス'}>バス</option>\n                            <option value={'徒歩'}>徒歩</option>\n                            <option value={'自転車'}>自転車</option>\n                            <option value={''}>「」を選択してください</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='station'>\n                        <Form.Label className='mt-3 mb-0'>最寄り駅</Form.Label>\n                        <Form.Control\n                            type='text'\n                            placeholder='最寄り駅を入力'\n                            value={station}\n                            onChange={(e) => setStation(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' size='lg' className='mt-4'>\n                        更新\n                    </Button>\n\n                </Form>\n            </FormContainer>\n            }\n        </>\n    )\n}\n\nexport default DemoProfileUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { useLoginStore, useShiftStore, useProfileStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemForm  from '../components/ShiftItemForm'\n\n\nimport BackToDemoProfile from '../components/BackToDemoProfile'\n\nfunction DemoShiftSubmitScreen({ history }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const profileState = useProfileStore()\n    const { profile } = profileState\n    const shiftState = useShiftStore()\n    const { shiftItems, period, isSubmitted } = shiftState\n\n    //Local States\n    const [remarks, setRemarks] = useState('')\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(period[0])()\n\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else if (isSubmitted) {\n            history.push('/demo/profile')\n        }\n\n    }, [userInfo, history, isSubmitted])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/shifts/shift/create/`,\n            {\n                'shiftItems': shiftItems,\n                'section': profile.section,\n                'periodStart': getStringDate(period[0]),\n                'periodEnd': getStringDate(period[1]),\n                'remarks': remarks,\n                'isSubmitted': true,\n            },\n            config\n        )\n        history.push('/demo/profile')\n    } \n\n    return (\n        <div>\n            <BackToDemoProfile/>\n            <h1 className='p-4'>新規シフト提出</h1>\n            \n            <div className='text-center'> \n                <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                    {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                </h4>\n\n                <Form onSubmit={submitHandler}>\n                    \n                    <Row className='my-5 border' >\n                        {month.map((week, i) => (\n                            <React.Fragment key={i}> \n                                {week.map((date, j) => (\n                                    <React.Fragment key={j}>\n                                        {date.getMonth() === month[0][6].getMonth() &&\n                                            <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                <Card  className='mx-auto my-2'>\n                                                    <Card.Header>\n                                                        {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                    </Card.Header>\n                                                    <Card.Body >    \n                                                        <ShiftItemForm date={getStringDate(date)}/>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                    }\n                                    </React.Fragment>\n                                ))}\n                            </React.Fragment>\n                        ))}\n                    </Row>\n\n                    <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n                </Form>\n\n            \n            </div>\n            \n        </div>\n    )\n}\n//空タグでkey属性をもたせたい場合、Fragmentを使う\n\nexport default DemoShiftSubmitScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { useLoginStore, useShiftStore} from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport  ShiftItemUpdateForm from '../components/ShiftItemUpdateForm'\n\nimport Loader from '../components/Loader'\nimport BackToDemoProfile from '../components/BackToDemoProfile'\n\n\nfunction DemoShiftUpdateScreen({ history, match }) {\n    \n    //global State\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    const shiftState = useShiftStore()\n    const { shiftItems } = shiftState\n    \n    //local\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n    const [remarks, setRemarks] = useState([])\n    const [month, setMonth] = useState([])\n    const [loading, setLoading] = useState(true)\n\n\n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    \n\n    //functions\n    const getStringDate = (dt = new Date()) => {\n        return dt.getFullYear() + '-' + ('0'+(dt.getMonth()+1)).slice(-2) + '-' + ('0'+dt.getDate()).slice(-2)\n    }\n\n    \n    \n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            \n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n                setRemarks(data.remarks)\n                setMonth(takeMonth(new Date(String(data.period_start)))())\n                setLoading(false)\n            }        \n            fetchShift()\n        }\n\n        \n    }, [userInfo, history, match, shiftId])\n    \n    const submitHandler = async(e) => {\n        e.preventDefault()\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\n            `/api/shifts/shift-update/${shiftId}/`,\n            {\n                'shiftItems': shiftItems,\n                'remarks': remarks,\n            },\n            config\n        )\n        history.push('/demo/profile')\n    } \n\n    return (\n        <div>\n            <BackToDemoProfile/>\n            <h1 className='p-4'>シフト更新</h1>\n            \n            {loading ? <Loader /> :\n            \n                <div className='text-center'> \n                    <h4 style={{ borderBottom: '1px solid', display: 'inline-block' }}>\n                        {month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}\n                    </h4>\n\n                    <Form onSubmit={submitHandler}>\n                        \n                        <Row className='my-5 border' >\n                            {month.map((week, i) => (\n                                <React.Fragment key={i}> \n                                    {week.map((date, j) => (\n                                        <React.Fragment key={j}>\n                                            {date.getMonth() === month[0][6].getMonth() &&\n                                                <Col className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>                                            \n                                                    <Card  className='mx-auto my-2'>\n                                                        <Card.Header>\n                                                            {date.getMonth() + 1} / {date.getDate()} ({ days[date.getDay()]})\n                                                        </Card.Header>\n                                                        <Card.Body >\n                                                            <ShiftItemUpdateForm\n                                                                date={getStringDate(date)}\n                                                                shiftItem={shift.shiftItems.find(element => element.date === getStringDate(date))}\n                                                            />\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                        }\n                                        </React.Fragment>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Row>\n\n                        <Row className='p-3 mb-5'>\n                            <Col md={8} >\n                                <Form.Group controlId='remarks'>\n                                    <Form.Label>備考</Form.Label>\n                                    <Form.Control\n                                        as='textarea'\n                                        row='5'\n                                        placeholder='今回のシフトに関してなにか希望があれば記述してください'\n                                        value={remarks}\n                                        onChange={(e) => setRemarks(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col md={4}　className='d-grid gap-2 mt-4'>\n                                <Button type='submit' variant='primary' size='lg'>\n                                    提出\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form>\n\n                \n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default DemoShiftUpdateScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { useLoginStore } from '../context'\n\nimport { takeMonth } from '../constants/month'\nimport { format } from 'date-fns'\n\nimport BackToDemoProfile from '../components/BackToDemoProfile'\n\n\nfunction DemoShiftConfirmScreen({ history, match }) {\n    \n    //for API\n    const shiftId = match.params.id\n    const [shift, setShift] = useState([])\n\n    const loginState = useLoginStore()\n    const { userInfo } = loginState\n    \n    //for Calender\n    const days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"]\n    const month = takeMonth(new Date(String(shift.period_start)))()\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchShift() { \n                const { data } = await axios.get(\n                    `/api/shifts/confirm/${shiftId}/`,\n                    config\n                )\n                setShift(data)\n            }\n            fetchShift()\n        }\n    }, [userInfo, history, match, shiftId])\n\n    return (\n        <div>\n            <BackToDemoProfile />\n\n            <h1 className='p-4'>シフト確認</h1>\n            {shift.shiftItems &&\n            <div className='text-center'> \n                <h4 style={{borderBottom:'1px solid', display:'inline-block'}}>{ month[0][6].getFullYear()}/{month[0][6].getMonth() + 1}</h4>\n                \n                <div>\n                    <Row className='text-center my-4' >\n                        {month.map((week) => (\n                            <React.Fragment key={week}>\n                            {week.map((x) => (\n                                <Col key={x} className='my-1' xs={6} sm={6} md={4} lg={3} xl={2}>\n                                    \n                                    <Card style={{width: '11rem', height:'10rem'}}>\n                                        <Card.Header>\n                                            {x.getMonth() + 1} / {x.getDate()} ({ days[x.getDay()]})\n                                        </Card.Header>\n                                        <Card.Body>\n                                            {shift.shiftItems.map((item) => (\n                                                <div key={item._id}>\n                                                    {item.date === format(x, 'yyyy-MM-dd') &&\n                                                        <div>\n                                                            <Card.Title style={{color: '#0405B5'}}><b>出勤</b></Card.Title>\n                                                            <Card.Text>\n                                                                {item.start_time.substring(0, 5)}\n                                                                {' '}~{' '}\n                                                                {item.end_time.substring(0, 5)}\n                                                            </Card.Text>\n                                                        </div>\n                                                    }\n                                                </div>\n                                            ))}\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </React.Fragment>\n                    ))}\n                    </Row>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default DemoShiftConfirmScreen\n","import React, { useEffect, useState} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore } from '../context'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\nfunction DemoUserListScreen({ history }) {\n    \n    const [users, setUsers] = useState([])\n    const [successDelete, setSuccessDelete] = useState(false)\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n        //for iOS/Safari bfCache\n        window.addEventListener('popstate', (e) => {\n            if (history.action === 'POP') {\n                history.go(0)\n            }\n        })\n        \n        if (userInfo && userInfo.email === 'demo@email.com') {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchUsers() { \n                const { data } = await axios.get(\n                    `/api/users/admin/getusers/`,\n                    config\n                )\n                setUsers(data)\n                setSuccessDelete(false)\n            }\n            fetchUsers()\n        } else {\n            history.push('/login')\n        }\n    }, [history, userInfo, successDelete])\n\n    const deleteHandler = () => {\n\n    }\n\n    return (\n        <div>\n            <h1>ユーザー管理</h1>\n            {!users ? <Loader /> :\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th>EDIT/DELETE</th>\n                        </tr>\n                    </thead>\n                    \n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>***</td>                                \n                                <td>{user.isAdmin ? (\n                                    <i className='fas fa-check' ></i>\n                                ) : (\n                                    <i className='fas fa-times' ></i>\n                                )}</td>\n\n                                <td>\n                                    <LinkContainer to={`user/${user._id}/edit`}>\n                                        <Button variant='light' className='btn-sm mx-2'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button  className='btn-sm mx-2'>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}        \n                    </tbody>\n                </Table>\n            }\n            <div className='mt-5'>\n                <Message variant='danger'>\n                    Demoユーザーでは、emailの参照/ユーザーの編集・削除は不可能。機能の閲覧のみできます。（管理者権限なし）\n                </Message>\n            </div>\n        </div>\n    )\n}\n\nexport default DemoUserListScreen\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nimport { useLoginStore } from '../context'\n\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\n\n\nfunction DemoUserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n    \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    \n    useEffect(() => {\n        if ( !name || !email ) {\n            async function fetchUser() { \n                const config = {\n                    headers: {\n                        'Content-type': 'application/json',\n                        Authorization : `Bearer ${userInfo.token}`\n                    }\n                }\n                const { data } = await axios.get(\n                    `/api/users/${userId}/`,\n                    config\n                )\n                setName(data.name)\n                setEmail(data.email)\n                setIsAdmin(data.isAdmin)\n            }\n            fetchUser()\n        }\n    }, [userInfo, history, userId])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n    \n        const { data } = await axios.put(\n            `api/users/admin/updateuser/${userId}/`,\n            {\n                'name': name,\n                'email': email,\n                'isAdmin': isAdmin\n            },\n            config\n        )\n        history.push('/admin/userlist')\n    }\n\n    return (\n        <div>\n            <Link to={'/demo/admin/userlist'} className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <FormContainer>\n                <h1>ユーザー情報更新</h1>\n    \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>ユーザー名</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            required\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>メールアドレス（ログインID）</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='***'\n                            required\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='idAdmin'>\n                        <Form.Label>※管理者権限</Form.Label>\n                        <Form.Check\n                            type='checkbox'\n                            placeholder='Is Admin'\n                            value={isAdmin}\n                            checked={isAdmin}\n                            onChange={(e) => setIsAdmin(e.target.checked)}\n                        ></Form.Check>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary' disabled>\n                        更新\n                    </Button>\n                </Form>\n                \n            </FormContainer>\n\n            <FormContainer>\n                <div className='mt-5'>\n                    <Message variant='danger'>\n                        Demoユーザーでは、閲覧のみ可能。（管理者権限なし）\n                    </Message>\n                </div>\n                <div className='mt-2'>\n                    <Message variant='info'>\n                        （※）管理者は、すべてのユーザー情報とシフト情報の閲覧・編集・削除が可能です。\n                        管理者権限の付与には注意してください。\n                    </Message>\n                </div>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default DemoUserEditScreen","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { useLoginStore } from '../context'\n\n\nfunction DemoShiftListScreen({ history }) {\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n        if (userInfo && userInfo.email === 'demo@email.com') {\n            //api call\n            console.log('useEffect')\n        } else {\n            history.push('/login')\n        }\n    }, [history, userInfo])\n    \n    return (\n        <div>\n            <Link to={'/demo/profile'} className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <h1>Shifts（開発中）</h1>\n        </div>\n    )\n}\n\nexport default DemoShiftListScreen\n","import React, { useEffect, useState} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useLoginStore } from '../context'\nimport Loader from '../components/Loader'\n\nfunction UserListScreen({ history }) {\n    \n    const [users, setUsers] = useState([])\n    const [successDelete, setSuccessDelete] = useState(false)\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n        //for iOS/Safari bfCache\n        window.addEventListener('popstate', (e) => {\n            if (history.action === 'POP') {\n                history.go(0)\n            }\n        })\n        \n        if (userInfo && userInfo.isAdmin) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchUsers() { \n                const { data } = await axios.get(\n                    `/api/users/admin/getusers/`,\n                    config\n                )\n                setUsers(data)\n                setSuccessDelete(false)\n            }\n            fetchUsers()\n        } else {\n            history.push('/login')\n        }\n    }, [history, userInfo, successDelete])\n\n    const deleteHandler = (id) => {\n        if (window.confirm(`このユーザー（ID=${id}）を削除してよろしいですか？`)) {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                    Authorization : `Bearer ${userInfo.token}`\n                }\n            }\n            async function fetchDeleteUser() { \n                const { data } = await axios.delete(\n                    `/api/users/admin/deleteuser/${id}/`,\n                    config\n                )\n                setSuccessDelete(true)\n            }\n            fetchDeleteUser()\n        }\n    }\n\n    return (\n        <div>\n            <h1>ユーザー管理</h1>\n            {!users ? <Loader /> :\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th>EDIT/DELETE</th>\n                        </tr>\n                    </thead>\n                    \n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>                                \n                                <td>{user.isAdmin ? (\n                                    <i className='fas fa-check' ></i>\n                                ) : (\n                                    <i className='fas fa-times' ></i>\n                                )}</td>\n\n                                <td>\n                                    <LinkContainer to={`user/${user._id}/edit`}>\n                                        <Button variant='light' className='btn-sm mx-2'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button  className='btn-sm mx-2' onClick={() => deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}        \n                    </tbody>\n                </Table>\n            }\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nimport { useLoginStore } from '../context'\n\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\n\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n    \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n    \n    useEffect(() => {\n        if ( !name || !email ) {\n            async function fetchUser() { \n                const config = {\n                    headers: {\n                        'Content-type': 'application/json',\n                        Authorization : `Bearer ${userInfo.token}`\n                    }\n                }\n                const { data } = await axios.get(\n                    `/api/users/${userId}/`,\n                    config\n                )\n                setName(data.name)\n                setEmail(data.email)\n                setIsAdmin(data.isAdmin)\n            }\n            fetchUser()\n        }\n    }, [userInfo, history, userId])\n\n    const submitHandler = async(e) => {\n        e.preventDefault()\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            }\n        }\n    \n        const { data } = await axios.put(\n            `api/users/admin/updateuser/${userId}/`,\n            {\n                'name': name,\n                'email': email,\n                'isAdmin': isAdmin\n            },\n            config\n        )\n        history.push('/admin/userlist')\n    }\n\n    return (\n        <div>\n            <Link to={'/admin/userlist'} className='btn my-2' style={{ background: '#999999'}}>\n                ＜ 戻る\n            </Link>\n            <FormContainer>\n                <h1>ユーザー情報更新</h1>\n    \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>ユーザー名</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter Name'\n                            required\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>メールアドレス（ログインID）</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='idAdmin'>\n                        <Form.Label>※管理者権限</Form.Label>\n                        <Form.Check\n                            type='checkbox'\n                            placeholder='Is Admin'\n                            value={isAdmin}\n                            checked={isAdmin}\n                            onChange={(e) => setIsAdmin(e.target.checked)}\n                        ></Form.Check>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary'>\n                        更新\n                    </Button>\n                </Form>\n                \n            </FormContainer>\n\n            <FormContainer>\n                <div className='mt-5'>\n                    <Message variant='info'>\n                        （※）管理者は、すべてのユーザー情報とシフト情報の閲覧・編集・削除が可能です。\n                        管理者権限の付与には注意してください。\n                    </Message>\n                </div>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\n\nimport { useLoginStore } from '../context'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nfunction ShiftListScreen({ history }) {\n\n    const loginState = useLoginStore()\n    const {userInfo} = loginState\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            //api call\n            console.log('useEffect')\n        } else {\n            history.push('/login')\n        }\n    }, [history, userInfo])\n    \n    return (\n        <div>\n            <h1>Shifts（開発中）</h1>\n            {/* {loading ? (\n                <Loader/>\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL PRICE</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    \n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>{order.totalPrice}</td>\n\n                                <td>{order.isPaid ? (\n                                    order.paidAt.substring(0,10)\n                                ) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}\n                                </td>\n\n                                <td>{order.isDelivered ? (\n                                    order.deliveredAt.substring(0,10)\n                                ) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}\n                                </td>\n\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button variant='light' className='btn-sm'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}        \n                    </tbody>\n                </Table>\n            )} */}\n        </div>\n    )\n}\n\nexport default ShiftListScreen\n","// import logo from './logo.svg';\nimport Header from './components/Header'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n\nimport HomeScreen from './screens/HomeScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ProfileUpdateScreen from './screens/ProfileUpdateScreen'\nimport { LoginProvider } from './context'\nimport { ProfileProvider } from './context'\nimport { ShiftProvider } from './context'\n\n\nimport ShiftConfirmScreen from './screens/ShiftConfirmScreen'\nimport ShiftUpdateScreen from './screens/ShiftUpdateScreen'\nimport ShiftSubmitScreen from './screens/ShiftSubmitScreen'\nimport ShiftItemForm from './components/ShiftItemForm'\nimport ShiftItemUpdateForm from './components/ShiftItemUpdateForm'\n\nimport DemoProfileScreen from './demo/DemoProfileScreen'\nimport DemoProfileUpdateScreen from './demo/DemoProfileUpdateScreen'\nimport DemoSubmitScreen from './demo/DemoSubmitScreen'\nimport DemoShiftUpdateScreen from './demo/DemoShiftUpdateScreen'\nimport DemoShiftConfirmScreen from './demo/DemoShiftConfirmScreen'\nimport DemoUserListScreen from './demo/DemoUserListScreen'\nimport DemoUserEditScreen from './demo/DemoUserEditScreen'\nimport DemoShiftListScreen from './demo/DemoShiftListScreen'\n\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ShiftListScreen from './screens/ShiftListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <LoginProvider>\n        <ShiftProvider>\n          <ProfileProvider>\n            <Header />\n        <main className='py-3'>\n          <Container>\n              <Route  path='/' component={HomeScreen} exact />\n              <Route path='/register' component={RegisterScreen} />\n              <Route path='/login' component={LoginScreen}/>\n              <Route path='/shifts/confirm/:id' component={ShiftConfirmScreen} />\n              \n                <Route path='/profile' component={ProfileScreen} />\n                <Route path='/update/profile' component={ProfileUpdateScreen}/>\n                <Route path='/shifts/test' component={ShiftItemForm}/>\n                <Route path='/update/test/:id' component={ShiftItemUpdateForm}/>\n                <Route path='/shifts/update/:id' component={ShiftUpdateScreen}/>\n                <Route path='/shifts/submit' component={ShiftSubmitScreen} />\n              \n                <Route path='/demo/profile' component={DemoProfileScreen} />\n                <Route path='/demo/update/profile' component={DemoProfileUpdateScreen} />\n                <Route path='/demo/shift/submit' component={DemoSubmitScreen} />\n                <Route path='/demo/shifts/update/:id' component={DemoShiftUpdateScreen} />\n                <Route path='/demo/shifts/confirm/:id' component={DemoShiftConfirmScreen} />\n                <Route path='/demo/admin/userlist/' component={DemoUserListScreen} />\n                <Route path='/demo/admin/user/:id/edit' component={DemoUserEditScreen} />\n                <Route path='/demo/admin/shiftlist' component={DemoShiftListScreen} /> \n\n                <Route path='/admin/userlist' component={UserListScreen} />\n                <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n                <Route path='/admin/shiftlist' component={ShiftListScreen} />\n\n          </Container>\n        </main>\n            </ProfileProvider>\n        </ShiftProvider>\n      </LoginProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './flatly.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}